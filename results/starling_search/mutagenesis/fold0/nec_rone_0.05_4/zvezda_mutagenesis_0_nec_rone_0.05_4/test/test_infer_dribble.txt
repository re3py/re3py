% Running on host: vladimirbenzen-VirtualBox

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[test/test_pos.txt, test/test_neg.txt, test/test_bk.txt, test/test_facts.txt]
%  for N=0: args[N]=test/test_pos.txt

% getInputArgWithDefaultValue: args=[test/test_pos.txt, test/test_neg.txt, test/test_bk.txt, test/test_facts.txt]
%  for N=1: args[N]=test/test_neg.txt

% getInputArgWithDefaultValue: args=[test/test_pos.txt, test/test_neg.txt, test/test_bk.txt, test/test_facts.txt]
%  for N=2: args[N]=test/test_bk.txt

% getInputArgWithDefaultValue: args=[test/test_pos.txt, test/test_neg.txt, test/test_bk.txt, test/test_facts.txt]
%  for N=3: args[N]=test/test_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../background.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 32,942 facts.
% Have read 19 examples from 'test' [test/test*].
% Have read 0 examples from 'test' [test/test*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 drugs_active(D)
%  targetPred:                drugs_active/1
%  targetArgTypes:            signature = [const], types = [+drugid]
%  targets:                   [drugs_active(D)]
%  targetPredicates:          [drugs_active/1]
%  targetArgSpecs:            [[D[+drugid]]]
%  variablesInTargets:        [[D]]

% Started collecting constants

% Collecting the types of constants.

%   *** WARNING ***  Constant '2' is already marked as being of types = [drugid];
%          type = 'atomid' may be added if not already known.
%  PredicateName = 'atoms_atom_type', from 'atoms_atom_type(2, 2, numeric1_bin8)',
%  which has types = [signature = [const, const, const], types = [+atomid, -drugid, +numeric1], signature = [const, const, const], types = [+atomid, +drugid, -numeric1], signature = [const, const, const], types = [-atomid, +drugid, +numeric1]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '3' is already marked as being of types = [atomid];
%          type = 'drugid' may be added if not already known.
%  PredicateName = 'atoms_atom_type', from 'atoms_atom_type(26, 3, numeric1_bin5)',
%  which has types = [signature = [const, const, const], types = [+atomid, -drugid, +numeric1], signature = [const, const, const], types = [+atomid, +drugid, -numeric1], signature = [const, const, const], types = [-atomid, +drugid, +numeric1]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '7' is already marked as being of types = [atomid, drugid];
%          type = 'nominal3' may be added if not already known.
%  PredicateName = 'bonds_bond_type', from 'bonds_bond_type(0, 2503, 2514, 7)',
%  which has types = [signature = [const, const, const, const], types = [+drugid, -atomid, +atomid, +nominal3], signature = [const, const, const, const], types = [+drugid, +atomid, -atomid, +nominal3], signature = [const, const, const, const], types = [+drugid, +atomid, +atomid, -nominal3], signature = [const, const, const, const], types = [-drugid, +atomid, +atomid, +nominal3]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '0' is already marked as being of types = [atomid, drugid];
%          type = 'ringid' may be added if not already known.
%  PredicateName = 'ring_atom', from 'ring_atom(0, 2525)',
%  which has types = [signature = [const, const], types = [+ringid, -atomid]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

%   *** WARNING ***  Constant '0' is already marked as being of types = [atomid, drugid, ringid];
%          type = 'ringstrucid' may be added if not already known.
%  PredicateName = 'ring_strucs_name', from 'ring_strucs_name(0, 0, benzene)',
%  which has types = [signature = [const, const, const], types = [-ringstrucid, +drugid, +nominal4], signature = [const, const, const], types = [+ringstrucid, +drugid, -nominal4]]
%   Other warnings with this predicate and this new type are not reported in order to keep this printout small.  Use dontComplainAboutMultipleTypes to override.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 982 milliseconds
% Time to collect examples: 0 seconds

% Read 19 pos examples and 0 neg examples.
% Time to init learnOneClause: 1 seconds
% Old dirtrain/models/

% Have 19 'raw' positive examples and kept 19.
% Have 0 'raw' negative examples and kept 0.
% No neg ex for drugs_active

% processing backup's for drugs_active
%  POS EX = 19
%  NEG EX = 0

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0

% Getting bRDN's target predicates.
% Did not learn a model for 'drugs_active' this run.
%   loadModel (#0): train/models/bRDNs/Trees/drugs_activeTree0.tree
%   loadModel (#1): train/models/bRDNs/Trees/drugs_activeTree1.tree
%   loadModel (#2): train/models/bRDNs/Trees/drugs_activeTree2.tree
%   loadModel (#3): train/models/bRDNs/Trees/drugs_activeTree3.tree
%   loadModel (#4): train/models/bRDNs/Trees/drugs_activeTree4.tree
%   loadModel (#5): train/models/bRDNs/Trees/drugs_activeTree5.tree
%   loadModel (#6): train/models/bRDNs/Trees/drugs_activeTree6.tree
%   loadModel (#7): train/models/bRDNs/Trees/drugs_activeTree7.tree
%   loadModel (#8): train/models/bRDNs/Trees/drugs_activeTree8.tree
%   loadModel (#9): train/models/bRDNs/Trees/drugs_activeTree9.tree
%   loadModel (#10): train/models/bRDNs/Trees/drugs_activeTree10.tree
%   loadModel (#11): train/models/bRDNs/Trees/drugs_activeTree11.tree
%   loadModel (#12): train/models/bRDNs/Trees/drugs_activeTree12.tree
%   loadModel (#13): train/models/bRDNs/Trees/drugs_activeTree13.tree
%   loadModel (#14): train/models/bRDNs/Trees/drugs_activeTree14.tree
%   loadModel (#15): train/models/bRDNs/Trees/drugs_activeTree15.tree
%   loadModel (#16): train/models/bRDNs/Trees/drugs_activeTree16.tree
%   loadModel (#17): train/models/bRDNs/Trees/drugs_activeTree17.tree
%   loadModel (#18): train/models/bRDNs/Trees/drugs_activeTree18.tree
%   loadModel (#19): train/models/bRDNs/Trees/drugs_activeTree19.tree
%   loadModel (#20): train/models/bRDNs/Trees/drugs_activeTree20.tree
%   loadModel (#21): train/models/bRDNs/Trees/drugs_activeTree21.tree
%   loadModel (#22): train/models/bRDNs/Trees/drugs_activeTree22.tree
%   loadModel (#23): train/models/bRDNs/Trees/drugs_activeTree23.tree
%   loadModel (#24): train/models/bRDNs/Trees/drugs_activeTree24.tree
%   loadModel (#25): train/models/bRDNs/Trees/drugs_activeTree25.tree
%   loadModel (#26): train/models/bRDNs/Trees/drugs_activeTree26.tree
%   loadModel (#27): train/models/bRDNs/Trees/drugs_activeTree27.tree
%   loadModel (#28): train/models/bRDNs/Trees/drugs_activeTree28.tree
%   loadModel (#29): train/models/bRDNs/Trees/drugs_activeTree29.tree
%   loadModel (#30): train/models/bRDNs/Trees/drugs_activeTree30.tree
%   loadModel (#31): train/models/bRDNs/Trees/drugs_activeTree31.tree
%   loadModel (#32): train/models/bRDNs/Trees/drugs_activeTree32.tree
%   loadModel (#33): train/models/bRDNs/Trees/drugs_activeTree33.tree
%   loadModel (#34): train/models/bRDNs/Trees/drugs_activeTree34.tree
%   loadModel (#35): train/models/bRDNs/Trees/drugs_activeTree35.tree
%   loadModel (#36): train/models/bRDNs/Trees/drugs_activeTree36.tree
%   loadModel (#37): train/models/bRDNs/Trees/drugs_activeTree37.tree
%   loadModel (#38): train/models/bRDNs/Trees/drugs_activeTree38.tree
%   loadModel (#39): train/models/bRDNs/Trees/drugs_activeTree39.tree
%   loadModel (#40): train/models/bRDNs/Trees/drugs_activeTree40.tree
%   loadModel (#41): train/models/bRDNs/Trees/drugs_activeTree41.tree
%   loadModel (#42): train/models/bRDNs/Trees/drugs_activeTree42.tree
%   loadModel (#43): train/models/bRDNs/Trees/drugs_activeTree43.tree
%   loadModel (#44): train/models/bRDNs/Trees/drugs_activeTree44.tree
%   loadModel (#45): train/models/bRDNs/Trees/drugs_activeTree45.tree
%   loadModel (#46): train/models/bRDNs/Trees/drugs_activeTree46.tree
%   loadModel (#47): train/models/bRDNs/Trees/drugs_activeTree47.tree
%   loadModel (#48): train/models/bRDNs/Trees/drugs_activeTree48.tree
%   loadModel (#49): train/models/bRDNs/Trees/drugs_activeTree49.tree
%  Done loading 50 models.
File: test/advice.txt doesnt exist.Hence no advice loaded

% for drugs_active |lookupPos| = 19
% for drugs_active |lookupNeg| = 0
% getJointExamples: |pos| = 19, |neg| = 0

% Starting inference in bRDN.
% Trees = 50

% Starting getMarginalProbabilities.
% No Gibbs sampling needed during inference.
 (Arithmetic) Mean Probability Assigned to Correct Output Class: 2.695/19.00 = 0.141851

 The weighted count of positive examples = 19.000 and the weighted count of negative examples = 0.000

printExamples: Writing out predictions (for Tuffy?) on 19 examples for 'drugs_active' to:
  test/results_drugs_active.db
 and to:
  test/query_drugs_active.db
%    No need to compress since small: test/query_drugs_active.db

% Computing Area Under Curves.
%Pos=19
%Neg=0
%LL:-37.10657459999541
%LL:-37.10657459999541

No negative examples in ComputeAUC.  Using AUC-ROC = 1.0 and AUC-PR = 1.0
% F1 = 0.0
% Threshold = 0.0

%   AUC ROC   = 1.000000
%   AUC PR    = 1.000000
%   CLL	      = -1.952978
%   Precision = NaN at threshold = 0.500
%   Recall    = 0.000000
%   F1        = NaN

% Total inference time (50 trees): 3.929 seconds.
