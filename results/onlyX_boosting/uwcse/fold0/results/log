Starting experiment
  Building node on depth 1
induce        : 0.00039400000000000546
statistics    : 0.00016900000000003024
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.0002569999999999517
statistics    : 0.000144000000000033
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00026999999999999247
statistics    : 0.00016199999999999548
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00024099999999999122
statistics    : 0.00014199999999997548
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00023899999999998922
statistics    : 0.00014100000000000223
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

Building tree 1 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13826500000000003
statistics    : 0.00020199999999992446
test value    : 0.11464500000000016
eval split    : 0.0011759999999998438
example values: 0.02894399999999825
find values   : 0.03642800000000068
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005879999999999774

Building tree 1 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13721499999999998
statistics    : 0.00020099999999995122
test value    : 0.11446400000000001
eval split    : 0.0011919999999998598
example values: 0.02887299999999987
find values   : 0.036443000000004
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006239999999999579

Building tree 1 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13602999999999998
statistics    : 0.00019899999999994922
test value    : 0.11364800000000053
eval split    : 0.0011430000000005602
example values: 0.028748000000005547
find values   : 0.03602899999999842
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006019999999999914

Building tree 1 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13907400000000003
statistics    : 8.999999999992347e-05
test value    : 0.1163289999999999
eval split    : 0.0010889999999998956
example values: 0.029230999999996565
find values   : 0.0347799999999997
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005309999999998372

Building tree 1 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1410769999999999
statistics    : 0.00022099999999980469
test value    : 0.11307800000000046
eval split    : 0.0011070000000001912
example values: 0.029100000000002013
find values   : 0.03440800000000266
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005470000000001862

Building tree 2 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13450099999999998
statistics    : 0.00019499999999994522
test value    : 0.11214700000000066
eval split    : 0.0011069999999979707
example values: 0.028617999999998256
find values   : 0.034622000000000375
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005770000000000497

Building tree 2 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1343509999999999
statistics    : 0.0002140000000001585
test value    : 0.11179500000000098
eval split    : 0.0011390000000002232
example values: 0.028530000000005273
find values   : 0.034551000000002
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005890000000001727

Building tree 2 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13655099999999987
statistics    : 0.00020200000000003548
test value    : 0.11307500000000092
eval split    : 0.0011770000000002057
example values: 0.029096000000003786
find values   : 0.03484599999999949
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005999999999999339

Building tree 2 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13505199999999995
statistics    : 0.000220000000000109
test value    : 0.11197499999999949
eval split    : 0.0011499999999995403
example values: 0.02874800000000377
find values   : 0.03421799999999964
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006070000000000242

Building tree 2 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1357680000000001
statistics    : 0.00019999999999997797
test value    : 0.11314000000000024
eval split    : 0.0011510000000001241
example values: 0.02893699999999999
find values   : 0.03484800000000221
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005940000000002055

Building tree 3 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13905100000000004
statistics    : 0.00019900000000006024
test value    : 0.11285699999999976
eval split    : 0.0011509999999987919
example values: 0.029011000000001452
find values   : 0.034454999999995906
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006129999999999747

Building tree 3 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1375860000000002
statistics    : 0.00020300000000017526
test value    : 0.11427799999999944
eval split    : 0.0011579999999993262
example values: 0.02939999999999765
find values   : 0.035015000000000907
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006009999999998517

Building tree 3 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13643699999999992
statistics    : 9.000000000014552e-05
test value    : 0.11414499999999972
eval split    : 0.0010900000000000354
example values: 0.029225999999988428
find values   : 0.03543799999999564
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005549999999998612

Building tree 3 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13579700000000017
statistics    : 0.00020499999999978868
test value    : 0.1129979999999966
eval split    : 0.001168000000000724
example values: 0.029060000000004305
find values   : 0.034505000000009556
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006170000000000897

Building tree 3 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13744800000000001
statistics    : 0.00021099999999973917
test value    : 0.11368899999999993
eval split    : 0.0011320000000019093
example values: 0.02918000000000065
find values   : 0.03473300000000634
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005709999999998772

Building tree 4 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.140625
statistics    : 0.0002199999999996649
test value    : 0.11667399999999661
eval split    : 0.0013280000000017722
example values: 0.03256300000000456
find values   : 0.03457700000000452
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0007190000000001362

Building tree 4 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13586600000000004
statistics    : 9.099999999984121e-05
test value    : 0.11346899999999893
eval split    : 0.001136000000000248
example values: 0.02907000000000126
find values   : 0.03444599999999998
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005699999999997374

Building tree 4 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13517599999999996
statistics    : 0.00020700000000006824
test value    : 0.11260700000000057
eval split    : 0.0011530000000012919
example values: 0.02885699999999769
find values   : 0.034447000000032535
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005959999999998189

Building tree 4 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13561400000000035
statistics    : 0.00020499999999978868
test value    : 0.11235300000000059
eval split    : 0.0011190000000005362
example values: 0.02886100000000802
find values   : 0.034216000000039326
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005719999999995729

Building tree 4 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.135332
statistics    : 0.00020200000000025753
test value    : 0.1122159999999992
eval split    : 0.001156000000000379
example values: 0.02871800000000002
find values   : 0.0344159999999909
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006159999999995058

Building tree 5 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1363249999999998
statistics    : 0.00021800000000027353
test value    : 0.11361000000000088
eval split    : 0.0011299999999989652
example values: 0.028831000000006046
find values   : 0.03442800000000057
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005939999999999834

Building tree 5 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1371389999999999
statistics    : 0.0002030000000003973
test value    : 0.1143450000000028
eval split    : 0.0011609999999993015
example values: 0.029323000000004207
find values   : 0.034656999999990834
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006180000000002295

Building tree 5 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.14510099999999992
statistics    : 0.00010399999999988196
test value    : 0.11825399999999986
eval split    : 0.0011379999999987511
example values: 0.029277000000007547
find values   : 0.034654000000017504
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005719999999995729

Building tree 5 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13486900000000013
statistics    : 9.499999999995623e-05
test value    : 0.11257199999999923
eval split    : 0.0011050000000007998
example values: 0.028717999999994248
find values   : 0.0344920000000295
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005429999999999602

Building tree 5 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13500099999999993
statistics    : 0.00022499999999947562
test value    : 0.11241900000000005
eval split    : 0.0011440000000026984
example values: 0.028877999999998405
find values   : 0.03422300000002876
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005930000000002877

Building tree 6 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1362899999999998
statistics    : 0.00020200000000025753
test value    : 0.11333899999999852
eval split    : 0.0011470000000013414
example values: 0.02913599999998784
find values   : 0.03447699999999676
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005810000000003868

Building tree 6 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13619099999999973
statistics    : 9.299999999967667e-05
test value    : 0.1133649999999995
eval split    : 0.0010830000000008333
example values: 0.02912599999997978
find values   : 0.034576999999946345
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005480000000006591

Building tree 6 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1403130000000008
statistics    : 0.00020400000000098117
test value    : 0.112483000000001
eval split    : 0.0011270000000012104
example values: 0.028959000000004842
find values   : 0.034247000000029004
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005829999999997781

Building tree 6 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.139227
statistics    : 0.00021700000000102193
test value    : 0.1165570000000038
eval split    : 0.0011639999999975004
example values: 0.029224000000008132
find values   : 0.03444500000001138
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006060000000012167

Building tree 6 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13751200000000008
statistics    : 9.10000000002853e-05
test value    : 0.11434500000000103
eval split    : 0.0011160000000032255
example values: 0.0294420000000164
find values   : 0.034988000000036656
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005530000000000257

Building tree 7 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1364460000000003
statistics    : 0.00020700000000051233
test value    : 0.11296399999999363
eval split    : 0.0011489999999962919
example values: 0.02876799999999946
find values   : 0.03452900000000714
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005960000000007071

Building tree 7 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13543899999999987
statistics    : 0.00020200000000070162
test value    : 0.11263300000000243
eval split    : 0.0011369999999990554
example values: 0.02881700000000631
find values   : 0.03449499999999617
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006009999999996296

Building tree 7 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1375220000000006
statistics    : 0.00020600000000037255
test value    : 0.11384700000000603
eval split    : 0.0011909999999968335
example values: 0.02927000000000124
find values   : 0.0345709999999988
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006220000000007886

Building tree 7 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1354760000000006
statistics    : 9.099999999939712e-05
test value    : 0.11299699999999557
eval split    : 0.001138999999999335
example values: 0.0289720000000111
find values   : 0.03449599999998654
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005520000000007741

Building tree 7 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14137699999999942
statistics    : 0.0002579999999996474
test value    : 0.11802599999999774
eval split    : 0.001164000000000165
example values: 0.029392000000001417
find values   : 0.03488799999997383
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005850000000000577

Building tree 8 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13703299999999974
statistics    : 0.00020399999999920482
test value    : 0.11353000000000169
eval split    : 0.0011629999999964724
example values: 0.02924300000001434
find values   : 0.034599000000009816
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006129999999995306

Building tree 8 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.136482
statistics    : 0.00020399999999920482
test value    : 0.11367399999999694
eval split    : 0.0011439999999991457
example values: 0.029039999999990407
find values   : 0.0347919999999835
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006040000000000489

Building tree 8 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13582800000000006
statistics    : 0.00021800000000027353
test value    : 0.11259099999999922
eval split    : 0.0011470000000004532
example values: 0.028924999999993872
find values   : 0.0341740000000037
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006079999999997199

Building tree 8 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13591399999999965
statistics    : 0.0001980000000001425
test value    : 0.11327899999999946
eval split    : 0.001148000000000593
example values: 0.029347000000011114
find values   : 0.03447999999997897
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000592000000000148

Building tree 8 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13505699999999976
statistics    : 0.00020199999999981344
test value    : 0.11252700000000182
eval split    : 0.0011059999999991632
example values: 0.029102000000004402
find values   : 0.0342109999999991
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000576000000000576

Building tree 9 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.136444
statistics    : 0.00021800000000027353
test value    : 0.11346100000000181
eval split    : 0.0011959999999993087
example values: 0.0291509999999926
find values   : 0.034423999999975585
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006479999999999819

Building tree 9 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14020999999999972
statistics    : 0.00020500000000023277
test value    : 0.11657700000000482
eval split    : 0.0011590000000012424
example values: 0.03239000000000569
find values   : 0.034541000000027466
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005870000000003373

Building tree 9 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13560200000000044
statistics    : 0.00023999999999890775
test value    : 0.11270000000000024
eval split    : 0.0011290000000006017
example values: 0.02895900000000573
find values   : 0.034406000000053893
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005750000000004363

Building tree 9 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1347890000000005
statistics    : 0.00020299999999995322
test value    : 0.11230199999999968
eval split    : 0.001100000000000989
example values: 0.02880199999999533
find values   : 0.034237999999970015
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005649999999999267

Building tree 9 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1356269999999995
statistics    : 0.00020199999999981344
test value    : 0.11278100000000091
eval split    : 0.0011499999999990962
example values: 0.028979999999990014
find values   : 0.0345529999999874
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.00059099999999912

Building tree 10 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1354230000000003
statistics    : 0.0001989999999993941
test value    : 0.11246300000000353
eval split    : 0.0011640000000046058
example values: 0.02898399999998791
find values   : 0.03425399999999179
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006079999999997199

Building tree 10 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1356510000000002
statistics    : 9.10000000002853e-05
test value    : 0.11326599999999765
eval split    : 0.0011089999999951416
example values: 0.02898299999998155
find values   : 0.03446899999999786
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005639999999997869

Building tree 10 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1397630000000003
statistics    : 0.0002089999999999037
test value    : 0.11709200000000397
eval split    : 0.0010939999999992622
example values: 0.029247000000001577
find values   : 0.03798500000001859
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005540000000001655

Building tree 10 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13775199999999987
statistics    : 0.00021299999999957464
test value    : 0.1137599999999983
eval split    : 0.0011830000000010443
example values: 0.029427999999988685
find values   : 0.03475600000008061
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006130000000004188

Building tree 10 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13633399999999973
statistics    : 0.00022400000000022402
test value    : 0.11330700000000249
eval split    : 0.00114099999999695
example values: 0.029067999999993432
find values   : 0.03454899999997796
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005739999999994083

Building tree 11 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13514099999999996
statistics    : 0.00020600000000037255
test value    : 0.11254299999999873
eval split    : 0.0011219999999987351
example values: 0.02882799999999275
find values   : 0.034281999999970836
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005670000000002062

Building tree 11 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14174600000000037
statistics    : 0.000204000000000093
test value    : 0.11364900000000056
eval split    : 0.0011460000000012016
example values: 0.02928000000000619
find values   : 0.03467499999999557
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005929999999993996

Building tree 11 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13516800000000018
statistics    : 0.00011700000000036681
test value    : 0.11271700000000084
eval split    : 0.0010749999999974946
example values: 0.028964999999992358
find values   : 0.03411999999999615
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005379999999997054

Building tree 11 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13920399999999944
statistics    : 0.00020700000000051233
test value    : 0.1162110000000025
eval split    : 0.0011259999999975179
example values: 0.02924600000000588
find values   : 0.03742100000002857
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005790000000009954

Building tree 11 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1377410000000001
statistics    : 0.0002030000000008414
test value    : 0.11439600000000727
eval split    : 0.0011349999999978877
example values: 0.029362000000001665
find values   : 0.034856000000052845
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005619999999995073

Building tree 12 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1360550000000007
statistics    : 0.0002030000000008414
test value    : 0.11304400000000392
eval split    : 0.0011219999999969588
example values: 0.029081000000017454
find values   : 0.03443000000001639
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005619999999986192

Building tree 12 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13675500000000085
statistics    : 0.0002049999999993446
test value    : 0.11376700000000461
eval split    : 0.0011769999999984293
example values: 0.029121000000039032
find values   : 0.03481700000008736
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005899999999989802

Building tree 12 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13668200000000041
statistics    : 0.00020300000000261775
test value    : 0.11342900000000178
eval split    : 0.0011510000000019005
example values: 0.029117000000018933
find values   : 0.034531000000072254
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005980000000000985

Building tree 12 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13644600000000118
statistics    : 0.00021800000000027353
test value    : 0.11322000000000543
eval split    : 0.0011530000000039564
example values: 0.029146999999930756
find values   : 0.034649999999963654
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000589000000001505

Building tree 12 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13641099999999895
statistics    : 0.00020100000000056184
test value    : 0.11375999999999564
eval split    : 0.0011169999999953717
example values: 0.028931999999986857
find values   : 0.03502399999997685
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005780000000008556

Building tree 13 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.14060700000000104
statistics    : 9.099999999939712e-05
test value    : 0.11777600000000454
eval split    : 0.0010790000000060473
example values: 0.02963099999996821
find values   : 0.034318000000006066
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005379999999988172

Building tree 13 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13643500000000053
statistics    : 0.00021599999999999397
test value    : 0.11349499999999502
eval split    : 0.0011360000000024684
example values: 0.029166000000028447
find values   : 0.03458699999998416
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005900000000007566

Building tree 13 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13460300000000025
statistics    : 0.0002099999999991553
test value    : 0.11220000000000674
eval split    : 0.0011179999999963997
example values: 0.028874999999992212
find values   : 0.0340449999999386
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005839999999999179

Building tree 13 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13508500000000012
statistics    : 9.000000000014552e-05
test value    : 0.1127009999999995
eval split    : 0.0011329999999976081
example values: 0.028878999999962573
find values   : 0.0345099999999956
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005689999999987094

Building tree 13 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1358630000000005
statistics    : 0.00020500000000112095
test value    : 0.1131950000000046
eval split    : 0.0011650000000003047
example values: 0.029138999999993587
find values   : 0.03443799999988428
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000612000000000279

Building tree 14 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13643599999999978
statistics    : 0.00023999999999979593
test value    : 0.11273200000000294
eval split    : 0.0011679999999980595
example values: 0.028801999999974015
find values   : 0.03426399999992391
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005830000000006663

Building tree 14 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13957700000000095
statistics    : 0.00020400000000186935
test value    : 0.11680499999998872
eval split    : 0.0011950000000009453
example values: 0.02911999999994208
find values   : 0.03785499999994002
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.00062400000000018

Building tree 14 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13691099999999956
statistics    : 0.0002069999999978478
test value    : 0.11363600000000851
eval split    : 0.0011279999999924684
example values: 0.029118999999989015
find values   : 0.034546000000023724
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005699999999997374

Building tree 14 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1371500000000001
statistics    : 0.0002059999999985962
test value    : 0.11361400000000899
eval split    : 0.001188999999996554
example values: 0.02920899999998383
find values   : 0.034648999999998153
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006009999999996296

Building tree 14 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13624599999999987
statistics    : 0.0002770000000005268
test value    : 0.11306799999999129
eval split    : 0.0011389999999984468
example values: 0.029107999999993694
find values   : 0.03435700000005504
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005920000000010361

Building tree 15 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1356219999999997
statistics    : 9.199999999864872e-05
test value    : 0.1132170000000059
eval split    : 0.0010890000000003397
example values: 0.02910199999996088
find values   : 0.03449699999990585
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005430000000004043

Building tree 15 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1362470000000009
statistics    : 9.399999999892827e-05
test value    : 0.11366100000000046
eval split    : 0.0011100000000006105
example values: 0.02936499999997899
find values   : 0.034427999999955716
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005699999999997374

Building tree 15 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13991500000000023
statistics    : 0.00021000000000270802
test value    : 0.1134759999999968
eval split    : 0.004453999999995517
example values: 0.029276000000013624
find values   : 0.034694000000008884
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005750000000013245

Building tree 15 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13550200000000068
statistics    : 8.999999999836916e-05
test value    : 0.11299900000000207
eval split    : 0.0010829999999977247
example values: 0.028954000000021907
find values   : 0.034546000000009514
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005530000000000257

Building tree 15 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13707899999999995
statistics    : 0.000226999999998867
test value    : 0.11350300000000146
eval split    : 0.001263999999995491
example values: 0.0291370000000164
find values   : 0.034555000000043634
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006129999999977542

Building tree 16 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13613500000000123
statistics    : 0.00022599999999783904
test value    : 0.11340700000000759
eval split    : 0.0010940000000019268
example values: 0.029036000000015605
find values   : 0.03471300000001065
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005459999999999354

Building tree 16 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14316599999999902
statistics    : 0.00020799999999887575
test value    : 0.11433000000000071
eval split    : 0.001142000000003307
example values: 0.029283000000024373
find values   : 0.034834000000056875
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005869999999994491

Building tree 16 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13779399999999953
statistics    : 0.00020199999999981344
test value    : 0.11505900000000224
eval split    : 0.001152999999996851
example values: 0.02931600000003165
find values   : 0.03559600000006036
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006070000000004683

Building tree 16 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13581600000000016
statistics    : 0.00019999999999775753
test value    : 0.11292699999999734
eval split    : 0.001182999999999268
example values: 0.029006999999946714
find values   : 0.03435699999993602
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000612000000000279

Building tree 16 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14007699999999979
statistics    : 0.00021500000000074238
test value    : 0.11718799999999696
eval split    : 0.0011499999999973198
example values: 0.03255399999999575
find values   : 0.034679000000013005
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005879999999987007

Building tree 17 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13589899999999844
statistics    : 0.0002099999999991553
test value    : 0.11277300000000778
eval split    : 0.0011699999999912336
example values: 0.028955000000026487
find values   : 0.03451300000001112
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006289999999999907

Building tree 17 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1370919999999991
statistics    : 0.00020399999999831664
test value    : 0.11325300000000205
eval split    : 0.0011390000000037759
example values: 0.029099000000003983
find values   : 0.034526000000047574
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000588000000000477

Building tree 17 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13841899999999896
statistics    : 9.400000000070463e-05
test value    : 0.11421300000001011
eval split    : 0.0011790000000058143
example values: 0.02933499999996947
find values   : 0.035106999999904076
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005819999999996384

Building tree 17 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1362849999999991
statistics    : 0.00020599999999681984
test value    : 0.11326599999999587
eval split    : 0.001154000000003208
example values: 0.029206000000000287
find values   : 0.0343460000000686
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006149999999998101

Building tree 17 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1397239999999993
statistics    : 0.000204000000000093
test value    : 0.11705799999999833
eval split    : 0.0011320000000072383
example values: 0.02917800000003723
find values   : 0.0377330000000331
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005939999999995393

Building tree 18 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1358289999999993
statistics    : 0.0002240000000011122
test value    : 0.11307100000000148
eval split    : 0.0011450000000010618
example values: 0.029060999999954262
find values   : 0.034294999999980647
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006050000000001887

Building tree 18 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13680299999999868
statistics    : 0.00022200000000083264
test value    : 0.11368200000000783
eval split    : 0.0011679999999980595
example values: 0.029223000000046184
find values   : 0.034717000000082265
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006099999999999994

Building tree 18 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1363120000000002
statistics    : 0.00019999999999953388
test value    : 0.11321399999999215
eval split    : 0.0011760000000045068
example values: 0.02902099999999308
find values   : 0.034418000000000504
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006149999999998101

Building tree 18 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13678200000000018
statistics    : 0.00019799999999747797
test value    : 0.11391500000000576
eval split    : 0.0011699999999947863
example values: 0.029198999999982433
find values   : 0.03477700000007289
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006099999999999994

Building tree 18 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13584499999999977
statistics    : 0.00020299999999906504
test value    : 0.11323499999999243
eval split    : 0.0011269999999985458
example values: 0.028900999999992294
find values   : 0.03454199999998764
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005899999999989802

Building tree 19 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13642100000000035
statistics    : 0.00020500000000112095
test value    : 0.11351899999999837
eval split    : 0.0011870000000016034
example values: 0.02923000000003384
find values   : 0.034671000000061625
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006170000000000897

Building tree 19 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13953400000000116
statistics    : 0.00021700000000102193
test value    : 0.11645099999998898
eval split    : 0.0011849999999977712
example values: 0.032150999999997154
find values   : 0.03445899999999291
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006430000000001712

Building tree 19 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13588899999999882
statistics    : 0.00019999999999953388
test value    : 0.1132679999999926
eval split    : 0.0011639999999939477
example values: 0.029056999999976796
find values   : 0.03443099999990196
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006039999999991608

Building tree 19 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13743900000000053
statistics    : 0.00022399999999933584
test value    : 0.11414800000000191
eval split    : 0.0011960000000037496
example values: 0.02933599999998293
find values   : 0.03488499999998851
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006049999999984124

Building tree 19 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13781099999999924
statistics    : 0.00022299999999830789
test value    : 0.11458899999999339
eval split    : 0.0011830000000028207
example values: 0.029431999999980363
find values   : 0.0348009999998915
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006249999999994316

Building tree 20 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1360209999999995
statistics    : 0.00020399999999831664
test value    : 0.11282000000000991
eval split    : 0.001152000000001152
example values: 0.029024000000005046
find values   : 0.03434200000000587
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006040000000009371

Building tree 20 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1363140000000005
statistics    : 0.00019999999999775753
test value    : 0.11357299999999881
eval split    : 0.0011480000000076984
example values: 0.028991999999975704
find values   : 0.03470099999996812
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005830000000006663

Building tree 20 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13869000000000042
statistics    : 0.00020699999999962415
test value    : 0.11584900000000609
eval split    : 0.0011160000000050019
example values: 0.028998000000013846
find values   : 0.03737200000000129
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005679999999994578

Building tree 20 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13697499999999962
statistics    : 0.00020799999999887575
test value    : 0.11376300000000406
eval split    : 0.0011690000000008638
example values: 0.029223999999958394
find values   : 0.03459499999996751
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006020000000006576

Building tree 20 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.137849000000001
statistics    : 0.00021599999999999397
test value    : 0.11399399999999815
eval split    : 0.0011380000000045243
example values: 0.02926699999997595
find values   : 0.03485800000003536
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005680000000012342

Building tree 21 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14334999999999987
statistics    : 0.00020299999999906504
test value    : 0.11384899999999831
eval split    : 0.0011439999999964812
example values: 0.029364999999986097
find values   : 0.034605000000020425
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005930000000002877

Building tree 21 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13801799999999886
statistics    : 0.00021399999999971442
test value    : 0.11404299999998813
eval split    : 0.0012609999999959598
example values: 0.029242999999999242
find values   : 0.03494300000003925
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000698999999999117

Building tree 21 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13682000000000016
statistics    : 0.00020299999999906504
test value    : 0.11377999999999133
eval split    : 0.001136999999996391
example values: 0.029275999999988755
find values   : 0.034757999999937894
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000558999999999088

Building tree 21 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13908200000000015
statistics    : 0.00020100000000056184
test value    : 0.11604100000000273
eval split    : 0.0011199999999966792
example values: 0.029140000000012378
find values   : 0.037382000000059534
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005670000000002062

Building tree 21 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13512500000000038
statistics    : 0.00010599999999882925
test value    : 0.11284400000000439
eval split    : 0.0010890000000003397
example values: 0.028979000000036947
find values   : 0.03439100000009887
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005439999999996559

Building tree 22 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1364370000000008
statistics    : 9.599999999920783e-05
test value    : 0.11362500000001319
eval split    : 0.0011369999999946145
example values: 0.0294420000000013
find values   : 0.0345690000000598
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005689999999987094

Building tree 22 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13585199999999986
statistics    : 9.499999999995623e-05
test value    : 0.11341200000001095
eval split    : 0.0011090000000049116
example values: 0.02921100000003385
find values   : 0.03464000000002443
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005689999999987094

Building tree 22 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13642100000000035
statistics    : 0.0002070000000014005
test value    : 0.11364000000000019
eval split    : 0.0011360000000042447
example values: 0.029184000000030963
find values   : 0.03474099999999325
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005959999999980425

Building tree 22 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13701399999999886
statistics    : 0.0002119999999976585
test value    : 0.11384900000000187
eval split    : 0.0011710000000011433
example values: 0.029287000000012497
find values   : 0.03477200000002334
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006079999999997199

Building tree 22 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14515399999999978
statistics    : 0.00020900000000168006
test value    : 0.11927699999999142
eval split    : 0.0012549999999933448
example values: 0.029901000000002398
find values   : 0.038719000000018156
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006310000000002702

Building tree 23 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14086600000000082
statistics    : 0.000204000000000093
test value    : 0.11654499999999857
eval split    : 0.0011979999999915947
example values: 0.030010000000018522
find values   : 0.03561000000019554
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000601000000001406

Building tree 23 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13587999999999845
statistics    : 0.00020699999999962415
test value    : 0.11310599999998772
eval split    : 0.0011680000000087176
example values: 0.029153000000007978
find values   : 0.034664000000031336
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005789999999983308

Building tree 23 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1364750000000008
statistics    : 0.0002040000000036457
test value    : 0.11340300000001236
eval split    : 0.0011699999999912336
example values: 0.02903899999996895
find values   : 0.03459199999998219
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006169999999983133

Building tree 23 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13720700000000008
statistics    : 9.199999999864872e-05
test value    : 0.11430500000000876
eval split    : 0.001091000000009501
example values: 0.02946700000007141
find values   : 0.03485200000005406
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005459999999999354

Building tree 23 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13744200000000006
statistics    : 0.00020900000000168006
test value    : 0.11451999999995977
eval split    : 0.0011330000000029372
example values: 0.029430000000097323
find values   : 0.03487899999998234
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005649999999981503

Building tree 24 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13700500000000204
statistics    : 0.0002190000000013015
test value    : 0.11318600000000245
eval split    : 0.0011960000000073023
example values: 0.029274999999980622
find values   : 0.03447299999986697
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006099999999982231

Building tree 24 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13780299999999812
statistics    : 0.00020899999999812735
test value    : 0.11388000000000531
eval split    : 0.001230000000003173
example values: 0.029461000000047477
find values   : 0.03473099999994744
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000634999999999053

Building tree 24 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13905099999999848
statistics    : 0.00022099999999980469
test value    : 0.11508199999999746
eval split    : 0.0011660000000013326
example values: 0.029777000000063225
find values   : 0.0351369999999811
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000589000000001505

Building tree 24 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13721100000000064
statistics    : 0.00021399999999971442
test value    : 0.11421499999996243
eval split    : 0.0011680000000033885
example values: 0.029174000000065092
find values   : 0.034759000000171625
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005949999999970146

Building tree 24 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13608799999999732
statistics    : 0.00020199999999803708
test value    : 0.11314999999998321
eval split    : 0.001161999999993668
example values: 0.029109000000051566
find values   : 0.03455000000003139
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006050000000037414

Building tree 25 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13808699999999874
statistics    : 0.00022400000000644127
test value    : 0.11448399999998671
eval split    : 0.0011760000000045068
example values: 0.02942699999993792
find values   : 0.0350489999999084
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006119999999967263

Building tree 25 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13919399999999982
statistics    : 0.00020500000000112095
test value    : 0.11640700000002724
eval split    : 0.001136999999996391
example values: 0.029068000000016525
find values   : 0.037700000000068457
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005999999999986017

Building tree 25 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1367510000000003
statistics    : 0.0002000000000030866
test value    : 0.11387300000000522
eval split    : 0.0011570000000027392
example values: 0.029332000000035663
find values   : 0.03493000000002766
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006070000000022446

Building tree 25 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13627900000000182
statistics    : 0.0002060000000021489
test value    : 0.11336299999998545
eval split    : 0.0011259999999957415
example values: 0.029119999999945634
find values   : 0.03470599999995372
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005870000000030018

Building tree 25 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13636499999999785
statistics    : 0.0002099999999991553
test value    : 0.1134769999999925
eval split    : 0.0011169999999935953
example values: 0.029102000000047923
find values   : 0.034701000000101345
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005639999999971224

Building tree 26 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14147799999999933
statistics    : 0.00020100000000056184
test value    : 0.11279699999999337
eval split    : 0.0011239999999936856
example values: 0.02911500000000089
find values   : 0.034372000000072234
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005689999999987094

Building tree 26 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1357140000000001
statistics    : 0.00019899999999495321
test value    : 0.1129839999999902
eval split    : 0.001136999999996391
example values: 0.028816000000002617
find values   : 0.03457099999998903
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005910000000000082

Building tree 26 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13759600000000205
statistics    : 0.00020199999999803708
test value    : 0.11405000000001664
eval split    : 0.0012259999999990612
example values: 0.02927300000001054
find values   : 0.034953000000079726
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006559999999993238

Building tree 26 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14044099999999915
statistics    : 0.00023100000000297882
test value    : 0.11690000000001888
eval split    : 0.00116500000000741
example values: 0.02936599999994982
find values   : 0.03778900000001073
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005959999999980425

Building tree 26 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13515600000000205
statistics    : 0.00019900000000561135
test value    : 0.11244799999999344
eval split    : 0.0011140000000011696
example values: 0.028868999999971834
find values   : 0.034389000000007997
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005760000000023524

Building tree 27 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13606199999999902
statistics    : 0.00021500000000074238
test value    : 0.11320500000002198
eval split    : 0.0011420000000015307
example values: 0.0291370000000164
find values   : 0.03446200000004751
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005980000000000985

Building tree 27 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13602800000000315
statistics    : 0.0002060000000021489
test value    : 0.11293300000000528
eval split    : 0.001137000000007049
example values: 0.02903999999990603
find values   : 0.03458999999997303
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005889999999979523

Building tree 27 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13752500000000012
statistics    : 0.00020899999999812735
test value    : 0.11364900000000944
eval split    : 0.0011800000000015132
example values: 0.029279999999999973
find values   : 0.034841000000032096
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006110000000028037

Building tree 27 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13804700000000025
statistics    : 0.00019899999999850593
test value    : 0.1142770000000084
eval split    : 0.001217000000021784
example values: 0.029459999999978947
find values   : 0.0349579999999996
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006060000000012167

Building tree 27 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13669900000000013
statistics    : 0.0002079999999970994
test value    : 0.11362899999999598
eval split    : 0.0011250000000089244
example values: 0.02906199999994641
find values   : 0.03479700000001884
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005810000000003868

Building tree 28 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13662200000000269
statistics    : 9.099999999762076e-05
test value    : 0.11381699999997608
eval split    : 0.0010900000000013677
example values: 0.029330999999984897
find values   : 0.03475000000008066
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000536000000000314

Building tree 28 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13757599999999925
statistics    : 0.0002059999999985962
test value    : 0.11379599999998646
eval split    : 0.0011380000000045243
example values: 0.029080000000064388
find values   : 0.03470600000005675
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005910000000000082

Building tree 28 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13681800000000166
statistics    : 0.00020500000000112095
test value    : 0.11390900000001025
eval split    : 0.0011529999999986273
example values: 0.029280000000007078
find values   : 0.03470800000014407
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005980000000000985

Building tree 28 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.135506000000003
statistics    : 0.0002150000000042951
test value    : 0.11269899999998856
eval split    : 0.001131000000004434
example values: 0.028891999999942186
find values   : 0.0344329999999573
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005870000000030018

Building tree 28 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13738799999999785
statistics    : 0.00029100000000070736
test value    : 0.11378600000000816
eval split    : 0.0011469999999853542
example values: 0.029292000000047835
find values   : 0.0347999999999864
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005899999999989802

Building tree 29 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1402390000000011
statistics    : 0.00021600000000177033
test value    : 0.11694200000001942
eval split    : 0.0011700000000089972
example values: 0.02903799999997858
find values   : 0.03492000000007778
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006170000000018661

Building tree 29 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13568500000000228
statistics    : 0.00020500000000112095
test value    : 0.11308000000001428
eval split    : 0.0011149999999950921
example values: 0.0290820000000771
find values   : 0.034440000000063975
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005490000000030193

Building tree 29 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13620400000000288
statistics    : 0.00019900000000205864
test value    : 0.11349799999999988
eval split    : 0.0011299999999963006
example values: 0.029038999999933424
find values   : 0.03464599999988849
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005790000000018836

Building tree 29 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1370730000000009
statistics    : 0.00019900000000205864
test value    : 0.11395200000001182
eval split    : 0.0011299999999998533
example values: 0.02928599999992798
find values   : 0.03471199999993857
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005899999999989802

Building tree 29 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13574099999999945
statistics    : 0.00021100000000373598
test value    : 0.11304199999999653
eval split    : 0.0011390000000055522
example values: 0.02906000000000475
find values   : 0.03438100000003885
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005910000000000082

Building tree 30 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13575799999999916
statistics    : 0.00019999999999953388
test value    : 0.11310499999999024
eval split    : 0.0011070000000117375
example values: 0.029104999999972847
find values   : 0.03452900000003467
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005699999999997374

Building tree 30 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1363519999999987
statistics    : 9.000000000014552e-05
test value    : 0.11352599999998247
eval split    : 0.0011440000000000339
example values: 0.02928700000007467
find values   : 0.03445799999992616
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005550000000020816

Building tree 30 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14301099999999778
statistics    : 0.0002110000000072887
test value    : 0.1183349999999912
eval split    : 0.0015239999999998588
example values: 0.030379999999954777
find values   : 0.0361319999999381
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0008640000000035286

Building tree 30 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13648799999999994
statistics    : 0.0002059999999985962
test value    : 0.11310700000000651
eval split    : 0.0011260000000063997
example values: 0.02905100000001326
find values   : 0.03460500000002398
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005899999999989802

Building tree 30 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13837199999999683
statistics    : 0.0002080000000006521
test value    : 0.11429200000000606
eval split    : 0.0011609999999997456
example values: 0.029426999999916603
find values   : 0.034800999999973214
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005710000000007653

Building tree 31 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13601099999999988
statistics    : 0.00020500000000112095
test value    : 0.11311999999999145
eval split    : 0.0011510000000001241
example values: 0.029075999999978563
find values   : 0.03444300000009548
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006070000000022446

Building tree 31 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13672599999999946
statistics    : 0.00010400000000032605
test value    : 0.11362900000000664
eval split    : 0.0010900000000120258
example values: 0.029214000000063578
find values   : 0.03486900000008575
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000534999999999286

Building tree 31 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14862600000000015
statistics    : 0.00021100000000018326
test value    : 0.11821599999998966
eval split    : 0.0011759999999938486
example values: 0.029492999999913394
find values   : 0.03521500000005773
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005949999999970146

Building tree 31 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13600800000000035
statistics    : 0.00020499999999756824
test value    : 0.11310100000000389
eval split    : 0.0011609999999855347
example values: 0.028987000000007868
find values   : 0.03462500000004809
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006050000000037414

Building tree 31 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13688199999999995
statistics    : 0.00021499999999718966
test value    : 0.11355999999999256
eval split    : 0.0011280000000120083
example values: 0.029010000000063485
find values   : 0.0346430000001412
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005710000000007653

Building tree 32 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13890899999999817
statistics    : 0.00020300000000617047
test value    : 0.11562700000000703
eval split    : 0.0011879999999990787
example values: 0.02983599999999953
find values   : 0.03534400000006954
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006109999999956983

Building tree 32 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13575699999999813
statistics    : 0.0002040000000036457
test value    : 0.11315999999998994
eval split    : 0.0011150000000021976
example values: 0.029100999999958077
find values   : 0.03459299999987664
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005670000000002062

Building tree 32 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13659599999999728
statistics    : 0.0002159999999946649
test value    : 0.11367299999999503
eval split    : 0.0011580000000002144
example values: 0.02911899999997658
find values   : 0.03483699999999246
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000581999999997862

Building tree 32 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.16073500000000251
statistics    : 0.00020500000000112095
test value    : 0.13319100000001427
eval split    : 0.0014190000000162684
example values: 0.033439999999881564
find values   : 0.04381600000013819
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006280000000025154

Building tree 32 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13718300000000028
statistics    : 0.00021399999999971442
test value    : 0.11389000000000138
eval split    : 0.0011490000000087264
example values: 0.029236000000011586
find values   : 0.03470400000000495
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006039999999991608

Building tree 33 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13569800000000143
statistics    : 0.00020300000000261775
test value    : 0.11279499999999132
eval split    : 0.0011479999999899348
example values: 0.02886399999993472
find values   : 0.034482000000089386
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000612000000000279

Building tree 33 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13699499999999887
statistics    : 0.00020499999999756824
test value    : 0.11363999999999663
eval split    : 0.001174999999999926
example values: 0.028900000000025017
find values   : 0.0347709999999708
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006120000000038317

Building tree 33 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13635200000000225
statistics    : 0.00020500000000467367
test value    : 0.11356000000000321
eval split    : 0.0011209999999977072
example values: 0.02896000000002985
find values   : 0.034968000000095145
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005839999999963652

Building tree 33 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1367830000000012
statistics    : 0.00024099999999904753
test value    : 0.11380400000000535
eval split    : 0.0011209999999977072
example values: 0.0291889999999988
find values   : 0.03482299999993543
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005749999999977717

Building tree 33 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14375799999999828
statistics    : 0.0002000000000030866
test value    : 0.11900100000001146
eval split    : 0.0012239999999934525
example values: 0.03062099999995027
find values   : 0.03650799999996934
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006070000000022446

Building tree 34 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14706300000000283
statistics    : 0.00020899999999812735
test value    : 0.12171699999997898
eval split    : 0.001443999999995782
example values: 0.031521999999835515
find values   : 0.03723299999999696
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0008070000000053312

Building tree 34 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13918299999999917
statistics    : 0.0002250000000003638
test value    : 0.11553199999999109
eval split    : 0.0012339999999859685
example values: 0.029685999999895074
find values   : 0.03549000000009883
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006790000000016505

Building tree 34 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.14649299999999954
statistics    : 9.100000000117348e-05
test value    : 0.12273099999999815
eval split    : 0.0011469999999924596
example values: 0.03187600000000401
find values   : 0.037445000000012385
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005640000000042278

Building tree 34 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14674400000000176
statistics    : 0.0002230000000018606
test value    : 0.12266599999999173
eval split    : 0.0012090000000135603
example values: 0.03153300000006709
find values   : 0.03742299999988319
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006050000000001887

Building tree 34 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13864399999999932
statistics    : 9.099999999762076e-05
test value    : 0.11565100000001038
eval split    : 0.0011180000000017287
example values: 0.0295850000000506
find values   : 0.03540699999990693
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005430000000004043

Building tree 35 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14380599999999788
statistics    : 0.00023499999999998522
test value    : 0.11953700000000822
eval split    : 0.0011770000000090874
example values: 0.033298999999896495
find values   : 0.03553899999998933
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005980000000000985

Building tree 35 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.2066180000000024
statistics    : 0.00017200000000272553
test value    : 0.17243599999999049
eval split    : 0.0013120000000022003
example values: 0.04918500000012216
find values   : 0.04917799999996575
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005999999999986017

Building tree 35 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1394549999999981
statistics    : 0.0002329999999979293
test value    : 0.11590800000000812
eval split    : 0.0011920000000067432
example values: 0.02989400000000586
find values   : 0.03544800000008763
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006099999999982231

Building tree 35 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1378629999999994
statistics    : 0.00024499999999960664
test value    : 0.11462400000000628
eval split    : 0.0011159999999890147
example values: 0.029367000000039667
find values   : 0.03506400000012633
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005690000000022621

Building tree 35 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1422150000000002
statistics    : 0.00021300000000223918
test value    : 0.11850399999998018
eval split    : 0.001261999999993435
example values: 0.030432999999874255
find values   : 0.03630599999980788
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006999999999983686

Building tree 36 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.137400999999997
statistics    : 0.00021499999999718966
test value    : 0.11414400000001734
eval split    : 0.0011859999999970228
example values: 0.0292290000000186
find values   : 0.03474600000005523
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006230000000009284

Building tree 36 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.25195400000000134
statistics    : 0.00024900000000371847
test value    : 0.21188400000001906
eval split    : 0.010605999999992122
example values: 0.041574000000089484
find values   : 0.07690800000009901
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005990000000011264

Building tree 36 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.3444429999999983
statistics    : 0.0002519999999996969
test value    : 0.30519699999999617
eval split    : 0.0018329999999942004
example values: 0.1077890000000643
find values   : 0.05037799999997361
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000890999999999309

Building tree 36 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.27237500000000026
statistics    : 0.0003280000000032146
test value    : 0.22379499999998131
eval split    : 0.0026660000000156003
example values: 0.05322499999990171
find values   : 0.06992000000000331
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.00098899999999702

Building tree 36 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.23224099999999837
statistics    : 0.0002859999999991203
test value    : 0.18133800000001443
eval split    : 0.0019329999999939673
example values: 0.04507999999997381
find values   : 0.06545299999995535
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0008599999999994168

Building tree 37 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.23514700000000133
statistics    : 0.00012699999999910005
test value    : 0.17340500000000603
eval split    : 0.0020609999999905426
example values: 0.04459199999996599
find values   : 0.05472800000024236
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0011180000000017287

Building tree 37 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1528010000000002
statistics    : 0.00029499999999416104
test value    : 0.12459000000000131
eval split    : 0.0013170000000179982
example values: 0.03215000000007251
find values   : 0.03836999999993651
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006620000000019388

Building tree 37 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.15680500000000208
statistics    : 0.00021099999999663055
test value    : 0.12916500000001108
eval split    : 0.0014649999999996055
example values: 0.03353999999994173
find values   : 0.03955599999997261
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0007209999999986394

Building tree 37 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.19061100000000053
statistics    : 0.0002460000000006346
test value    : 0.1571710000000266
eval split    : 0.0016150000000010323
example values: 0.03876799999989089
find values   : 0.04776299999986122
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0007509999999975037

Building tree 37 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.19972100000000026
statistics    : 0.0003470000000049822
test value    : 0.16274500000001169
eval split    : 0.0018080000000040286
example values: 0.04176999999999609
find values   : 0.05069999999999908
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0008279999999984966

Building tree 38 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.20800799999999953
statistics    : 0.00031999999999854367
test value    : 0.17050500000000923
eval split    : 0.0015840000000189036
example values: 0.04402700000005666
find values   : 0.052365999999970825
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0007219999999996674

Building tree 38 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1528470000000013
statistics    : 0.0002479999999991378
test value    : 0.1232020000000027
eval split    : 0.0012959999999964111
example values: 0.03190199999993837
find values   : 0.03784299999993124
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000634999999999053

Building tree 38 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1482639999999975
statistics    : 0.00022400000000288856
test value    : 0.12213199999998636
eval split    : 0.0012869999999871595
example values: 0.03173500000010776
find values   : 0.03714600000013135
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006350000000026057

Building tree 38 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13689899999999966
statistics    : 0.00020500000000112095
test value    : 0.1137910000000133
eval split    : 0.001136999999996391
example values: 0.029138000000003217
find values   : 0.034813999999876444
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000588000000000477

Building tree 38 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13537000000000177
statistics    : 0.00019999999999953388
test value    : 0.1128880000000052
eval split    : 0.0011130000000036944
example values: 0.028894000000022402
find values   : 0.03432799999991332
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005680000000012342

Building tree 39 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14179099999999778
statistics    : 0.0002080000000006521
test value    : 0.1181609999999722
eval split    : 0.001254000000002975
example values: 0.02945500000011947
find values   : 0.03496600000006822
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006909999999997751

Building tree 39 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13693299999999908
statistics    : 9.899999999873899e-05
test value    : 0.11358900000001171
eval split    : 0.0011339999999968597
example values: 0.029156000000025273
find values   : 0.03455900000006551
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005769999999998277

Building tree 39 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1360600000000005
statistics    : 9.400000000070463e-05
test value    : 0.11341099999999216
eval split    : 0.0011009999999913589
example values: 0.02897200000002087
find values   : 0.03440899999991487
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.00055799999999806

Building tree 39 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13602900000000062
statistics    : 0.0002060000000021489
test value    : 0.11313700000000182
eval split    : 0.0011609999999926401
example values: 0.029087000000025398
find values   : 0.03449899999992212
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006219999999999004

Building tree 39 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13673400000000058
statistics    : 0.00020299999999906504
test value    : 0.11400600000000338
eval split    : 0.0011759999999938486
example values: 0.029113000000009492
find values   : 0.03490500000023289
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006010000000031823

Building tree 40 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1365179999999988
statistics    : 0.00020500000000467367
test value    : 0.11345600000000644
eval split    : 0.001161000000006851
example values: 0.02903099999993941
find values   : 0.034457000000010396
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006149999999998101

Building tree 40 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13640399999999886
statistics    : 0.00020300000000261775
test value    : 0.11361600000000394
eval split    : 0.0011350000000085458
example values: 0.029331000000020424
find values   : 0.034471000000049656
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005900000000025329

Building tree 40 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.1402019999999986
statistics    : 0.00010200000000182285
test value    : 0.1174259999999947
eval split    : 0.0011160000000067782
example values: 0.02924599999998634
find values   : 0.03483499999992645
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005709999999972126

Building tree 40 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1384609999999995
statistics    : 0.00020900000000168006
test value    : 0.11474899999998911
eval split    : 0.0011800000000015132
example values: 0.029257000000047384
find values   : 0.03496599999995453
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006020000000042103

Building tree 40 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13753799999999927
statistics    : 0.0002059999999985962
test value    : 0.11347800000000063
eval split    : 0.001130000000003406
example values: 0.029030000000059175
find values   : 0.03467199999999693
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005799999999993588

Building tree 41 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13580099999999717
statistics    : 0.000204000000000093
test value    : 0.11310599999999482
eval split    : 0.0011439999999893757
example values: 0.02901500000003665
find values   : 0.03459400000005175
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006030000000016855

Building tree 41 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13639200000000073
statistics    : 0.00020699999999607144
test value    : 0.11358699999999544
eval split    : 0.0011510000000036769
example values: 0.0293190000000223
find values   : 0.03456300000002699
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006020000000006576

Building tree 41 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14123200000000224
statistics    : 0.00020699999999962415
test value    : 0.11772100000000307
eval split    : 0.001170999999999367
example values: 0.029242000000035517
find values   : 0.034995000000140664
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006070000000022446

Building tree 41 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13641199999999998
statistics    : 0.0002060000000021489
test value    : 0.11336699999998956
eval split    : 0.0011370000000106018
example values: 0.029086999999940133
find values   : 0.034497999999871354
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005700000000032901

Building tree 41 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13592700000000235
statistics    : 0.00021299999999513375
test value    : 0.11337300000000639
eval split    : 0.0011309999999973286
example values: 0.02893100000003912
find values   : 0.034567999999975285
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005850000000044986

Building tree 42 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1367900000000013
statistics    : 0.0002020000000015898
test value    : 0.11383199999998794
eval split    : 0.0011629999999875906
example values: 0.029371000000075753
find values   : 0.03478900000017404
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005939999999995393

Building tree 42 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13740000000000308
statistics    : 0.0002250000000003638
test value    : 0.11422999999999206
eval split    : 0.0012070000000079517
example values: 0.029349999999997323
find values   : 0.034918999999952405
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006079999999997199

Building tree 42 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14267699999999905
statistics    : 0.00023100000000297882
test value    : 0.11375400000000724
eval split    : 0.001186999999994498
example values: 0.02917999999989007
find values   : 0.0347669999999205
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006050000000001887

Building tree 42 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13517599999999774
statistics    : 9.000000000014552e-05
test value    : 0.11303100000000299
eval split    : 0.0010730000000052087
example values: 0.029007999999887346
find values   : 0.03442699999995824
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005380000000023699

Building tree 42 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13969100000000267
statistics    : 0.00020500000000112095
test value    : 0.11344300000000374
eval split    : 0.0011070000000010793
example values: 0.029198000000036473
find values   : 0.03451100000012275
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000560000000000116

Building tree 43 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13702299999999923
statistics    : 0.00020399999999654028
test value    : 0.11362199999998879
eval split    : 0.001139999999995922
example values: 0.029150999999998817
find values   : 0.034580000000097755
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005859999999984211

Building tree 43 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13692999999999955
statistics    : 0.0002060000000021489
test value    : 0.11396399999999574
eval split    : 0.0011169999999829372
example values: 0.029385000000086592
find values   : 0.034763000000083366
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005729999999992685

Building tree 43 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13623099999999866
statistics    : 0.0002020000000015898
test value    : 0.11340999999999468
eval split    : 0.0011669999999952552
example values: 0.029150000000022658
find values   : 0.034434999999952254
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006009999999996296

Building tree 43 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1362339999999982
statistics    : 0.00020100000000411455
test value    : 0.11352299999997939
eval split    : 0.0011559999999946058
example values: 0.0289779999999773
find values   : 0.03461599999990739
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005859999999984211

Building tree 43 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13629800000000003
statistics    : 0.00020300000000261775
test value    : 0.11326299999998568
eval split    : 0.0011270000000074276
example values: 0.02899200000005564
find values   : 0.034701000000087134
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005839999999999179

Building tree 44 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13757299999999972
statistics    : 0.00021800000000027353
test value    : 0.11355299999999247
eval split    : 0.00117800000000301
example values: 0.02905799999997072
find values   : 0.034676999999998515
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005960000000015953

Building tree 44 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1363449999999986
statistics    : 0.00021800000000382624
test value    : 0.11340200000000777
eval split    : 0.001125999999988636
example values: 0.02922099999998551
find values   : 0.034694000000101255
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005899999999954275

Building tree 44 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13647699999999574
statistics    : 0.00020299999999551233
test value    : 0.11324699999999055
eval split    : 0.001152000000001152
example values: 0.028906999999971816
find values   : 0.03452599999980421
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006119999999967263

Building tree 44 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13631300000000124
statistics    : 0.00022199999999372722
test value    : 0.11383600000001337
eval split    : 0.001100000000000989
example values: 0.029150000000029763
find values   : 0.03466499999990447
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005590000000026407

Building tree 44 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13562200000000502
statistics    : 9.000000000014552e-05
test value    : 0.11318900000002685
eval split    : 0.0011039999999979955
example values: 0.02909599999991741
find values   : 0.034304999999932306
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005379999999988172

Building tree 45 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13760800000000017
statistics    : 0.00020799999999354668
test value    : 0.11423900000001197
eval split    : 0.0011730000000227392
example values: 0.029234000000201377
find values   : 0.034907000000025334
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006089999999971951

Building tree 45 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.2256009999999975
statistics    : 0.0002080000000006521
test value    : 0.19845100000004123
eval split    : 0.0012889999999856627
example values: 0.03208900000028336
find values   : 0.037819000000204994
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006249999999994316

Building tree 45 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14309000000000083
statistics    : 0.00022699999999531428
test value    : 0.11735100000003484
eval split    : 0.0012099999999861666
example values: 0.030205000000087523
find values   : 0.03586600000026152
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006139999999987822

Building tree 45 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1432440000000028
statistics    : 0.00022899999999026477
test value    : 0.1178849999999656
eval split    : 0.0012670000000056802
example values: 0.030164999999904296
find values   : 0.03609299999992999
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006350000000026057

Building tree 45 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13725400000000576
statistics    : 0.00020499999999401552
test value    : 0.11369300000001914
eval split    : 0.0011619999999794572
example values: 0.029064000000012413
find values   : 0.034631000000103995
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006169999999912079

Building tree 46 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13670700000000124
statistics    : 0.00020600000000570162
test value    : 0.11390199999999595
eval split    : 0.001143999999960954
example values: 0.029169999999950846
find values   : 0.034741000000053646
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005909999999929028

Building tree 46 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13630500000000012
statistics    : 0.000213999999992609
test value    : 0.11325600000003533
eval split    : 0.0011610000000246146
example values: 0.02910499999992311
find values   : 0.03457600000010075
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006139999999987822

Building tree 46 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1465999999999994
statistics    : 0.000206999999988966
test value    : 0.11699599999999322
eval split    : 0.0012699999999910005
example values: 0.030008000000172785
find values   : 0.035888000000007025
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006520000000023174

Building tree 46 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13618999999999915
statistics    : 9.100000000472619e-05
test value    : 0.11328799999996875
eval split    : 0.001130000000003406
example values: 0.029142999999876906
find values   : 0.03449599999994746
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005509999999944171

Building tree 46 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13654400000000066
statistics    : 0.0002210000000033574
test value    : 0.11327200000002335
eval split    : 0.0011770000000339564
example values: 0.02894699999987438
find values   : 0.03452700000003972
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006090000000043005

Building tree 47 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13644699999999688
statistics    : 0.00020399999999654028
test value    : 0.1137099999999549
eval split    : 0.0011470000000102232
example values: 0.02920000000003853
find values   : 0.034598999999893465
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005830000000059954

Building tree 47 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13648900000000452
statistics    : 0.0002599999999972624
test value    : 0.11328799999997585
eval split    : 0.0011499999999671218
example values: 0.02905099999988181
find values   : 0.034669999999934475
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006050000000001887

Building tree 47 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14371099999999615
statistics    : 0.000206999999988966
test value    : 0.11852399999997942
eval split    : 0.0012599999999878264
example values: 0.03269899999975223
find values   : 0.03521299999998462
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006389999999925067

Building tree 47 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1449000000000069
statistics    : 0.00020900000000523278
test value    : 0.11987100000007445
eval split    : 0.0014120000000232835
example values: 0.030921000000205368
find values   : 0.03679799999978428
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0007779999999968368

Building tree 47 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.15077700000000505
statistics    : 0.00023999999999801958
test value    : 0.12333599999997347
eval split    : 0.0014450000000181262
example values: 0.031740000000120006
find values   : 0.037822000000126366
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0008010000000027162

Building tree 48 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13747000000000043
statistics    : 0.00020800000000775754
test value    : 0.11359899999998646
eval split    : 0.0011769999999984293
example values: 0.02920399999996448
find values   : 0.034434000000132414
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006050000000001887

Building tree 48 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1432360000000017
statistics    : 0.00020899999999102192
test value    : 0.1141189999999952
eval split    : 0.001191000000034137
example values: 0.029237999999942588
find values   : 0.03493299999991706
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005990000000011264

Building tree 48 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13911500000000387
statistics    : 0.0002190000000013015
test value    : 0.11520999999999049
eval split    : 0.0012070000000221626
example values: 0.029507000000002392
find values   : 0.03520399999990076
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006090000000043005

Building tree 48 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14498000000000388
statistics    : 0.00020500000000112095
test value    : 0.12024400000000668
eval split    : 0.0012570000000309278
example values: 0.030036000000222884
find values   : 0.03872000000035314
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006330000000005498

Building tree 48 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13743300000000147
statistics    : 0.00020299999999906504
test value    : 0.11419999999997543
eval split    : 0.0011779999999603774
example values: 0.029299000000030162
find values   : 0.03483799999993664
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006330000000005498

Building tree 49 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13686899999999724
statistics    : 0.00020499999999401552
test value    : 0.11392300000001399
eval split    : 0.0011369999999999436
example values: 0.02925500000006309
find values   : 0.03461800000013682
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005919999999974834

Building tree 49 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13699900000000298
statistics    : 0.0002040000000036457
test value    : 0.11394100000003249
eval split    : 0.0011670000000165714
example values: 0.029252999999997087
find values   : 0.03465999999995972
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.000618000000002894

Building tree 49 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13736500000000262
statistics    : 0.00021499999999718966
test value    : 0.11424799999998925
eval split    : 0.0011220000000236041
example values: 0.02922399999989267
find values   : 0.03482800000001163
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005700000000032901

Building tree 49 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13638999999999868
statistics    : 0.00022500000000746923
test value    : 0.11359899999997936
eval split    : 0.0011669999999810443
example values: 0.02903600000004758
find values   : 0.034549000000062335
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006060000000047694

Building tree 49 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13656300000000243
statistics    : 0.0002099999999956026
test value    : 0.11368000000002354
eval split    : 0.0011259999999708725
example values: 0.029284999999994454
find values   : 0.034443999999844266
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005699999999961847

Building tree 50 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.14063900000000018
statistics    : 0.00022799999999989495
test value    : 0.11742000000001696
eval split    : 0.0011549999999687088
example values: 0.029420999999992148
find values   : 0.03476999999964647
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005870000000030018

Building tree 50 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13872300000000592
statistics    : 0.00020700000000317686
test value    : 0.11502300000000787
eval split    : 0.0011739999999704764
example values: 0.02941599999996214
find values   : 0.0351280000000429
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005789999999947781

Building tree 50 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.13718999999999681
statistics    : 0.00020399999999654028
test value    : 0.11436999999996544
eval split    : 0.0011330000000455698
example values: 0.029390999999996836
find values   : 0.034614000000026124
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005769999999998277

Building tree 50 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.13829100000000238
statistics    : 9.000000000014552e-05
test value    : 0.11552999999995706
eval split    : 0.0011589999999870315
example values: 0.029794000000023857
find values   : 0.03516400000012254
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0006010000000031823

Building tree 50 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.1396569999999997
statistics    : 0.00022100000001046283
test value    : 0.11517499999999359
eval split    : 0.0011650000000500427
example values: 0.029423000000086574
find values   : 0.034977000000012026
nominal tests : 0
nom. t. time  : 0
numeric tests : 2
num t. time   : 0.0005949999999970146


