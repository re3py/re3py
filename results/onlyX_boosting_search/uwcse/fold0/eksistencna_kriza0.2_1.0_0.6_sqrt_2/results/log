Starting GS experiment
  Building node on depth 1
induce        : 0.00029400000000001647
statistics    : 8.799999999997699e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00017600000000000948
statistics    : 7.499999999999174e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00016900000000003024
statistics    : 7.40000000000185e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00017699999999998273
statistics    : 7.40000000000185e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00016300000000002424
statistics    : 7.499999999999174e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

Building tree 1 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07579800000000003
statistics    : 0.00011900000000003574
test value    : 0.05275100000000016
eval split    : 0.0010330000000000616
example values: 0.012913000000001673
find values   : 0.017264000000000446
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005059999999999509

Building tree 1 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07410099999999997
statistics    : 0.000136000000000025
test value    : 0.05208600000000008
eval split    : 0.0010250000000001647
example values: 0.012930999999999637
find values   : 0.016679000000001276
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005040000000000044

Building tree 1 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07458300000000001
statistics    : 0.00011399999999994748
test value    : 0.05237500000000039
eval split    : 0.0010310000000003372
example values: 0.012952999999999493
find values   : 0.016842000000000634
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005060000000001175

Building tree 1 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07979499999999995
statistics    : 0.00012799999999990597
test value    : 0.05745200000000028
eval split    : 0.0009850000000006798
example values: 0.013053000000000092
find values   : 0.021517999999999815
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00046799999999991293

Building tree 1 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07860800000000001
statistics    : 5.099999999991223e-05
test value    : 0.05149199999999965
eval split    : 0.0009829999999999561
example values: 0.012974000000000041
find values   : 0.01590700000000078
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00045399999999995444

Building tree 2 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07414700000000007
statistics    : 0.00012000000000012001
test value    : 0.05173399999999939
eval split    : 0.0011019999999996033
example values: 0.013094999999998969
find values   : 0.01565300000000036
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005479999999999929

Building tree 2 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.073797
statistics    : 0.00012100000000003774
test value    : 0.051342999999999805
eval split    : 0.0010500000000004395
example values: 0.012935000000000252
find values   : 0.015697999999999435
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005009999999999737

Building tree 2 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07446699999999995
statistics    : 0.00011899999999986921
test value    : 0.051721000000000905
eval split    : 0.001124000000000347
example values: 0.01313599999999815
find values   : 0.015696999999998962
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005700000000000705

Building tree 2 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07311200000000007
statistics    : 0.0001129999999998077
test value    : 0.051160000000000094
eval split    : 0.0010390000000011224
example values: 0.012891999999998238
find values   : 0.015665999999999958
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005060000000001175

Building tree 2 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07283000000000017
statistics    : 0.00011600000000022703
test value    : 0.05096800000000168
eval split    : 0.0009999999999983356
example values: 0.012924000000001268
find values   : 0.01551800000000303
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004690000000000527

Building tree 3 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07321299999999997
statistics    : 0.00011600000000000499
test value    : 0.05103000000000035
eval split    : 0.0010559999999995018
example values: 0.012907999999997921
find values   : 0.01552400000000187
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004939999999999944

Building tree 3 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07312099999999999
statistics    : 0.00011300000000002974
test value    : 0.05137000000000058
eval split    : 0.0010379999999994283
example values: 0.013075000000000836
find values   : 0.015592000000001827
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005109999999999282

Building tree 3 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07342300000000002
statistics    : 5.0000000000105516e-05
test value    : 0.05171200000000109
eval split    : 0.000994999999999635
example values: 0.013092000000003212
find values   : 0.0158959999999988
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00045900000000020924

Building tree 3 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07510700000000003
statistics    : 0.0001349999999997742
test value    : 0.05203999999999942
eval split    : 0.0010910000000012854
example values: 0.01315900000000525
find values   : 0.015741000000001337
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005530000000000257

Building tree 3 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08461699999999994
statistics    : 0.00013599999999991397
test value    : 0.052977999999998415
eval split    : 0.0012260000000006155
example values: 0.01339199999999896
find values   : 0.016413000000000455
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006460000000001465

Building tree 4 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08399500000000004
statistics    : 0.00018399999999996197
test value    : 0.058784999999999865
eval split    : 0.0012659999999993232
example values: 0.015059999999997409
find values   : 0.017831999999997405
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005979999999998764

Building tree 4 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07536699999999996
statistics    : 0.0001260000000000705
test value    : 0.05182700000000029
eval split    : 0.0010829999999999451
example values: 0.01313799999999854
find values   : 0.015943000000004037
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005359999999998699

Building tree 4 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07571299999999992
statistics    : 5.599999999983396e-05
test value    : 0.05215899999999851
eval split    : 0.001116000000000117
example values: 0.013166000000004674
find values   : 0.015764000000004774
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005269999999999442

Building tree 4 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07707299999999995
statistics    : 0.00013700000000005375
test value    : 0.05284799999999912
eval split    : 0.0011249999999998206
example values: 0.013513000000000552
find values   : 0.016136999999994295
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005709999999998772

Building tree 4 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07574100000000006
statistics    : 0.00012500000000015277
test value    : 0.05188399999999915
eval split    : 0.0011329999999996065
example values: 0.013069000000005104
find values   : 0.01597300000000157
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005649999999997046

Building tree 5 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07798700000000003
statistics    : 0.0001389999999998892
test value    : 0.053118
eval split    : 0.0011619999999998853
example values: 0.013613000000000097
find values   : 0.01619000000000126
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005580000000000584

Building tree 5 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07551699999999983
statistics    : 0.00015799999999988046
test value    : 0.051888999999999186
eval split    : 0.00116599999999778
example values: 0.013064000000007292
find values   : 0.015686999999998674
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005509999999995241

Building tree 5 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07439099999999987
statistics    : 4.999999999988347e-05
test value    : 0.051491000000002174
eval split    : 0.0010609999999999786
example values: 0.013079999999977332
find values   : 0.015647999999994333
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005139999999999034

Building tree 5 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07407800000000009
statistics    : 7.00000000000145e-05
test value    : 0.05127800000000082
eval split    : 0.0010780000000005785
example values: 0.012925000000001852
find values   : 0.01558400000000093
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005349999999997301

Building tree 5 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0744959999999999
statistics    : 0.00016299999999924708
test value    : 0.05129100000000264
eval split    : 0.0010820000000015817
example values: 0.013014999999999777
find values   : 0.01555899999999566
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005259999999998044

Building tree 6 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07484899999999994
statistics    : 0.0001340000000000785
test value    : 0.05168099999999898
eval split    : 0.0010630000000002582
example values: 0.012951999999997188
find values   : 0.015805000000003844
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005229999999998292

Building tree 6 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08120200000000022
statistics    : 0.00012699999999998823
test value    : 0.051898000000000444
eval split    : 0.0010850000000006688
example values: 0.013355999999993706
find values   : 0.01569200000000981
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005430000000004043

Building tree 6 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07617099999999999
statistics    : 0.000124000000000013
test value    : 0.052252000000001964
eval split    : 0.0010870000000005042
example values: 0.01339300000000243
find values   : 0.015772999999998483
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005190000000001582

Building tree 6 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07488600000000023
statistics    : 0.00012500000000015277
test value    : 0.05175700000000161
eval split    : 0.0010729999999989914
example values: 0.013317999999995056
find values   : 0.015543999999993119
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005440000000001

Building tree 6 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07443900000000037
statistics    : 5.200000000016303e-05
test value    : 0.05170000000000208
eval split    : 0.0010919999999989827
example values: 0.01320199999999927
find values   : 0.015723999999997407
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005639999999997869

Building tree 7 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07865600000000006
statistics    : 0.00012999999999996348
test value    : 0.05449100000000051
eval split    : 0.001138999999999779
example values: 0.013809000000000182
find values   : 0.016619999999998747
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005329999999998947

Building tree 7 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07851800000000031
statistics    : 0.00013299999999993872
test value    : 0.05360899999999802
eval split    : 0.0011600000000022703
example values: 0.013819999999990173
find values   : 0.016258999999998913
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005540000000001655

Building tree 7 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07638699999999998
statistics    : 0.0001290000000002678
test value    : 0.05210200000000009
eval split    : 0.0011470000000022296
example values: 0.013226999999997435
find values   : 0.015720000000001733
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005589999999999762

Building tree 7 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.082754
statistics    : 0.00014099999999972468
test value    : 0.052087000000000216
eval split    : 0.00107899999999983
example values: 0.013300000000005863
find values   : 0.015741999999995038
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005229999999998292

Building tree 7 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07453999999999983
statistics    : 0.00012600000000029254
test value    : 0.051560000000000716
eval split    : 0.0012340000000037321
example values: 0.013153999999992116
find values   : 0.015556999999990495
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006930000000004988

Building tree 8 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07477899999999993
statistics    : 0.00014799999999981495
test value    : 0.051752999999999716
eval split    : 0.0010849999999993365
example values: 0.0129819999999925
find values   : 0.015686999999998452
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005440000000001

Building tree 8 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08220300000000025
statistics    : 0.00012499999999970868
test value    : 0.05863999999999736
eval split    : 0.00116599999999778
example values: 0.013347000000014209
find values   : 0.02203100000000946
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005819999999996384

Building tree 8 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07990800000000009
statistics    : 0.00012999999999996348
test value    : 0.054954999999998755
eval split    : 0.0011720000000026154
example values: 0.01396700000001072
find values   : 0.0168210000000113
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005579999999998364

Building tree 8 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07580300000000006
statistics    : 0.00012199999999973343
test value    : 0.05179399999999834
eval split    : 0.0010729999999985473
example values: 0.013071999999994866
find values   : 0.015724000000000515
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000548000000000215

Building tree 8 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07475999999999994
statistics    : 0.00012699999999954414
test value    : 0.051512000000002
eval split    : 0.001061999999998342
example values: 0.013110999999994544
find values   : 0.015687000000004225
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005349999999997301

Building tree 9 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07574799999999993
statistics    : 0.00012600000000029254
test value    : 0.051998000000002875
eval split    : 0.0011959999999966442
example values: 0.01327299999999898
find values   : 0.015724999999989997
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006089999999998597

Building tree 9 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07424199999999992
statistics    : 0.0001450000000002838
test value    : 0.05146499999999943
eval split    : 0.0010929999999995665
example values: 0.013132999999998507
find values   : 0.015616999999998438
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00055200000000033

Building tree 9 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07394800000000012
statistics    : 0.00012199999999973343
test value    : 0.051413000000001485
eval split    : 0.0010499999999997733
example values: 0.013024000000001479
find values   : 0.0154769999999953
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000512000000000068

Building tree 9 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07383000000000006
statistics    : 0.000124000000000013
test value    : 0.05117400000000227
eval split    : 0.0010690000000010969
example values: 0.013006999999990665
find values   : 0.015408000000014521
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005290000000002237

Building tree 9 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07303000000000015
statistics    : 0.00011600000000022703
test value    : 0.05113199999999729
eval split    : 0.0010320000000021423
example values: 0.013003999999993354
find values   : 0.01548699999999581
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005099999999997884

Building tree 10 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0731010000000003
statistics    : 0.00013599999999991397
test value    : 0.05103899999999939
eval split    : 0.0010439999999998228
example values: 0.012855000000006278
find values   : 0.015406999999991733
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005099999999997884

Building tree 10 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07321900000000037
statistics    : 0.0001180000000000625
test value    : 0.05111399999999966
eval split    : 0.0010160000000034586
example values: 0.012899999999992584
find values   : 0.015525999999991047
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004770000000000607

Building tree 10 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07425700000000024
statistics    : 0.00011999999999989797
test value    : 0.05180099999999932
eval split    : 0.0010570000000003077
example values: 0.013151999999994501
find values   : 0.015762000000015597
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005220000000001335

Building tree 10 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07511899999999994
statistics    : 5.100000000002325e-05
test value    : 0.052108000000001375
eval split    : 0.001069000000001985
example values: 0.013277000000015526
find values   : 0.015804999999992297
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000502999999999254

Building tree 10 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07461800000000007
statistics    : 0.0001330000000008269
test value    : 0.05151300000000436
eval split    : 0.0010819999999993613
example values: 0.01295999999998898
find values   : 0.01573299999999911
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005380000000005936

Building tree 11 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07472499999999993
statistics    : 0.00014300000000044832
test value    : 0.0514659999999969
eval split    : 0.0010210000000050456
example values: 0.01305399999999679
find values   : 0.01547900000000535
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005020000000000024

Building tree 11 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07331899999999969
statistics    : 0.00011600000000022703
test value    : 0.05104600000000126
eval split    : 0.0010280000000033596
example values: 0.012918999999999237
find values   : 0.015569000000005495
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005079999999990648

Building tree 11 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07287899999999947
statistics    : 0.00011700000000036681
test value    : 0.051004000000005156
eval split    : 0.001022000000002521
example values: 0.012905999999994755
find values   : 0.015353999999997647
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004949999999999122

Building tree 11 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07357000000000014
statistics    : 4.999999999988347e-05
test value    : 0.051266999999999285
eval split    : 0.0010200000000013532
example values: 0.013119000000002323
find values   : 0.015386000000008337
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00047599999999903275

Building tree 11 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07344200000000001
statistics    : 0.0001390000000007774
test value    : 0.05111599999999772
eval split    : 0.0010219999999989682
example values: 0.013013000000002606
find values   : 0.015401999999999916
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004849999999994026

Building tree 12 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07312799999999964
statistics    : 0.00011699999999947863
test value    : 0.05107600000000012
eval split    : 0.0010110000000009833
example values: 0.01292299999998292
find values   : 0.015330999999997985
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004810000000006198

Building tree 12 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07302199999999992
statistics    : 0.00012199999999928934
test value    : 0.051035000000001496
eval split    : 0.0010150000000024306
example values: 0.012949999999992912
find values   : 0.01543500000001341
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004730000000003898

Building tree 12 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0735620000000008
statistics    : 0.00012599999999984846
test value    : 0.05114599999999747
eval split    : 0.0010769999999986624
example values: 0.012972000000000428
find values   : 0.015524999999990463
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000544000000000544

Building tree 12 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0742560000000001
statistics    : 0.00013199999999891077
test value    : 0.05141699999999805
eval split    : 0.001141999999997978
example values: 0.013072000000012629
find values   : 0.015656000000008774
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006009999999996296

Building tree 12 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08053800000000066
statistics    : 0.00012500000000059686
test value    : 0.05745099999999592
eval split    : 0.001109999999997946
example values: 0.013173000000017865
find values   : 0.015590000000024418
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005530000000009139

Building tree 13 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0751949999999999
statistics    : 0.00013600000000035806
test value    : 0.05174099999999626
eval split    : 0.0010770000000004387
example values: 0.013081000000033427
find values   : 0.01563000000000425
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005230000000002732

Building tree 13 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0766480000000005
statistics    : 0.00013799999999974943
test value    : 0.05236500000000088
eval split    : 0.0012010000000000076
example values: 0.013187000000006499
find values   : 0.01594800000000074
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006430000000010594

Building tree 13 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08294699999999988
statistics    : 0.00012200000000017752
test value    : 0.052148000000002526
eval split    : 0.0011359999999998038
example values: 0.013220000000004006
find values   : 0.015707000000006133
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005629999999996471

Building tree 13 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07613300000000045
statistics    : 0.00017099999999992122
test value    : 0.0524350000000009
eval split    : 0.0011149999999986449
example values: 0.013242999999997451
find values   : 0.015952000000019062
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000548000000000215

Building tree 13 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07838399999999979
statistics    : 0.00014399999999969992
test value    : 0.05274399999999524
eval split    : 0.001314999999999067
example values: 0.013302000000000369
find values   : 0.016363000000011674
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006649999999996936

Building tree 14 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07749000000000006
statistics    : 0.0001270000000008764
test value    : 0.052471999999993635
eval split    : 0.0012440000000042417
example values: 0.013246999999995346
find values   : 0.015926000000002993
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006720000000006721

Building tree 14 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0769359999999999
statistics    : 0.0001399999999991408
test value    : 0.052787999999998725
eval split    : 0.0011249999999991545
example values: 0.013471999999992157
find values   : 0.01600499999997762
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005319999999988667

Building tree 14 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07600400000000018
statistics    : 0.00012699999999998823
test value    : 0.05187100000000111
eval split    : 0.0010570000000003077
example values: 0.013218000000003727
find values   : 0.01580300000002488
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005119999999996239

Building tree 14 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07525599999999955
statistics    : 0.0001230000000003173
test value    : 0.05195100000000252
eval split    : 0.0011019999999994923
example values: 0.013093999999996164
find values   : 0.015717000000000425
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005280000000009721

Building tree 14 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08105700000000038
statistics    : 0.00017400000000034055
test value    : 0.05773600000000112
eval split    : 0.001170999999994926
example values: 0.013174999999997716
find values   : 0.021635999999995548
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006260000000004595

Building tree 15 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07748400000000011
statistics    : 5.3000000000302805e-05
test value    : 0.05331999999999937
eval split    : 0.0012700000000016587
example values: 0.013682000000033057
find values   : 0.016159000000000923
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005770000000007158

Building tree 15 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07966599999999957
statistics    : 0.000140000000000029
test value    : 0.05530499999999616
eval split    : 0.0011639999999948358
example values: 0.014036000000007043
find values   : 0.017117000000036242
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005549999999994171

Building tree 15 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07658899999999935
statistics    : 0.00012799999999923983
test value    : 0.0528370000000038
eval split    : 0.0011259999999992942
example values: 0.013517999999990593
find values   : 0.01595999999997577
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005689999999995976

Building tree 15 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07829700000000006
statistics    : 5.100000000002325e-05
test value    : 0.05346100000000664
eval split    : 0.0010720000000015162
example values: 0.013501999999998127
find values   : 0.0162259999999943
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005020000000008906

Building tree 15 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07556800000000052
statistics    : 0.0001249999999988205
test value    : 0.05228399999999578
eval split    : 0.0011129999999957008
example values: 0.013404999999989009
find values   : 0.015763999999996336
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000578999999999219

Building tree 16 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07460099999999947
statistics    : 0.00012199999999928934
test value    : 0.05158200000000068
eval split    : 0.0010520000000013852
example values: 0.013093999999997052
find values   : 0.015732999999994668
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005250000000005528

Building tree 16 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07407299999999939
statistics    : 0.0001290000000002678
test value    : 0.05158200000000068
eval split    : 0.0010580000000004475
example values: 0.013084000000015195
find values   : 0.015596000000017263
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005289999999993356

Building tree 16 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07433800000000002
statistics    : 0.00012600000000073663
test value    : 0.05143099999999645
eval split    : 0.0010669999999972646
example values: 0.0130049999999855
find values   : 0.015600000000005387
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005399999999990968

Building tree 16 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07607000000000053
statistics    : 0.00012500000000059686
test value    : 0.052743000000002205
eval split    : 0.0010810000000036624
example values: 0.013461999999996976
find values   : 0.016024000000005145
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005389999999998452

Building tree 16 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07601700000000022
statistics    : 0.00012499999999970868
test value    : 0.0524930000000019
eval split    : 0.0011579999999957735
example values: 0.013254000000002542
find values   : 0.016040999999976435
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005859999999993093

Building tree 17 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07603699999999947
statistics    : 0.0001239999999995689
test value    : 0.05236999999999892
eval split    : 0.001152000000000264
example values: 0.013516999999991341
find values   : 0.015818000000018984
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005860000000001975

Building tree 17 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09780700000000042
statistics    : 0.0001500000000005386
test value    : 0.06602799999999309
eval split    : 0.0016679999999968942
example values: 0.01708100000001256
find values   : 0.020509000000016542
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007229999999980308

Building tree 17 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09374600000000033
statistics    : 0.00013000000000040757
test value    : 0.062414000000000414
eval split    : 0.0015870000000024476
example values: 0.015945999999974703
find values   : 0.019102999999990544
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007989999999997721

Building tree 17 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07587800000000033
statistics    : 0.0001440000000005881
test value    : 0.051946999999996635
eval split    : 0.0010840000000014172
example values: 0.013263999999971077
find values   : 0.01562400000001496
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005489999999994666

Building tree 17 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07530199999999976
statistics    : 0.00013600000000035806
test value    : 0.05173200000000122
eval split    : 0.0010900000000013677
example values: 0.01307700000000711
find values   : 0.015738999999987513
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000548000000000215

Building tree 18 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07673099999999966
statistics    : 0.00016600000000099868
test value    : 0.052487999999999424
eval split    : 0.0011680000000016122
example values: 0.013293000000012434
find values   : 0.01580000000000048
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006060000000003285

Building tree 18 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07798099999999941
statistics    : 0.0001380000000006376
test value    : 0.05336900000000444
eval split    : 0.0011440000000018102
example values: 0.01353600000000732
find values   : 0.016204000000000107
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005390000000007333

Building tree 18 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07522600000000068
statistics    : 0.00012499999999970868
test value    : 0.05179099999999437
eval split    : 0.001136000000000692
example values: 0.013133999999987545
find values   : 0.015703999999981733
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005930000000002877

Building tree 18 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07406000000000024
statistics    : 0.00011899999999887001
test value    : 0.05134999999999934
eval split    : 0.0010659999999997893
example values: 0.013026999999985023
find values   : 0.015548000000005224
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005270000000008324

Building tree 18 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07331900000000058
statistics    : 0.00012100000000003774
test value    : 0.05105500000000163
eval split    : 0.0010089999999980392
example values: 0.012890000000008506
find values   : 0.015556000000005454
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00048500000000029075

Building tree 19 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07350700000000021
statistics    : 0.00011899999999975819
test value    : 0.051100999999999175
eval split    : 0.0010319999999985896
example values: 0.012842000000007125
find values   : 0.015472000000002595
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005090000000000927

Building tree 19 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07884399999999925
statistics    : 4.999999999988347e-05
test value    : 0.051124000000004166
eval split    : 0.000980000000000203
example values: 0.012888000000012667
find values   : 0.015433999999990178
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00044799999999955986

Building tree 19 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08008199999999999
statistics    : 0.0001249999999988205
test value    : 0.056297000000002484
eval split    : 0.0011810000000007648
example values: 0.01427399999998702
find values   : 0.017134999999996126
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005779999999999674

Building tree 19 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0804159999999996
statistics    : 0.00011800000000050659
test value    : 0.05150699999999464
eval split    : 0.001066999999999041
example values: 0.013029000000008395
find values   : 0.01564100000001467
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005110000000012604

Building tree 19 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07323600000000052
statistics    : 0.00011899999999887001
test value    : 0.0509490000000028
eval split    : 0.0010450000000004067
example values: 0.012979000000024499
find values   : 0.015454999999976238
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000525999999998028

Building tree 20 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07997600000000027
statistics    : 0.00011600000000200339
test value    : 0.05618199999999973
eval split    : 0.0011819999999946873
example values: 0.014441000000012139
find values   : 0.017007999999993473
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006090000000007478

Building tree 20 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07313299999999945
statistics    : 0.0001290000000002678
test value    : 0.051123000000000474
eval split    : 0.0010430000000019035
example values: 0.01295499999999361
find values   : 0.015495999999991739
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005259999999998044

Building tree 20 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07316300000000009
statistics    : 0.00011900000000064637
test value    : 0.05114400000000163
eval split    : 0.0010529999999979722
example values: 0.012928999999974877
find values   : 0.015489999999982018
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005250000000005528

Building tree 20 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07528500000000093
statistics    : 5.200000000016303e-05
test value    : 0.05170599999999581
eval split    : 0.0010700000000021248
example values: 0.013103999999947824
find values   : 0.01567800000001185
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005260000000006926

Building tree 20 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07546699999999973
statistics    : 0.0001289999999993796
test value    : 0.05176599999999354
eval split    : 0.001102000000003045
example values: 0.01315800000000067
find values   : 0.01567000000000185
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000525000000001441

Building tree 21 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07334299999999949
statistics    : 0.00011900000000153454
test value    : 0.051159000000005506
eval split    : 0.001040000000005037
example values: 0.013067000000024365
find values   : 0.015457000000035137
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005180000000013507

Building tree 21 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07332500000000053
statistics    : 0.00013699999999872148
test value    : 0.05096799999999568
eval split    : 0.001036000000000925
example values: 0.013016999999980072
find values   : 0.01536799999999161
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004920000000012692

Building tree 21 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08123199999999997
statistics    : 0.0001259999999980721
test value    : 0.05786999999999587
eval split    : 0.0011110000000034148
example values: 0.013305999999969842
find values   : 0.01565599999995726
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000553000000001802

Building tree 21 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07438199999999995
statistics    : 0.00013499999999844192
test value    : 0.051416999999998936
eval split    : 0.0010310000000099961
example values: 0.01302799999998605
find values   : 0.01570400000001726
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005129999999997636

Building tree 21 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.08672699999999978
statistics    : 6.59999999985672e-05
test value    : 0.06007199999999813
eval split    : 0.0012400000000027944
example values: 0.015375999999950096
find values   : 0.01849900000000737
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005269999999999442

Building tree 22 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.09930699999999959
statistics    : 5.699999999997374e-05
test value    : 0.0702920000000109
eval split    : 0.0014470000000006422
example values: 0.018307000000003626
find values   : 0.0214500000000033
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006430000000001712

Building tree 22 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07889199999999974
statistics    : 0.00013699999999872148
test value    : 0.0532079999999997
eval split    : 0.0011490000000033973
example values: 0.013369000000054143
find values   : 0.016112000000022775
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005419999999993763

Building tree 22 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0777580000000011
statistics    : 0.00013000000000218392
test value    : 0.053339000000006465
eval split    : 0.0011669999999970315
example values: 0.013740000000010966
find values   : 0.016072999999988014
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005860000000019738

Building tree 22 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0754520000000003
statistics    : 0.000128000000000128
test value    : 0.05163300000000248
eval split    : 0.0011050000000043525
example values: 0.013152999999993753
find values   : 0.015622000000011127
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005649999999999267

Building tree 22 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07578599999999902
statistics    : 0.00015499999999946112
test value    : 0.051823000000002395
eval split    : 0.0011560000000017112
example values: 0.013219000000047387
find values   : 0.01569799999999333
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999995568

Building tree 23 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07555699999999987
statistics    : 0.00013200000000068712
test value    : 0.05170400000000264
eval split    : 0.0011119999999991137
example values: 0.013109000000008919
find values   : 0.0157899999999902
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005699999999997374

Building tree 23 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07553200000000082
statistics    : 5.200000000016303e-05
test value    : 0.05181600000000408
eval split    : 0.0011189999999974276
example values: 0.013024000000021019
find values   : 0.015721000000020524
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005260000000006926

Building tree 23 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07570500000000102
statistics    : 0.00013200000000068712
test value    : 0.05193200000000964
eval split    : 0.0011550000000006833
example values: 0.013145000000003293
find values   : 0.015809000000041706
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005959999999980425

Building tree 23 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08158399999999943
statistics    : 0.0001420000000020849
test value    : 0.05774199999999752
eval split    : 0.0011560000000034876
example values: 0.013044000000018485
find values   : 0.015777000000070984
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005980000000018748

Building tree 23 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08145999999999987
statistics    : 0.00017500000000048033
test value    : 0.05411299999999031
eval split    : 0.0012279999999886826
example values: 0.013671000000028855
find values   : 0.016704000000038022
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006029999999999092

Building tree 24 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07833900000000149
statistics    : 0.00013699999999872148
test value    : 0.052565000000001305
eval split    : 0.0011570000000027392
example values: 0.013382000000010663
find values   : 0.015952999999978346
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005659999999974019

Building tree 24 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07884299999999911
statistics    : 0.00014000000000180535
test value    : 0.05445200000000128
eval split    : 0.0011169999999953717
example values: 0.013987000000051708
find values   : 0.016449999999945675
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000003052

Building tree 24 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0749449999999996
statistics    : 0.0001650000000008589
test value    : 0.051700999999997777
eval split    : 0.0011230000000086449
example values: 0.01315800000003442
find values   : 0.015579999999987493
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005860000000001975

Building tree 24 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07447999999999944
statistics    : 0.0001239999999995689
test value    : 0.05131200000000469
eval split    : 0.0010889999999985633
example values: 0.012951000000002821
find values   : 0.015572000000014796
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005629999999996471

Building tree 24 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0741840000000007
statistics    : 0.00012699999999910005
test value    : 0.051285000000000025
eval split    : 0.0010939999999965977
example values: 0.013079000000004726
find values   : 0.015582000000001983
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000007741

Building tree 25 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07589699999999944
statistics    : 0.0001260000000016248
test value    : 0.0523100000000003
eval split    : 0.001121999999993406
example values: 0.013182000000028893
find values   : 0.015919999999983503
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005639999999988987

Building tree 25 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08408200000000043
statistics    : 0.0001239999999995689
test value    : 0.05731799999999865
eval split    : 0.0012959999999981875
example values: 0.014917999999996212
find values   : 0.01731700000000025
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006350000000008293

Building tree 25 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07819399999999987
statistics    : 0.00014400000000236446
test value    : 0.054412999999996714
eval split    : 0.0011040000000015482
example values: 0.013779999999997017
find values   : 0.01672199999999613
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005459999999999354

Building tree 25 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08130099999999985
statistics    : 0.00014400000000236446
test value    : 0.053833999999987725
eval split    : 0.0011440000000124684
example values: 0.013726000000014338
find values   : 0.01628900000002176
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005540000000010536

Building tree 25 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08498299999999936
statistics    : 0.00015299999999918157
test value    : 0.05268400000000106
eval split    : 0.0011460000000056425
example values: 0.013519999999966004
find values   : 0.015968999999968148
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005480000000019913

Building tree 26 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07748199999999983
statistics    : 0.00014400000000236446
test value    : 0.052826000000004925
eval split    : 0.0011340000000075179
example values: 0.013358000000012638
find values   : 0.016069999999992035
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005690000000004858

Building tree 26 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07607199999999992
statistics    : 0.0001430000000013365
test value    : 0.05203300000000688
eval split    : 0.001132000000005462
example values: 0.013127000000006106
find values   : 0.01592200000000865
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005340000000018108

Building tree 26 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07487199999999916
statistics    : 0.00012299999999854094
test value    : 0.05171800000000282
eval split    : 0.001121999999993406
example values: 0.013230000000010733
find values   : 0.015702000000004546
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005749999999995481

Building tree 26 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07388800000000018
statistics    : 5.200000000016303e-05
test value    : 0.05140100000000025
eval split    : 0.0010170000000009338
example values: 0.013073000000010992
find values   : 0.01548600000000988
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004970000000010799

Building tree 26 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07437999999999967
statistics    : 0.00012599999999984846
test value    : 0.05129799999999918
eval split    : 0.0011179999999999524
example values: 0.012960999999970468
find values   : 0.015511000000012487
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005970000000008469

Building tree 27 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07421599999999984
statistics    : 0.00012499999999704414
test value    : 0.051278000000005264
eval split    : 0.00104200000000354
example values: 0.01302399999999615
find values   : 0.015498999999968177
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005199999999998539

Building tree 27 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.076492
statistics    : 0.00013000000000040757
test value    : 0.05212499999999842
eval split    : 0.0011460000000020898
example values: 0.013323000000015739
find values   : 0.01557999999998394
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005670000000002062

Building tree 27 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08087800000000023
statistics    : 0.00013500000000021828
test value    : 0.057539999999997704
eval split    : 0.001063999999995957
example values: 0.013072000000013517
find values   : 0.015672999999988946
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000529999999997699

Building tree 27 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07371800000000128
statistics    : 0.00011899999999975819
test value    : 0.05161599999999211
eval split    : 0.0010439999999949379
example values: 0.012999999999967926
find values   : 0.015700999999999965
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005289999999984474

Building tree 27 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07338299999999975
statistics    : 0.00012799999999835165
test value    : 0.05097799999999886
eval split    : 0.0009919999999983276
example values: 0.012960999999993561
find values   : 0.015451999999967825
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00047200000000025

Building tree 28 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07299199999999928
statistics    : 4.8999999998855515e-05
test value    : 0.05089800000000366
eval split    : 0.000993999999993278
example values: 0.01301699999999073
find values   : 0.01519499999999141
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004810000000006198

Building tree 28 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07298700000000125
statistics    : 0.0001269999999973237
test value    : 0.050865000000001714
eval split    : 0.001048999999996525
example values: 0.012853999999997257
find values   : 0.015397000000016092
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004940000000015488

Building tree 28 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07310800000000128
statistics    : 0.00011699999999947863
test value    : 0.050946000000003266
eval split    : 0.0010259999999995273
example values: 0.012973000000037871
find values   : 0.015392000000010952
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005040000000011702

Building tree 28 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0736479999999986
statistics    : 0.00012900000000115597
test value    : 0.051273999999999376
eval split    : 0.0010649999999934323
example values: 0.012965000000011884
find values   : 0.01563900000001439
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005400000000008731

Building tree 28 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07418600000000097
statistics    : 0.00011600000000022703
test value    : 0.05155800000000532
eval split    : 0.0010950000000011784
example values: 0.013001000000024021
find values   : 0.015721999999955827
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005320000000015312

Building tree 29 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07338900000000059
statistics    : 0.00012000000000078614
test value    : 0.051087999999998246
eval split    : 0.0010619999999921248
example values: 0.012886000000039033
find values   : 0.015460999999971747
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004969999999993036

Building tree 29 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07294399999999968
statistics    : 4.999999999988347e-05
test value    : 0.051076000000003674
eval split    : 0.0010000000000083276
example values: 0.01294699999999871
find values   : 0.015490999999958177
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000461000000001377

Building tree 29 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07852800000000038
statistics    : 0.00013799999999797308
test value    : 0.054471999999993415
eval split    : 0.001299999999986312
example values: 0.013846000000009795
find values   : 0.016610999999931764
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000674999999999315

Building tree 29 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09017500000000034
statistics    : 0.00012199999999928934
test value    : 0.061051999999991224
eval split    : 0.0013239999999985486
example values: 0.015712999999996313
find values   : 0.0187359999999277
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006199999999996209

Building tree 29 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07419200000000004
statistics    : 0.00013899999999900103
test value    : 0.05137600000001008
eval split    : 0.0010410000000042885
example values: 0.012960000000004968
find values   : 0.015539000000012848
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000518999999998826

Building tree 30 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07525499999999852
statistics    : 0.0001270000000008764
test value    : 0.05150700000000086
eval split    : 0.001072000000000628
example values: 0.013178999999974295
find values   : 0.015520000000021739
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000518999999998826

Building tree 30 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07593899999999998
statistics    : 4.900000000063187e-05
test value    : 0.05225200000001351
eval split    : 0.0010949999999976257
example values: 0.013367999999996272
find values   : 0.01585299999999279
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005199999999998539

Building tree 30 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07463399999999965
statistics    : 0.00013600000000124624
test value    : 0.05143299999999762
eval split    : 0.0010899999999995913
example values: 0.013138999999979362
find values   : 0.015574999999982353
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005649999999999267

Building tree 30 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07909399999999955
statistics    : 0.0001289999999993796
test value    : 0.05364999999999931
eval split    : 0.0012059999999944893
example values: 0.013629000000008773
find values   : 0.016333000000010145
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005730000000010449

Building tree 30 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07584500000000105
statistics    : 0.000128000000000128
test value    : 0.052069000000004806
eval split    : 0.0011000000000080945
example values: 0.013263999999978182
find values   : 0.015882999999952574
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999995568

Building tree 31 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07475600000000071
statistics    : 0.00013200000000068712
test value    : 0.05158999999999736
eval split    : 0.0010720000000024044
example values: 0.013125999999990867
find values   : 0.015661999999968756
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000536000000000314

Building tree 31 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07610700000000037
statistics    : 0.0001380000000015258
test value    : 0.05192100000000899
eval split    : 0.0011210000000012599
example values: 0.013136999999987964
find values   : 0.01571399999997425
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005140000000007916

Building tree 31 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07816599999999951
statistics    : 0.00012400000000134526
test value    : 0.0533570000000001
eval split    : 0.0011940000000052464
example values: 0.013473999999989772
find values   : 0.0162340000000043
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000576000000000576

Building tree 31 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08185700000000118
statistics    : 0.00015700000000151704
test value    : 0.05566199999999455
eval split    : 0.0011599999999916122
example values: 0.014418000000004483
find values   : 0.0169089999999823
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005290000000020001

Building tree 31 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09277900000000017
statistics    : 0.00013200000000246348
test value    : 0.06252599999999653
eval split    : 0.0014660000000059625
example values: 0.016226999999981118
find values   : 0.019083000000025052
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007029999999978997

Building tree 32 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09971400000000052
statistics    : 0.00014299999999956015
test value    : 0.058203999999998146
eval split    : 0.0013140000000095853
example values: 0.014780000000014226
find values   : 0.01775199999998911
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006470000000007303

Building tree 32 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07551299999999905
statistics    : 0.0001420000000020849
test value    : 0.0519179999999988
eval split    : 0.0010899999999942622
example values: 0.0132910000000237
find values   : 0.015746000000010696
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005380000000005936

Building tree 32 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07550900000000027
statistics    : 0.00012599999999984846
test value    : 0.05194999999999972
eval split    : 0.0010759999999940817
example values: 0.013381000000043386
find values   : 0.015689000000008946
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005450000000006838

Building tree 32 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07837799999999895
statistics    : 0.00012599999999984846
test value    : 0.0539819999999942
eval split    : 0.0011820000000053454
example values: 0.013905000000010048
find values   : 0.016621000000018427
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005779999999990793

Building tree 32 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0761819999999993
statistics    : 0.0001270000000008764
test value    : 0.05231700000000039
eval split    : 0.0011160000000050019
example values: 0.013295999999993313
find values   : 0.015826999999974944
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005839999999981416

Building tree 33 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07458000000000098
statistics    : 0.00013799999999797308
test value    : 0.051686000000007226
eval split    : 0.0010539999999998884
example values: 0.013116000000019667
find values   : 0.015604000000017493
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005300000000012517

Building tree 33 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07412599999999969
statistics    : 0.00013600000000124624
test value    : 0.051420999999999495
eval split    : 0.0010789999999936128
example values: 0.013073000000000334
find values   : 0.015603000000027123
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005369999999995656

Building tree 33 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07386900000000018
statistics    : 0.00014299999999956015
test value    : 0.05137800000000503
eval split    : 0.0010490000000054067
example values: 0.01308600000001725
find values   : 0.01554600000004669
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005199999999998539

Building tree 33 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07381100000000096
statistics    : 0.00012400000000134526
test value    : 0.051314000000001414
eval split    : 0.0010759999999976344
example values: 0.012953999999954391
find values   : 0.015490999999974164
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005310000000005033

Building tree 33 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0776090000000007
statistics    : 0.00012799999999835165
test value    : 0.05303800000000436
eval split    : 0.0011229999999962104
example values: 0.013520999999995453
find values   : 0.016069000000021205
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005450000000006838

Building tree 34 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08413600000000088
statistics    : 0.00013600000000124624
test value    : 0.05964599999999365
eval split    : 0.0011569999999956337
example values: 0.019800999999981528
find values   : 0.01634899999999817
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005790000000018836

Building tree 34 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08206500000000005
statistics    : 0.00016499999999908255
test value    : 0.056169000000007685
eval split    : 0.0011819999999964637
example values: 0.014258999999979594
find values   : 0.01704400000001982
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005759999999987997

Building tree 34 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0894099999999991
statistics    : 0.00013799999999797308
test value    : 0.05981099999999451
eval split    : 0.001440000000005881
example values: 0.015451000000018311
find values   : 0.01825999999996597
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007079999999994868

Building tree 34 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08426899999999904
statistics    : 0.00012900000000115597
test value    : 0.056354000000004234
eval split    : 0.001298999999999495
example values: 0.014380000000018711
find values   : 0.017043000000033004
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006189999999985929

Building tree 34 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.08456599999999881
statistics    : 5.400000000044258e-05
test value    : 0.05736200000000835
eval split    : 0.0011819999999946873
example values: 0.014673000000000158
find values   : 0.017334999999997436
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005220000000001335

Building tree 35 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08684000000000047
statistics    : 0.00017800000000001148
test value    : 0.05853500000000622
eval split    : 0.001424999999986909
example values: 0.014926000000023976
find values   : 0.01801199999997216
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006850000000007128

Building tree 35 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07904700000000098
statistics    : 0.0001409999999992806
test value    : 0.05211899999999581
eval split    : 0.0011710000000011433
example values: 0.013269000000004638
find values   : 0.016002999999981782
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000003052

Building tree 35 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0743279999999995
statistics    : 0.00012800000000190437
test value    : 0.051510000000002165
eval split    : 0.0010520000000084906
example values: 0.013024000000006808
find values   : 0.015437000000035894
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005260000000024689

Building tree 35 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07428100000000093
statistics    : 0.00015200000000170633
test value    : 0.05132200000000786
eval split    : 0.001095000000004731
example values: 0.012987999999973354
find values   : 0.01555700000000293
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005509999999997461

Building tree 35 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07396600000000042
statistics    : 0.0001409999999992806
test value    : 0.051213999999998094
eval split    : 0.0010760000000047398
example values: 0.0129589999999844
find values   : 0.015571999999979269
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005429999999986279

Building tree 36 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07414699999999996
statistics    : 0.0001230000000003173
test value    : 0.051275999999999655
eval split    : 0.0010329999999942885
example values: 0.013130999999997783
find values   : 0.015503999999994633
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000512000000000512

Building tree 36 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07416499999999893
statistics    : 0.00013700000000049783
test value    : 0.05145799999999667
eval split    : 0.0011029999999951912
example values: 0.013024999999995401
find values   : 0.01561599999998542
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000007741

Building tree 36 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08059500000000064
statistics    : 0.00013300000000171508
test value    : 0.05752399999999547
eval split    : 0.0010520000000031615
example values: 0.013137999999994321
find values   : 0.015728000000009956
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005200000000016303

Building tree 36 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07495799999999875
statistics    : 0.00011899999999798183
test value    : 0.051467000000000596
eval split    : 0.0011230000000050921
example values: 0.013120000000034437
find values   : 0.01548699999998071
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005509999999997461

Building tree 36 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0732879999999998
statistics    : 0.00011499999999919908
test value    : 0.051046000000006586
eval split    : 0.001065999999998013
example values: 0.012917000000022938
find values   : 0.015426999999995417
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000536000000000314

Building tree 37 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07284399999999991
statistics    : 4.999999999988347e-05
test value    : 0.051188000000006895
eval split    : 0.00100100000000225
example values: 0.013042999999978377
find values   : 0.01559299999999908
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00047099999999922204

Building tree 37 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0797340000000002
statistics    : 0.0001650000000008589
test value    : 0.055159000000005065
eval split    : 0.0012089999999975731
example values: 0.014040999999997084
find values   : 0.016657999999951656
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006020000000024339

Building tree 37 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07424600000000048
statistics    : 0.00011399999999994748
test value    : 0.051616999999991364
eval split    : 0.0010799999999964172
example values: 0.01323200000000746
find values   : 0.015594000000007213
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005489999999976902

Building tree 37 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07333500000000015
statistics    : 0.00011999999999900979
test value    : 0.051149999999990925
eval split    : 0.0010279999999980305
example values: 0.012963999999998421
find values   : 0.01546499999997586
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004959999999982756

Building tree 37 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07461999999999946
statistics    : 0.00013799999999974943
test value    : 0.05151899999999365
eval split    : 0.0011279999999942447
example values: 0.013002999999963905
find values   : 0.015624000000032723
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005460000000017118

Building tree 38 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07337300000000013
statistics    : 0.00011499999999919908
test value    : 0.05112800000000561
eval split    : 0.001002999999998977
example values: 0.01291000000001219
find values   : 0.015564999999980955
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00047499999999978115

Building tree 38 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0731970000000004
statistics    : 0.00011699999999947863
test value    : 0.05129900000000376
eval split    : 0.0010399999999979315
example values: 0.013099999999999667
find values   : 0.015485999999954814
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005149999999982668

Building tree 38 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0731029999999997
statistics    : 0.00011599999999845068
test value    : 0.051034000000001356
eval split    : 0.00101399999999785
example values: 0.01292900000001751
find values   : 0.015487999999974633
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005050000000021981

Building tree 38 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08002099999999857
statistics    : 0.00011600000000022703
test value    : 0.05101500000000314
eval split    : 0.0010200000000022413
example values: 0.012891000000037067
find values   : 0.015372000000008157
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005019999999991143

Building tree 38 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.08152600000000021
statistics    : 4.999999999988347e-05
test value    : 0.05797099999999489
eval split    : 0.0011090000000049116
example values: 0.014818999999961946
find values   : 0.017484000000022704
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005179999999995744

Building tree 39 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07328000000000046
statistics    : 0.00011899999999975819
test value    : 0.05122600000000155
eval split    : 0.001141000000002279
example values: 0.013065999999996691
find values   : 0.015506999999979953
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000622999999999152

Building tree 39 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07496800000000015
statistics    : 5.099999999913507e-05
test value    : 0.051891999999995164
eval split    : 0.0010690000000046496
example values: 0.013085000000019775
find values   : 0.01563099999999551
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00048799999999893373

Building tree 39 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07500799999999863
statistics    : 0.00013599999999769352
test value    : 0.05171300000000656
eval split    : 0.0011089999999960298
example values: 0.013099999999999667
find values   : 0.015707000000015015
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005279999999991958

Building tree 39 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07448499999999925
statistics    : 0.0001250000000023732
test value    : 0.05164300000000033
eval split    : 0.0010870000000071656
example values: 0.012994999999996537
find values   : 0.01571299999999276
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999977805

Building tree 39 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0742560000000001
statistics    : 0.0001249999999988205
test value    : 0.051492999999997124
eval split    : 0.0010759999999940817
example values: 0.013009999999997746
find values   : 0.015723999999963212
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005499999999987182

Building tree 40 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07495600000000024
statistics    : 0.00013399999999919032
test value    : 0.0518509999999992
eval split    : 0.001089999999997815
example values: 0.013124999999998721
find values   : 0.01578599999995589
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005640000000006751

Building tree 40 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0745780000000007
statistics    : 0.0001299999999986312
test value    : 0.05170399999999198
eval split    : 0.001090999999998843
example values: 0.01312599999998909
find values   : 0.01569300000001661
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005299999999994753

Building tree 40 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07822099999999921
statistics    : 5.200000000016303e-05
test value    : 0.05328299999999864
eval split    : 0.001173000000006752
example values: 0.013647000000032605
find values   : 0.016326999999977332
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005610000000011439

Building tree 40 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0904109999999978
statistics    : 0.00013599999999946988
test value    : 0.0615679999999994
eval split    : 0.0013270000000087379
example values: 0.014153000000034055
find values   : 0.01690700000001044
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006850000000024892

Building tree 40 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07480999999999938
statistics    : 0.00013699999999516876
test value    : 0.051799000000016804
eval split    : 0.001136999999996391
example values: 0.013268999999986875
find values   : 0.01579900000001544
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005989999999975737

Building tree 41 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07517999999999958
statistics    : 0.0001260000000016248
test value    : 0.05177200000000326
eval split    : 0.0010979999999989332
example values: 0.01320799999997746
find values   : 0.015643000000004292
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999995568

Building tree 41 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07497599999999949
statistics    : 0.00012699999999910005
test value    : 0.05184900000000425
eval split    : 0.0010499999999993292
example values: 0.01320699999997288
find values   : 0.01555699999998339
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005230000000011614

Building tree 41 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.0744630000000015
statistics    : 5.200000000016303e-05
test value    : 0.05167200000000349
eval split    : 0.0010509999999932518
example values: 0.013157999999982906
find values   : 0.015609999999981028
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005040000000029465

Building tree 41 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07458199999999948
statistics    : 0.00012699999999910005
test value    : 0.05144299999996704
eval split    : 0.001115000000009303
example values: 0.012946000000010116
find values   : 0.01567299999995342
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005690000000022621

Building tree 41 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07655099999999848
statistics    : 0.0001239999999995689
test value    : 0.05241399999998464
eval split    : 0.0011810000000096466
example values: 0.013331999999930844
find values   : 0.01596200000001957
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006149999999998101

Building tree 42 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07416100000000014
statistics    : 0.0001429999999977838
test value    : 0.05144900000000163
eval split    : 0.0010600000000025034
example values: 0.012945000000009088
find values   : 0.01569200000009019
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000537000000001342

Building tree 42 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07377599999999873
statistics    : 0.00013400000000274304
test value    : 0.0512710000000105
eval split    : 0.0010319999999985896
example values: 0.012891999999990134
find values   : 0.015612999999977006
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005169999999985464

Building tree 42 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07373799999999875
statistics    : 0.00012699999999910005
test value    : 0.05139000000000138
eval split    : 0.0010659999999944603
example values: 0.013009999999944455
find values   : 0.015634999999978305
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005229999999976087

Building tree 42 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07391400000000203
statistics    : 5.3999999998666226e-05
test value    : 0.051403999999994454
eval split    : 0.0010209999999943875
example values: 0.013044999999994644
find values   : 0.015524999999936284
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004959999999982756

Building tree 42 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07407600000000159
statistics    : 0.00013300000000171508
test value    : 0.0515829999999724
eval split    : 0.0010829999999870665
example values: 0.01307999999998799
find values   : 0.015681000000014933
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005590000000026407

Building tree 43 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08053499999999758
statistics    : 0.00014199999999675583
test value    : 0.05770799999999099
eval split    : 0.0010710000000031528
example values: 0.013099000000067917
find values   : 0.01569300000001661
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005350000000028388

Building tree 43 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07564800000000105
statistics    : 0.00012500000000059686
test value    : 0.0522999999999989
eval split    : 0.001097000000012116
example values: 0.013310000000046784
find values   : 0.015855999999995873
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005480000000019913

Building tree 43 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07512100000000288
statistics    : 0.0001239999999995689
test value    : 0.051580999999981
eval split    : 0.0011319999999983565
example values: 0.013123999999923086
find values   : 0.015741000000030425
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005620000000021719

Building tree 43 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07456200000000024
statistics    : 0.00013999999999825263
test value    : 0.05178000000000793
eval split    : 0.0010730000000087614
example values: 0.0130170000000156
find values   : 0.01572800000004193
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000536000000000314

Building tree 43 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07731899999999925
statistics    : 0.00013899999999722468
test value    : 0.05239400000001737
eval split    : 0.001208999999992244
example values: 0.013448999999976508
find values   : 0.015868000000029525
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005679999999976815

Building tree 44 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07550099999999915
statistics    : 0.00013400000000274304
test value    : 0.051887000000004235
eval split    : 0.0011000000000045418
example values: 0.013178000000017676
find values   : 0.015822999999944187
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005590000000061934

Building tree 44 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07450000000000045
statistics    : 0.0001310000000067646
test value    : 0.05144899999997321
eval split    : 0.0010950000000029547
example values: 0.013097000000044545
find values   : 0.01566299999997156
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000572000000005346

Building tree 44 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07510999999999868
statistics    : 0.00012300000000209366
test value    : 0.05186999999999742
eval split    : 0.0011140000000011696
example values: 0.013131000000022652
find values   : 0.015775999999963375
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005709999999972126

Building tree 44 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07545800000000114
statistics    : 0.00012200000000461841
test value    : 0.051615000000015954
eval split    : 0.0010749999999966064
example values: 0.013202000000056557
find values   : 0.01568700000003176
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005050000000039745

Building tree 44 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07405800000000085
statistics    : 6.899999999987472e-05
test value    : 0.05148300000000461
eval split    : 0.0010600000000025034
example values: 0.013139999999957297
find values   : 0.015677999999990533
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005230000000011614

Building tree 45 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07473500000000044
statistics    : 0.00013599999999769352
test value    : 0.05159400000001213
eval split    : 0.0010950000000029547
example values: 0.013125000000016485
find values   : 0.015646999999940903
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000558999999999088

Building tree 45 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08037299999999803
statistics    : 0.00012499999999704414
test value    : 0.05760600000000693
eval split    : 0.00110399999999089
example values: 0.013225000000023357
find values   : 0.021581000000008288
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005429999999968516

Building tree 45 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07395600000000258
statistics    : 0.00012299999999854094
test value    : 0.05118200000000073
eval split    : 0.001102000000003045
example values: 0.013024000000065428
find values   : 0.01545000000007235
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000565000000001703

Building tree 45 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08001399999999848
statistics    : 0.00012100000000003774
test value    : 0.051182000000011385
eval split    : 0.0010389999999951272
example values: 0.013075000000025483
find values   : 0.01545999999995118
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005220000000001335

Building tree 45 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07334099999999921
statistics    : 0.0001509999999953493
test value    : 0.05109300000000516
eval split    : 0.0010199999999969123
example values: 0.012953000000070602
find values   : 0.015502000000026328
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004899999999992133

Building tree 46 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07438399999999845
statistics    : 0.0001180000000040593
test value    : 0.051619000000005855
eval split    : 0.0011239999999865802
example values: 0.013070000000006132
find values   : 0.015536000000061279
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005649999999981503

Building tree 46 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07311099999999726
statistics    : 0.00011899999999798183
test value    : 0.05102899999998911
eval split    : 0.001027000000004108
example values: 0.01289699999995264
find values   : 0.015591999999909234
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005040000000029465

Building tree 46 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07271200000000277
statistics    : 0.00011499999999742272
test value    : 0.050946000000013925
eval split    : 0.001036999999996624
example values: 0.012929000000006852
find values   : 0.015367999999963189
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005029999999983659

Building tree 46 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07302299999999917
statistics    : 0.00012700000000265277
test value    : 0.05114899999998812
eval split    : 0.0010180000000019618
example values: 0.012955999999977763
find values   : 0.015593999999921948
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004859999999986542

Building tree 46 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07321100000000058
statistics    : 0.00011800000000050659
test value    : 0.05110899999997187
eval split    : 0.0010219999999989682
example values: 0.012974999999922687
find values   : 0.015548999999943192
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004919999999977165

Building tree 47 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.073286999999997
statistics    : 0.00011800000000050659
test value    : 0.05119699999999128
eval split    : 0.0010060000000038372
example values: 0.012906000000054263
find values   : 0.015544000000012659
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004869999999961294

Building tree 47 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07568799999999953
statistics    : 0.00012300000000209366
test value    : 0.05216600000002103
eval split    : 0.0010789999999900601
example values: 0.013222999999971563
find values   : 0.015820999999998975
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005309999999987269

Building tree 47 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08063100000000034
statistics    : 0.00011699999999947863
test value    : 0.05757900000000049
eval split    : 0.0010940000000019268
example values: 0.018708000000007274
find values   : 0.0158950000000182
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005530000000000257

Building tree 47 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07351500000000044
statistics    : 0.00011899999999798183
test value    : 0.05129100000000264
eval split    : 0.0010459999999952174
example values: 0.0130300000000112
find values   : 0.015460000000018681
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005129999999979873

Building tree 47 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07376299999999958
statistics    : 0.00011999999999900979
test value    : 0.0515529999999913
eval split    : 0.0010350000000052262
example values: 0.013044999999948459
find values   : 0.01573899999997863
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005099999999949034

Building tree 48 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07361299999999815
statistics    : 0.00011600000000200339
test value    : 0.051174000000006714
eval split    : 0.0011000000000080945
example values: 0.012917000000069123
find values   : 0.015604000000035256
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005469999999974107

Building tree 48 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07353099999999912
statistics    : 0.00012100000000003774
test value    : 0.0512809999999746
eval split    : 0.00102600000000308
example values: 0.013030999999926962
find values   : 0.01554799999997769
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005040000000029465

Building tree 48 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07438199999999995
statistics    : 0.00012500000000059686
test value    : 0.05172999999998851
eval split    : 0.0010700000000021248
example values: 0.013245999999966784
find values   : 0.015700000000013148
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005319999999962022

Building tree 48 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07437900000000042
statistics    : 0.0001279999999965753
test value    : 0.05159000000001157
eval split    : 0.001097000000001458
example values: 0.013100999999977603
find values   : 0.015799000000018992
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005510000000015225

Building tree 48 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07513199999999998
statistics    : 0.0001259999999980721
test value    : 0.05174200000000084
eval split    : 0.0011619999999901154
example values: 0.01322700000007515
find values   : 0.015620000000062362
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005970000000026232

Building tree 49 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07524599999999992
statistics    : 0.00012299999999854094
test value    : 0.05176899999999662
eval split    : 0.001132000000005462
example values: 0.013182999999973077
find values   : 0.015729999999976485
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005899999999989802

Building tree 49 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07508599999999888
statistics    : 0.00014600000000442037
test value    : 0.05162699999998921
eval split    : 0.001123999999990133
example values: 0.013003000000018972
find values   : 0.015751000000005178
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005510000000015225

Building tree 49 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07466399999999851
statistics    : 0.00012699999999910005
test value    : 0.05164799999997882
eval split    : 0.0010809999999956688
example values: 0.013177000000023753
find values   : 0.015772999999995818
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000537000000001342

Building tree 49 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07507999999999981
statistics    : 0.00014199999999675583
test value    : 0.05164099999998939
eval split    : 0.0010740000000097893
example values: 0.012938000000005445
find values   : 0.01578900000003003
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000536000000000314

Building tree 49 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07468599999999981
statistics    : 0.00013399999999919032
test value    : 0.051442000000019306
eval split    : 0.0011859999999970228
example values: 0.013063000000020253
find values   : 0.015650999999969883
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006440000000011992

Building tree 50 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08195500000000067
statistics    : 0.000128000000000128
test value    : 0.058362999999964416
eval split    : 0.001122999999989105
example values: 0.013142999999988803
find values   : 0.02212200000001019
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005540000000010536

Building tree 50 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07582299999999975
statistics    : 0.00012600000000517753
test value    : 0.05199199999999138
eval split    : 0.001096999999987247
example values: 0.013162999999945413
find values   : 0.015708999999979767
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005290000000037764

Building tree 50 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08002300000000062
statistics    : 0.00013699999999872148
test value    : 0.0540220000000069
eval split    : 0.0014210000000041134
example values: 0.013886999999932925
find values   : 0.01634200000002295
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006400000000006401

Building tree 50 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07675899999999913
statistics    : 6.000000000128125e-05
test value    : 0.052606999999998294
eval split    : 0.0012170000000182313
example values: 0.01345599999992686
find values   : 0.01602499999994933
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006230000000044811

Building tree 50 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.0752600000000001
statistics    : 5.499999999969418e-05
test value    : 0.051832999999987805
eval split    : 0.0011049999999990234
example values: 0.013093999999966854
find values   : 0.01582199999998224
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005330000000007828

  Building node on depth 1
induce        : 0.00023200000000045407
statistics    : 9.300000000322939e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00017199999999917281
statistics    : 7.700000000099294e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00017199999999917281
statistics    : 7.700000000099294e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00017099999999814486
statistics    : 7.700000000099294e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00016899999999964166
statistics    : 7.700000000099294e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

Building tree 1 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0818809999999992
statistics    : 0.00013699999999516876
test value    : 0.05719399999998487
eval split    : 0.0012690000000006307
example values: 0.01431099999997798
find values   : 0.01791299999995033
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006740000000000634

Building tree 1 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07815499999999886
statistics    : 0.00015200000000348268
test value    : 0.05478799999998074
eval split    : 0.0011039999999873373
example values: 0.013616000000016726
find values   : 0.017203000000009183
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005410000000019011

Building tree 1 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0828559999999996
statistics    : 0.000128000000000128
test value    : 0.057725999999998834
eval split    : 0.001273999999998665
example values: 0.014574000000013854
find values   : 0.01809000000006833
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006419999999991433

Building tree 1 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0875079999999997
statistics    : 0.00013099999999965917
test value    : 0.05992999999998716
eval split    : 0.0013129999999925701
example values: 0.015274000000083277
find values   : 0.018505999999955947
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005740000000002965

Building tree 1 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08603199999999944
statistics    : 0.00015300000000095793
test value    : 0.05382799999999577
eval split    : 0.0011149999999950921
example values: 0.01355000000002704
find values   : 0.016451000000028415
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005819999999943093

Building tree 2 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08326399999999978
statistics    : 0.00013799999999974943
test value    : 0.05854900000002772
eval split    : 0.0013530000000194775
example values: 0.01482299999995007
find values   : 0.017888999999865263
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007349999999988199

Building tree 2 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08324700000000007
statistics    : 0.00015100000000245473
test value    : 0.056207999999994485
eval split    : 0.0012210000000010268
example values: 0.014154999999977491
find values   : 0.01713799999990684
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006300000000010186

Building tree 2 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07739100000000221
statistics    : 0.0001279999999965753
test value    : 0.054144000000007964
eval split    : 0.0011179999999946233
example values: 0.013650000000005491
find values   : 0.016437999999951103
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005750000000013245

Building tree 2 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07639299999999949
statistics    : 0.0001319999999971344
test value    : 0.053927999999995535
eval split    : 0.0010720000000041807
example values: 0.013663000000001091
find values   : 0.016459999999980823
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005440000000014322

Building tree 2 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07701199999999986
statistics    : 0.0001529999999974052
test value    : 0.053837000000012125
eval split    : 0.0011180000000017287
example values: 0.01356199999995411
find values   : 0.016291000000027367
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005759999999987997

Building tree 3 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07905200000000079
statistics    : 0.0001299999999986312
test value    : 0.05453199999998404
eval split    : 0.001205000000002343
example values: 0.013980999999937183
find values   : 0.016582999999997128
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006390000000031648

Building tree 3 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08064500000000052
statistics    : 0.00013500000000021828
test value    : 0.05562100000000214
eval split    : 0.0013359999999913441
example values: 0.01415800000001255
find values   : 0.01674099999995704
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000686999999999216

Building tree 3 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07689600000000141
statistics    : 0.00014599999999731494
test value    : 0.054099000000000785
eval split    : 0.001102999999989862
example values: 0.013636000000026627
find values   : 0.01658900000002106
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005659999999991783

Building tree 3 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07614799999999988
statistics    : 0.0001259999999980721
test value    : 0.053942000000009926
eval split    : 0.0010719999999935226
example values: 0.013622000000001577
find values   : 0.016581000000012835
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005179999999995744

Building tree 3 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07609799999999822
statistics    : 0.00012100000000003774
test value    : 0.0536929999999991
eval split    : 0.0010520000000191487
example values: 0.013627000000028033
find values   : 0.016125000000002387
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005209999999991055

Building tree 4 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07636899999999969
statistics    : 0.0001260000000016248
test value    : 0.053875999999998925
eval split    : 0.0010820000000144603
example values: 0.01359999999995054
find values   : 0.01635799999999321
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005229999999976087

Building tree 4 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07634300000000138
statistics    : 0.0001279999999965753
test value    : 0.05384800000001988
eval split    : 0.001098000000013144
example values: 0.013656999999966501
find values   : 0.01638299999999404
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005439999999978795

Building tree 4 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07562499999999872
statistics    : 0.0001430000000013365
test value    : 0.05343699999999174
eval split    : 0.0010349999999981208
example values: 0.013500000000071566
find values   : 0.016210000000036473
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005080000000035056

Building tree 4 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07578099999999921
statistics    : 0.00011800000000050659
test value    : 0.05364700000000866
eval split    : 0.0010840000000094108
example values: 0.01356700000003741
find values   : 0.01616800000000751
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000020816

Building tree 4 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07538400000000323
statistics    : 0.00011600000000200339
test value    : 0.05343400000000642
eval split    : 0.0010410000000078412
example values: 0.01352799999994403
find values   : 0.016130999999997897
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005220000000036862

Building tree 5 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08157200000000131
statistics    : 0.00012100000000359046
test value    : 0.05920200000000264
eval split    : 0.0010909999999881848
example values: 0.019190999999992187
find values   : 0.01617800000001779
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005480000000019913

Building tree 5 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07567500000000038
statistics    : 0.00011799999999695387
test value    : 0.05370699999998152
eval split    : 0.0010679999999965162
example values: 0.013673999999920028
find values   : 0.01608000000007337
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005430000000004043

Building tree 5 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07627399999999795
statistics    : 0.00012700000000265277
test value    : 0.05381099999999961
eval split    : 0.0010239999999974714
example values: 0.013712000000079883
find values   : 0.016293999999980713
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004929999999987444

Building tree 5 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07653399999999877
statistics    : 0.000128000000000128
test value    : 0.0535050000000048
eval split    : 0.001084000000005858
example values: 0.013722999999981056
find values   : 0.016272000000032705
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005479999999984386

Building tree 5 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07559800000000294
statistics    : 0.0001220000000010657
test value    : 0.05356799999999495
eval split    : 0.001034999999994568
example values: 0.01360299999996073
find values   : 0.016285999999976042
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005109999999994841

Building tree 6 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0752820000000014
statistics    : 0.00012100000000359046
test value    : 0.05308400000000901
eval split    : 0.001056000000005497
example values: 0.01336099999996776
find values   : 0.01608899999999025
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005320000000033076

Building tree 6 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07631600000000205
statistics    : 0.00012500000000414957
test value    : 0.05356100000001618
eval split    : 0.0010919999999927654
example values: 0.013549000000047329
find values   : 0.016147000000014344
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005579999999945073

Building tree 6 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07757199999999997
statistics    : 0.00013499999999666557
test value    : 0.054346999999989265
eval split    : 0.0011469999999818015
example values: 0.013728000000046592
find values   : 0.01640799999995579
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005699999999997374

Building tree 6 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07915799999999962
statistics    : 0.00014200000000030855
test value    : 0.054644999999993615
eval split    : 0.0011589999999976897
example values: 0.014004999999979617
find values   : 0.016541000000025008
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005889999999979523

Building tree 6 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07980299999999829
statistics    : 0.00013600000000124624
test value    : 0.0549350000000004
eval split    : 0.0012089999999957968
example values: 0.013920000000030797
find values   : 0.016829000000001315
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006310000000055993

Building tree 7 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07732000000000028
statistics    : 0.00013200000000068712
test value    : 0.05375500000001665
eval split    : 0.001153000000016391
example values: 0.013599999999961199
find values   : 0.016325999999970975
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005710000000007653

Building tree 7 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0780789999999989
statistics    : 0.00015500000000301384
test value    : 0.0542170000000084
eval split    : 0.001182000000003569
example values: 0.013709000000002192
find values   : 0.01638700000008697
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006089999999971951

Building tree 7 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07731400000000122
statistics    : 0.0001430000000013365
test value    : 0.05408100000002136
eval split    : 0.00130500000000211
example values: 0.013552999999987492
find values   : 0.016270999999960623
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007540000000005875

Building tree 7 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07754299999999859
statistics    : 0.00013699999999872148
test value    : 0.05414499999999478
eval split    : 0.0011239999999936856
example values: 0.01376799999999534
find values   : 0.016559999999984143
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005609999999975912

Building tree 7 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07760800000000145
statistics    : 0.00013799999999974943
test value    : 0.05430299999999022
eval split    : 0.0010960000000039827
example values: 0.013742999999983851
find values   : 0.016609999999946723
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999960041

Building tree 8 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08495699999999928
statistics    : 0.00013200000000068712
test value    : 0.05387200000001968
eval split    : 0.0012130000000105667
example values: 0.013533999999999935
find values   : 0.016448000000039542
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006010000000031823

Building tree 8 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07701700000000145
statistics    : 0.00013600000000479895
test value    : 0.05337799999999859
eval split    : 0.0010999999999974364
example values: 0.013585999999992993
find values   : 0.01604900000002374
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000025505

Building tree 8 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07688399999999973
statistics    : 0.00013000000000218392
test value    : 0.053586000000009903
eval split    : 0.0011619999999972208
example values: 0.013567999999992253
find values   : 0.016332999999995934
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006210000000024252

Building tree 8 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0764060000000022
statistics    : 0.0001260000000016248
test value    : 0.053466000000018
eval split    : 0.0011029999999969675
example values: 0.013687000000004446
find values   : 0.016152000000008826
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005419999999993763

Building tree 8 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07556500000000099
statistics    : 0.00013499999999666557
test value    : 0.05316799999998878
eval split    : 0.001085000000006886
example values: 0.013485999999989673
find values   : 0.016109999999994074
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000558999999999088

Building tree 9 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07585500000000067
statistics    : 0.00013300000000171508
test value    : 0.053330999999996465
eval split    : 0.0010690000000046496
example values: 0.013589999999958025
find values   : 0.016079999999977446
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005429999999968516

Building tree 9 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07570600000000027
statistics    : 0.00013400000000274304
test value    : 0.05315199999998654
eval split    : 0.0011559999999981585
example values: 0.01337499999996794
find values   : 0.016201999999946537
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006069999999986919

Building tree 9 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07751799999999776
statistics    : 0.00012700000000265277
test value    : 0.05406500000001557
eval split    : 0.0011400000000030275
example values: 0.013738999999933554
find values   : 0.01645799999995745
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005580000000016128

Building tree 9 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0763510000000025
statistics    : 0.0001239999999995689
test value    : 0.05320400000001513
eval split    : 0.0010800000000088517
example values: 0.013457000000006047
find values   : 0.01619400000002358
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005410000000019011

Building tree 9 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07877699999999876
statistics    : 0.0001390000000043301
test value    : 0.05394500000001301
eval split    : 0.0012059999999998183
example values: 0.013886999999986216
find values   : 0.016248999999991298
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006099999999946704

Building tree 10 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07779700000000034
statistics    : 0.00015400000000198588
test value    : 0.05405599999999566
eval split    : 0.0011359999999847048
example values: 0.013691000000005005
find values   : 0.016500000000075232
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005799999999993588

Building tree 10 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0765589999999996
statistics    : 0.00012499999999704414
test value    : 0.05392799999999198
eval split    : 0.001081999999993144
example values: 0.013704999999966105
find values   : 0.016465000000010832
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005389999999998452

Building tree 10 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07631299999999896
statistics    : 0.00013300000000171508
test value    : 0.05327899999998564
eval split    : 0.0011009999999913589
example values: 0.013515000000047905
find values   : 0.01623200000010172
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999995568

Building tree 10 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0779040000000002
statistics    : 0.00013200000000423984
test value    : 0.053864000000007906
eval split    : 0.0011789999999862744
example values: 0.013622999999959973
find values   : 0.01646000000000214
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005919999999974834

Building tree 10 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07620900000000219
statistics    : 0.0001640000000016073
test value    : 0.05348500000001977
eval split    : 0.001114000000008275
example values: 0.01356399999992064
find values   : 0.016287999999988756
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000581999999997862

Building tree 11 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07619599999999949
statistics    : 0.00012699999999910005
test value    : 0.05331000000001751
eval split    : 0.0010799999999981935
example values: 0.013553999999995625
find values   : 0.016301999999935646
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005540000000046064

Building tree 11 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07612400000000008
statistics    : 0.00013000000000218392
test value    : 0.05326600000001136
eval split    : 0.0011039999999944428
example values: 0.013447999999900873
find values   : 0.016307999999959577
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005759999999987997

Building tree 11 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07589499999999916
statistics    : 0.00013299999999460965
test value    : 0.05316499999998214
eval split    : 0.0011609999999855347
example values: 0.013491999999967419
find values   : 0.016070999999900693
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005959999999980425

Building tree 11 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.082256000000001
statistics    : 0.00015699999999796432
test value    : 0.05932999999999922
eval split    : 0.0011260000000099524
example values: 0.013572999999976076
find values   : 0.02210699999989174
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005750000000013245

Building tree 11 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07560699999999798
statistics    : 0.00012899999999760325
test value    : 0.05300600000000344
eval split    : 0.001063999999995957
example values: 0.01347300000001539
find values   : 0.015977000000003017
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005440000000014322

Building tree 12 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0777239999999999
statistics    : 0.00013599999999769352
test value    : 0.05409000000000219
eval split    : 0.0011580000000108726
example values: 0.013677999999998747
find values   : 0.016625999999991592
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005760000000023524

Building tree 12 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07528899999999794
statistics    : 0.0001260000000016248
test value    : 0.05288400000000948
eval split    : 0.0010269999999970025
example values: 0.013372000000106965
find values   : 0.016052000000019717
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000512000000000512

Building tree 12 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07501700000000255
statistics    : 0.00012499999999704414
test value    : 0.05274400000000057
eval split    : 0.0010829999999977247
example values: 0.01333800000000096
find values   : 0.015934000000061843
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005300000000048044

Building tree 12 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0744429999999987
statistics    : 0.00011999999999900979
test value    : 0.05254400000000814
eval split    : 0.0010489999999840904
example values: 0.013248000000011473
find values   : 0.01587700000000325
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005210000000026582

Building tree 12 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07505300000000048
statistics    : 0.00011800000000050659
test value    : 0.052895999999996945
eval split    : 0.0010129999999897166
example values: 0.013362999999944947
find values   : 0.016030000000096578
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004789999999950112

Building tree 13 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07506799999999814
statistics    : 0.00012899999999760325
test value    : 0.05309099999999134
eval split    : 0.0010219999999989682
example values: 0.013432000000037192
find values   : 0.016003000000072376
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005000000000023874

Building tree 13 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07699600000000117
statistics    : 0.00012499999999704414
test value    : 0.0535439999999916
eval split    : 0.001086999999984073
example values: 0.013550000000009277
find values   : 0.01629400000001624
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005469999999974107

Building tree 13 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0766069999999992
statistics    : 0.0001239999999995689
test value    : 0.05339999999999989
eval split    : 0.0010969999999943525
example values: 0.013612000000051694
find values   : 0.016141000000075678
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005500000000004945

Building tree 13 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08121500000000026
statistics    : 0.00011599999999489796
test value    : 0.05338499999999513
eval split    : 0.0010169999999973811
example values: 0.013499999999915246
find values   : 0.016202999999975987
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004929999999987444

Building tree 13 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08079599999999942
statistics    : 0.00012300000000209366
test value    : 0.05290700000000825
eval split    : 0.001036999999996624
example values: 0.013390999999963071
find values   : 0.015973999999992827
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005240000000021894

Building tree 14 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07510100000000008
statistics    : 0.00012299999999854094
test value    : 0.05288999999999078
eval split    : 0.0010170000000009338
example values: 0.013455999999955282
find values   : 0.015983000000009184
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004789999999985639

Building tree 14 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07506199999999907
statistics    : 0.00011599999999845068
test value    : 0.052869999999977324
eval split    : 0.0010320000000092477
example values: 0.01342600000001326
find values   : 0.015971999999973008
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005119999999969593

Building tree 14 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07506700000000066
statistics    : 0.00011900000000508726
test value    : 0.052763999999978495
eval split    : 0.0011449999999939564
example values: 0.013344000000028444
find values   : 0.015984999999989924
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006190000000003693

Building tree 14 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07641100000000023
statistics    : 0.00012300000000209366
test value    : 0.053544000000002256
eval split    : 0.00108300000000483
example values: 0.01362999999991743
find values   : 0.016288000000038494
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005419999999993763

Building tree 14 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07568899999999701
statistics    : 0.00012500000000414957
test value    : 0.053201000000012044
eval split    : 0.0011079999999914492
example values: 0.013452000000057751
find values   : 0.016149999999921505
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005870000000030018

Building tree 15 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07671600000000112
statistics    : 0.00013899999999722468
test value    : 0.05353099999998889
eval split    : 0.0011380000000009716
example values: 0.013672999999982949
find values   : 0.016084000000070375
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006099999999982231

Building tree 15 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07621999999999929
statistics    : 0.00013599999999769352
test value    : 0.05329799999999807
eval split    : 0.0011779999999994573
example values: 0.0134720000000641
find values   : 0.016178000000067527
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000610999999999251

Building tree 15 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07640100000000061
statistics    : 0.00012399999999601619
test value    : 0.05347200000001351
eval split    : 0.0011009999999913589
example values: 0.013544999999986373
find values   : 0.016247000000007006
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005790000000018836

Building tree 15 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.0759280000000011
statistics    : 5.300000000119098e-05
test value    : 0.05311700000002517
eval split    : 0.0010509999999932518
example values: 0.013491999999946103
find values   : 0.01606299999995997
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004980000000003315

Building tree 15 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07642600000000144
statistics    : 0.00013099999999965917
test value    : 0.053397999999997836
eval split    : 0.0011179999999839652
example values: 0.01353900000005126
find values   : 0.016122000000002856
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005350000000028388

Building tree 16 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0850660000000012
statistics    : 0.00013200000000068712
test value    : 0.05448100000001688
eval split    : 0.0012409999999931642
example values: 0.013759000000074906
find values   : 0.01653400000001426
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006019999999971049

Building tree 16 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07670500000000047
statistics    : 0.00012700000000265277
test value    : 0.05336799999998476
eval split    : 0.0011560000000088166
example values: 0.013548000000017879
find values   : 0.016196000000004318
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005989999999975737

Building tree 16 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08006500000000116
statistics    : 0.00014200000000030855
test value    : 0.054688999999999766
eval split    : 0.0012130000000247776
example values: 0.013870000000000715
find values   : 0.01672699999997107
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006159999999937327

Building tree 16 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0786289999999994
statistics    : 0.00019200000000196837
test value    : 0.05439299999998681
eval split    : 0.0011580000000002144
example values: 0.013769999999972526
find values   : 0.016344000000028558
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005849999999938404

Building tree 16 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07663900000000012
statistics    : 0.0001619999999995514
test value    : 0.0536899999999747
eval split    : 0.0010939999999948213
example values: 0.013568999999957754
find values   : 0.016417999999962518
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005440000000014322

Building tree 17 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07706900000000161
statistics    : 0.00013599999999769352
test value    : 0.053424999999990064
eval split    : 0.001104999999991918
example values: 0.013597000000018511
find values   : 0.016170999999932434
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005619999999986192

Building tree 17 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07861200000000323
statistics    : 0.0001410000000028333
test value    : 0.05439199999999644
eval split    : 0.001258000000003534
example values: 0.013794999999987567
find values   : 0.0164310000000647
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005870000000030018

Building tree 17 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07594600000000185
statistics    : 0.0001299999999986312
test value    : 0.053102000000013305
eval split    : 0.0010630000000020345
example values: 0.013511999999963109
find values   : 0.016019000000003558
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005449999999989075

Building tree 17 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07552899999999951
statistics    : 0.0001299999999986312
test value    : 0.05304000000001352
eval split    : 0.0011180000000052814
example values: 0.01343600000002354
find values   : 0.01601100000004152
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000596000000005148

Building tree 17 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07567099999999982
statistics    : 0.000128000000000128
test value    : 0.053197999999987644
eval split    : 0.0010500000000064347
example values: 0.013487999999991729
find values   : 0.016193999999970288
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005229999999976087

Building tree 18 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07586799999999982
statistics    : 0.0001299999999986312
test value    : 0.053150999999999726
eval split    : 0.0010870000000160474
example values: 0.013512999999978348
find values   : 0.01600999999998365
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005659999999991783

Building tree 18 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0822119999999984
statistics    : 0.00013099999999610645
test value    : 0.05312400000003592
eval split    : 0.0011259999999957415
example values: 0.013342999999981231
find values   : 0.016189999999941307
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005939999999924339

Building tree 18 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07637300000000025
statistics    : 0.0001370000000022742
test value    : 0.05330900000000227
eval split    : 0.0011110000000122966
example values: 0.013445999999934344
find values   : 0.01618399999997422
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005740000000002965

Building tree 18 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07791200000000131
statistics    : 0.0001260000000016248
test value    : 0.05410300000000845
eval split    : 0.0011810000000274101
example values: 0.013616000000013173
find values   : 0.01639999999996178
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000581999999997862

Building tree 18 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07638399999999734
statistics    : 0.00012500000000059686
test value    : 0.053450999999995474
eval split    : 0.0010789999999936128
example values: 0.013674000000069242
find values   : 0.016117000000139825
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005510000000015225

Building tree 19 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07614400000000288
statistics    : 0.00013100000000321188
test value    : 0.053252000000004074
eval split    : 0.001102000000003045
example values: 0.013539999999945707
find values   : 0.01602799999994886
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999995568

Building tree 19 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07597399999999865
statistics    : 0.00012800000000368073
test value    : 0.053105999999988995
eval split    : 0.001089999999997815
example values: 0.013576999999976636
find values   : 0.01606099999996502
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005639999999971224

Building tree 19 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07600400000000107
statistics    : 0.00012900000000115597
test value    : 0.05340099999999737
eval split    : 0.0012949999999811723
example values: 0.013610999999986717
find values   : 0.016090000000055227
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007629999999956283

Building tree 19 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0760050000000021
statistics    : 0.0001279999999965753
test value    : 0.053188999999996156
eval split    : 0.0011220000000093933
example values: 0.013486000000035858
find values   : 0.016096000000001
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005729999999992685

Building tree 19 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07878900000000044
statistics    : 0.00013799999999974943
test value    : 0.05385800000000174
eval split    : 0.0011200000000144428
example values: 0.013797000000046467
find values   : 0.016195000000035265
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000020816

Building tree 20 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08553399999999911
statistics    : 0.00012500000000059686
test value    : 0.053944999999991694
eval split    : 0.0011469999999782488
example values: 0.013702000000016312
find values   : 0.016277000000027186
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005869999999958964

Building tree 20 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08243500000000026
statistics    : 0.000128000000000128
test value    : 0.059472000000013736
eval split    : 0.0011199999999966792
example values: 0.013460999999963974
find values   : 0.016356000000104842
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005419999999993763

Building tree 20 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07586099999999973
statistics    : 0.0001359999999941408
test value    : 0.05307199999999668
eval split    : 0.0011269999999932168
example values: 0.013477999999985002
find values   : 0.01604299999996428
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005760000000023524

Building tree 20 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07537699999999958
statistics    : 5.3999999998666226e-05
test value    : 0.0529959999999825
eval split    : 0.0010899999999942622
example values: 0.013433000000027562
find values   : 0.016203000000082568
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005269999999981678

Building tree 20 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07575999999999894
statistics    : 0.00013200000000423984
test value    : 0.0531460000000088
eval split    : 0.0010839999999952
example values: 0.013503000000017806
find values   : 0.01617600000006192
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005400000000008731

Building tree 21 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07564599999999899
statistics    : 0.00011899999999798183
test value    : 0.05291400000000834
eval split    : 0.0010649999999898796
example values: 0.0134249999999696
find values   : 0.01601499999997813
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005410000000019011

Building tree 21 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07665199999999928
statistics    : 0.0001239999999995689
test value    : 0.05352699999998123
eval split    : 0.0010880000000028645
example values: 0.013489999999983127
find values   : 0.016346000000005745
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005389999999998452

Building tree 21 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07533100000000204
statistics    : 0.00013699999999516876
test value    : 0.05317500000001729
eval split    : 0.0010239999999974714
example values: 0.01341499999994511
find values   : 0.016175999999980206
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004919999999977165

Building tree 21 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07523599999999675
statistics    : 0.0001299999999986312
test value    : 0.0530049999999882
eval split    : 0.0010729999999945505
example values: 0.013518000000022568
find values   : 0.016017999999970556
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000528999999996671

Building tree 21 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07491999999999877
statistics    : 0.00012100000000003774
test value    : 0.05288399999999882
eval split    : 0.0010629999999878237
example values: 0.013409000000009996
find values   : 0.015950000000032105
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005190000000006023

Building tree 22 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07505099999999842
statistics    : 0.0001239999999995689
test value    : 0.0530709999999992
eval split    : 0.0010199999999969123
example values: 0.01342699999996455
find values   : 0.016119999999993695
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004980000000038842

Building tree 22 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07525499999999852
statistics    : 0.00011999999999545707
test value    : 0.05316099999998514
eval split    : 0.00103800000000831
example values: 0.013422999999981755
find values   : 0.016126999999958258
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005200000000016303

Building tree 22 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07550700000000177
statistics    : 0.00011800000000050659
test value    : 0.05323800000001455
eval split    : 0.0010859999999972558
example values: 0.013495999999953767
find values   : 0.016123000000007437
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000551999999995445

Building tree 22 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0761429999999983
statistics    : 0.00013099999999610645
test value    : 0.053326000000016194
eval split    : 0.0011370000000141545
example values: 0.01362100000001476
find values   : 0.01618300000002293
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005790000000018836

Building tree 22 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07607100000000244
statistics    : 0.00011800000000050659
test value    : 0.05343000000000586
eval split    : 0.001243999999996248
example values: 0.013648999999979594
find values   : 0.016236999999954094
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007149999999995771

Building tree 23 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07732700000000037
statistics    : 0.0001239999999995689
test value    : 0.053950999999990756
eval split    : 0.0011419999999837671
example values: 0.013579999999983272
find values   : 0.01631799999998762
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005939999999995393

Building tree 23 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0765589999999996
statistics    : 0.00013000000000573664
test value    : 0.053643000000015206
eval split    : 0.001118999999999204
example values: 0.013635000000068231
find values   : 0.016398000000013013
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005610000000011439

Building tree 23 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07595799999999997
statistics    : 0.00011700000000303135
test value    : 0.05357299999998588
eval split    : 0.001104000000005101
example values: 0.013707999999965637
find values   : 0.016212999999972055
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000573000000006374

Building tree 23 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0759849999999993
statistics    : 0.00013099999999965917
test value    : 0.05333899999997982
eval split    : 0.001076999999991557
example values: 0.013553999999942334
find values   : 0.01610699999998033
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005530000000000257

Building tree 23 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07629299999999972
statistics    : 0.00014399999999881175
test value    : 0.053493999999997044
eval split    : 0.0011060000000107095
example values: 0.013580999999934562
find values   : 0.016380999999981327
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005670000000002062

Building tree 24 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0763309999999997
statistics    : 0.0001390000000007774
test value    : 0.05304899999999435
eval split    : 0.0011209999999941545
example values: 0.013441000000018022
find values   : 0.015979999999998995
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005969999999990705

Building tree 24 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07757799999999904
statistics    : 0.000128000000000128
test value    : 0.05395799999999795
eval split    : 0.001205000000002343
example values: 0.013596000000074326
find values   : 0.016448000000078622
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006310000000020466

Building tree 24 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0784489999999991
statistics    : 0.0001240000000031216
test value    : 0.05421999999999372
eval split    : 0.0012150000000019645
example values: 0.01362099999989752
find values   : 0.01655099999999976
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006149999999998101

Building tree 24 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07684599999999975
statistics    : 0.0001279999999965753
test value    : 0.05356699999998682
eval split    : 0.0011730000000156338
example values: 0.013677999999988089
find values   : 0.01617800000001779
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006239999999984036

Building tree 24 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08353400000000022
statistics    : 0.00013099999999610645
test value    : 0.059868000000012245
eval split    : 0.0011590000000119005
example values: 0.013502000000009673
find values   : 0.022612999999989114
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006029999999981328

Building tree 25 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07744299999999882
statistics    : 0.00014200000000030855
test value    : 0.05363399999997398
eval split    : 0.0011619999999972208
example values: 0.013656000000043633
find values   : 0.016432999999988596
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006219999999999004

Building tree 25 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.077102
statistics    : 0.00013300000000171508
test value    : 0.05355399999998767
eval split    : 0.0011420000000121888
example values: 0.013537000000013677
find values   : 0.016328000000005005
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005780000000044083

Building tree 25 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07693399999999784
statistics    : 0.0001469999999983429
test value    : 0.053686000000016776
eval split    : 0.0010849999999997806
example values: 0.01349099999993797
find values   : 0.016440999999922212
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005410000000019011

Building tree 25 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07801499999999706
statistics    : 0.0001299999999986312
test value    : 0.054068999999994816
eval split    : 0.0012609999999959598
example values: 0.01372499999994048
find values   : 0.01644400000004609
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006600000000034356

Building tree 25 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07848100000000002
statistics    : 0.0001319999999971344
test value    : 0.05432699999998647
eval split    : 0.00112899999999172
example values: 0.013825000000068144
find values   : 0.01644599999994867
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005750000000013245

Building tree 26 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07679699999999912
statistics    : 0.00012699999999910005
test value    : 0.05353500000000011
eval split    : 0.001063000000019798
example values: 0.013690000000071478
find values   : 0.016259999999935104
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000534999999999286

Building tree 26 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08465400000000045
statistics    : 0.00013600000000124624
test value    : 0.053875999999984714
eval split    : 0.0011380000000151824
example values: 0.013462000000000529
find values   : 0.01632000000000744
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005800000000029115

Building tree 26 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07932599999999823
statistics    : 0.00013799999999974943
test value    : 0.05459300000001832
eval split    : 0.0011670000000130187
example values: 0.014006000000016172
find values   : 0.016556000000036875
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000534999999999286

Building tree 26 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.077259999999999
statistics    : 0.0001409999999992806
test value    : 0.05389200000000827
eval split    : 0.0010930000000044515
example values: 0.013833000000058604
find values   : 0.016276000000004842
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000534999999999286

Building tree 26 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07765700000000209
statistics    : 0.00013499999999666557
test value    : 0.054055000000008846
eval split    : 0.0012559999999979254
example values: 0.013613999999947168
find values   : 0.016616999999936155
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006890000000012719

Building tree 27 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07680100000000323
statistics    : 0.00012800000000723344
test value    : 0.053514000000006945
eval split    : 0.0010839999999952
example values: 0.013602000000037862
find values   : 0.01621999999998991
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005470000000009634

Building tree 27 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07595499999999689
statistics    : 0.00013399999999919032
test value    : 0.05336299999998673
eval split    : 0.0011110000000122966
example values: 0.01348899999997144
find values   : 0.016136999999989854
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00058299999999889

Building tree 27 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07625099999999918
statistics    : 0.0001339999999956376
test value    : 0.05368599999999546
eval split    : 0.0010659999999909076
example values: 0.013561999999971874
find values   : 0.01649100000001269
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005369999999977892

Building tree 27 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07635199999999998
statistics    : 0.00012500000000059686
test value    : 0.053393999999993724
eval split    : 0.0011130000000001417
example values: 0.013551000000031621
find values   : 0.016179000000040134
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00058299999999889

Building tree 27 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07605099999999965
statistics    : 0.0001370000000022742
test value    : 0.0532510000000066
eval split    : 0.0010859999999972558
example values: 0.01343599999998446
find values   : 0.016165000000079033
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005640000000042278

Building tree 28 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07589399999999813
statistics    : 5.299999999763827e-05
test value    : 0.053389000000013453
eval split    : 0.0010429999999956863
example values: 0.013492999999989763
find values   : 0.01623999999993231
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005169999999985464

Building tree 28 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07793500000000009
statistics    : 0.0001810000000048717
test value    : 0.05396599999999552
eval split    : 0.0011569999999849756
example values: 0.01363000000004888
find values   : 0.016458000000003636
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005999999999986017

Building tree 28 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07672400000000223
statistics    : 0.0001429999999977838
test value    : 0.05353699999998085
eval split    : 0.0011059999999858405
example values: 0.013606999999986158
find values   : 0.01629700000001577
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005449999999989075

Building tree 28 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07622699999999938
statistics    : 0.00012699999999554734
test value    : 0.05339900000000242
eval split    : 0.001094999999999402
example values: 0.013591999999931659
find values   : 0.016134999999973587
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005470000000045161

Building tree 28 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07592299999999952
statistics    : 0.00013200000000068712
test value    : 0.05331600000000236
eval split    : 0.0011049999999954707
example values: 0.013533999999943092
find values   : 0.016246000000016636
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005709999999972126

Building tree 29 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07633900000000082
statistics    : 0.00013299999999816237
test value    : 0.05333500000002189
eval split    : 0.0011099999999863996
example values: 0.0135389999999731
find values   : 0.016164999999940477
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005820000000014147

Building tree 29 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08263200000000026
statistics    : 0.0001279999999965753
test value    : 0.053638999999986225
eval split    : 0.0011019999999994923
example values: 0.013727000000045564
find values   : 0.01617000000006641
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005710000000007653

Building tree 29 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07639599999999902
statistics    : 0.00012599999999451938
test value    : 0.053626999999995206
eval split    : 0.0010909999999917375
example values: 0.013561999999957663
find values   : 0.016279999999955663
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000020816

Building tree 29 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07923500000000061
statistics    : 0.00013600000000124624
test value    : 0.05478499999998476
eval split    : 0.0011490000000051737
example values: 0.01400699999997812
find values   : 0.016661999999961097
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005710000000007653

Building tree 29 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07681300000000135
statistics    : 0.000128000000000128
test value    : 0.05371999999998778
eval split    : 0.0011520000000224684
example values: 0.013680000000082515
find values   : 0.016415999999921382
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006070000000022446

Building tree 30 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0756020000000035
statistics    : 0.00011900000000508726
test value    : 0.053479000000010046
eval split    : 0.0010369999999895185
example values: 0.013603000000088628
find values   : 0.016286000000071965
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005000000000023874

Building tree 30 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07519800000000032
statistics    : 5.099999999913507e-05
test value    : 0.053213999999996986
eval split    : 0.001012000000010005
example values: 0.013589000000074236
find values   : 0.01608000000008758
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00046400000000090813

Building tree 30 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0751860000000022
statistics    : 0.00012299999999498823
test value    : 0.05309199999998526
eval split    : 0.0010750000000498972
example values: 0.013441999999919574
find values   : 0.01611399999992358
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005319999999926495

Building tree 30 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0751860000000022
statistics    : 0.00011799999999340116
test value    : 0.052969999999994855
eval split    : 0.001022000000013179
example values: 0.01338200000000711
find values   : 0.016070000000034668
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004989999999978068

Building tree 30 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07520900000000097
statistics    : 0.00012700000000620548
test value    : 0.05305099999997509
eval split    : 0.001028000000040663
example values: 0.013428999999973712
find values   : 0.016134999999955824
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005089999999938755

Building tree 31 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07679200000000463
statistics    : 0.0001200000000025625
test value    : 0.05378100000002206
eval split    : 0.0011570000000062919
example values: 0.013654999999872075
find values   : 0.016293000000203506
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006019999999935521

Building tree 31 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07491599999999465
statistics    : 0.00011700000000303135
test value    : 0.05286800000003922
eval split    : 0.0010479999999617462
example values: 0.013302999999957876
find values   : 0.015981999999993945
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005170000000020991

Building tree 31 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08107400000000098
statistics    : 0.0001189999999908764
test value    : 0.05321300000001372
eval split    : 0.0010559999999841807
example values: 0.013598000000051513
find values   : 0.016108999999886464
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005290000000073292

Building tree 31 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07519100000000378
statistics    : 0.00013400000000274304
test value    : 0.05300099999998764
eval split    : 0.0010180000000161726
example values: 0.013450000000240436
find values   : 0.016150999999993587
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00048700000000678756

Building tree 31 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07527699999999982
statistics    : 0.00012599999999451938
test value    : 0.053044000000006974
eval split    : 0.00106699999998483
example values: 0.01356399999989577
find values   : 0.015918999999826156
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005319999999997549

Building tree 32 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07500300000000237
statistics    : 0.0001359999999905881
test value    : 0.05307600000001855
eval split    : 0.0010449999999835313
example values: 0.01347799999995658
find values   : 0.01617899999986605
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005060000000014497

Building tree 32 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0758470000000031
statistics    : 0.00012400000000667433
test value    : 0.0533399999999844
eval split    : 0.0010429999999885808
example values: 0.013466999999792506
find values   : 0.01609399999998118
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004940000000104305

Building tree 32 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07660599999999818
statistics    : 0.00012400000000667433
test value    : 0.05354799999997795
eval split    : 0.0012100000000643263
example values: 0.01355500000011034
find values   : 0.016172999999930937
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006500000000002615

Building tree 32 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0759740000000022
statistics    : 0.00012699999999910005
test value    : 0.0534449999999822
eval split    : 0.0011450000000436944
example values: 0.013618000000022334
find values   : 0.01619200000003218
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006170000000054188

Building tree 32 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07648400000000066
statistics    : 0.00013599999999769352
test value    : 0.05347299999998256
eval split    : 0.001103000000028942
example values: 0.013579999999969061
find values   : 0.016112000000021
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005679999999941288

Building tree 33 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08812600000000259
statistics    : 0.00013899999999722468
test value    : 0.05582100000004431
eval split    : 0.0012369999999606307
example values: 0.014109999999909917
find values   : 0.017140999999952555
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005920000000045889

Building tree 33 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07781500000000108
statistics    : 0.00012900000000115597
test value    : 0.054097999999996205
eval split    : 0.0011940000000265627
example values: 0.013720000000034815
find values   : 0.016409999999744684
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005649999999945976

Building tree 33 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08416400000000124
statistics    : 0.0001549999999923557
test value    : 0.054071999999990794
eval split    : 0.0011739999999917927
example values: 0.01367200000009916
find values   : 0.01643300000003478
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006240000000019563

Building tree 33 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07808700000000357
statistics    : 0.0001260000000016248
test value    : 0.05422399999996941
eval split    : 0.0012090000000455348
example values: 0.013732000000196365
find values   : 0.01650300000004279
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005920000000045889

Building tree 33 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0767799999999994
statistics    : 0.00013200000000068712
test value    : 0.053695999999959554
eval split    : 0.0011409999999827392
example values: 0.013729999999874565
find values   : 0.01639300000005761
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005740000000002965

Building tree 34 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0773629999999983
statistics    : 0.00014600000000797309
test value    : 0.05407299999998827
eval split    : 0.001117000000036228
example values: 0.013802000000232795
find values   : 0.016337999999791464
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005760000000094578

Building tree 34 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07719300000000118
statistics    : 0.00013400000000274304
test value    : 0.05375399999996233
eval split    : 0.0011400000000136856
example values: 0.013619000000005599
find values   : 0.016252999999792905
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000602000000007763

Building tree 34 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07717500000000399
statistics    : 0.00014600000000797309
test value    : 0.05386300000002109
eval split    : 0.0011179999999910706
example values: 0.01365499999994313
find values   : 0.016484000000147603
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005749999999977717

Building tree 34 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07737300000000147
statistics    : 0.00013100000000321188
test value    : 0.05363400000000951
eval split    : 0.0011780000000172208
example values: 0.013587999999948863
find values   : 0.016292999999912183
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006139999999987822

Building tree 34 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07794600000000429
statistics    : 5.300000000119098e-05
test value    : 0.05423999999999296
eval split    : 0.001123999999975922
example values: 0.013824999999869192
find values   : 0.016661999999747934
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005430000000004043

Building tree 35 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07801800000000014
statistics    : 0.00013599999999769352
test value    : 0.05416100000000057
eval split    : 0.001246999999999332
example values: 0.013770999999913158
find values   : 0.016552000000018552
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006580000000013797

Building tree 35 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07595799999999997
statistics    : 0.00013100000000321188
test value    : 0.05336199999999991
eval split    : 0.0011049999999741544
example values: 0.013532000000154198
find values   : 0.016182000000092955
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999960041

Building tree 35 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0759960000000035
statistics    : 0.00012300000000209366
test value    : 0.053263000000008276
eval split    : 0.001089999999997815
example values: 0.01345699999999539
find values   : 0.01615700000011344
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005379999999917118

Building tree 35 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07610199999999878
statistics    : 0.0001260000000016248
test value    : 0.053499000000002184
eval split    : 0.0011309999999653542
example values: 0.013652000000078601
find values   : 0.01633999999980773
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005920000000045889

Building tree 35 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08239400000000074
statistics    : 0.000167999999995061
test value    : 0.0597410000000167
eval split    : 0.0011280000000368773
example values: 0.019473000000061802
find values   : 0.016502999999943313
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005780000000044083

Building tree 36 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07637400000000127
statistics    : 0.0001279999999965753
test value    : 0.0536819999999949
eval split    : 0.0011030000000076257
example values: 0.01366899999995752
find values   : 0.01624000000002468
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000534999999999286

Building tree 36 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07719999999999771
statistics    : 0.00013799999999974943
test value    : 0.053770999999962044
eval split    : 0.0011270000000251912
example values: 0.01374699999994533
find values   : 0.01642599999988903
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005709999999936599

Building tree 36 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08084200000000408
statistics    : 0.00012699999999910005
test value    : 0.05584900000002335
eval split    : 0.0011909999999062393
example values: 0.014420999999842365
find values   : 0.016882000000101982
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006000000000057071

Building tree 36 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07837599999999867
statistics    : 0.00012699999999910005
test value    : 0.054514000000018825
eval split    : 0.0012019999999992592
example values: 0.014069999999783533
find values   : 0.01644200000013285
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006229999999973757

Building tree 36 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0800570000000036
statistics    : 0.00013200000000068712
test value    : 0.056338000000032196
eval split    : 0.001182000000028438
example values: 0.014324000000364379
find values   : 0.01698299999981856
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005990000000082318

Building tree 37 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07599799999999846
statistics    : 5.199999999661031e-05
test value    : 0.05363699999999483
eval split    : 0.0010650000000111959
example values: 0.013563999999909981
find values   : 0.016318000000048016
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000514000000002568

Building tree 37 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07649599999999879
statistics    : 0.000137999999992644
test value    : 0.05329199999999901
eval split    : 0.0011060000000711057
example values: 0.013442999999988103
find values   : 0.016249000000051694
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005690000000058149

Building tree 37 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07784600000000097
statistics    : 0.00013500000000021828
test value    : 0.05423199999999184
eval split    : 0.0011290000000130362
example values: 0.013741000000102588
find values   : 0.01646000000006609
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005560000000031096

Building tree 37 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0769730000000024
statistics    : 0.00015700000000151704
test value    : 0.05359700000004608
eval split    : 0.001097999999963406
example values: 0.013601000000129204
find values   : 0.016154999999820063
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000565000000001703

Building tree 37 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08281300000000158
statistics    : 0.0001260000000016248
test value    : 0.0599780000000365
eval split    : 0.0011220000000022878
example values: 0.0136910000000654
find values   : 0.02251300000004619
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000575999999995247

Building tree 38 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07661999999999836
statistics    : 0.0001299999999986312
test value    : 0.05363400000000951
eval split    : 0.0011220000000236041
example values: 0.013716999999985546
find values   : 0.01630000000000109
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005739999999931911

Building tree 38 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07648900000000225
statistics    : 0.0001319999999935817
test value    : 0.053527999999978704
eval split    : 0.0011209999999834963
example values: 0.013737000000134003
find values   : 0.01610399999999146
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005859999999984211

Building tree 38 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08417800000000142
statistics    : 0.0001239999999995689
test value    : 0.05984300000000786
eval split    : 0.0012429999999525876
example values: 0.01530000000014553
find values   : 0.018122000000154515
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006510000000048421

Building tree 38 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07607800000000253
statistics    : 0.00012800000000368073
test value    : 0.053243999999963876
eval split    : 0.0011659999999906745
example values: 0.013616999999747748
find values   : 0.01621399999989137
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006050000000001887

Building tree 38 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07650100000000037
statistics    : 0.00012499999999704414
test value    : 0.05355499999996738
eval split    : 0.0010960000000181935
example values: 0.013571000000048627
find values   : 0.016224999999849388
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005669999999966535

Building tree 39 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07531500000000335
statistics    : 0.00012100000000714317
test value    : 0.05300600000000344
eval split    : 0.0010580000000288692
example values: 0.013374000000084152
find values   : 0.016101000000162458
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005239999999986367

Building tree 39 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07509500000000457
statistics    : 0.00011999999999545707
test value    : 0.05304099999999323
eval split    : 0.0010259999999888691
example values: 0.013548999999770217
find values   : 0.016093000000026336
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004969999999957508

Building tree 39 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08202599999999904
statistics    : 0.0001239999999995689
test value    : 0.053259000000004164
eval split    : 0.0011250000000444516
example values: 0.013445999999859737
find values   : 0.01612199999996733
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005750000000048772

Building tree 39 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07674599999999998
statistics    : 0.00012700000000620548
test value    : 0.05351599999995216
eval split    : 0.0010969999999588254
example values: 0.013659000000082244
find values   : 0.0161730000001441
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005499999999969418

Building tree 39 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07680500000000023
statistics    : 0.000125000000011255
test value    : 0.05372799999997113
eval split    : 0.0011030000000431528
example values: 0.013645999999944536
find values   : 0.01619300000002255
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005439999999978795

Building tree 40 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08218399999999804
statistics    : 0.00012300000000209366
test value    : 0.05383700000002989
eval split    : 0.0010999999999938836
example values: 0.013616000000084227
find values   : 0.016362000000000876
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005409999999983484

Building tree 40 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07528099999999682
statistics    : 0.00011899999999798183
test value    : 0.053047999999982665
eval split    : 0.0010639999999639826
example values: 0.013386000000082277
find values   : 0.01602100000008022
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005280000000027485

Building tree 40 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07492600000000493
statistics    : 5.10000000062405e-05
test value    : 0.053076999999987606
eval split    : 0.001006000000018048
example values: 0.01344099999995052
find values   : 0.01613699999994367
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004899999999992133

Building tree 40 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07498999999999967
statistics    : 0.00012499999999704414
test value    : 0.05304999999994919
eval split    : 0.001077000000002215
example values: 0.013464999999847294
find values   : 0.01612100000000538
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005170000000020991

Building tree 40 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0755320000000026
statistics    : 0.0001409999999992806
test value    : 0.05350100000000424
eval split    : 0.00105100000000391
example values: 0.013592999999900712
find values   : 0.016377000000133535
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005179999999995744

Building tree 41 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07497399999999743
statistics    : 0.00013100000000321188
test value    : 0.05295900000002973
eval split    : 0.0010480000000043788
example values: 0.013465999999930034
find values   : 0.016062000000147236
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005049999999968691

Building tree 41 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07519999999999527
statistics    : 0.00011800000000050659
test value    : 0.053068000000003224
eval split    : 0.001185999999968601
example values: 0.013537999999932993
find values   : 0.015989000000054432
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006680000000045538

Building tree 41 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0787339999999972
statistics    : 0.00013299999999816237
test value    : 0.0545190000000062
eval split    : 0.0011830000000756513
example values: 0.013970999999763478
find values   : 0.01662700000016315
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006139999999987822

Building tree 41 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07675600000000316
statistics    : 0.00012699999999910005
test value    : 0.053399000000013075
eval split    : 0.0011330000000029372
example values: 0.013566999999994778
find values   : 0.01623700000000383
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005740000000002965

Building tree 41 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07627500000000254
statistics    : 0.00014600000000086766
test value    : 0.053440999999970984
eval split    : 0.0011160000000245418
example values: 0.013459999999874128
find values   : 0.016327000000025294
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000565000000001703

Building tree 42 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07674800000000204
statistics    : 0.00013400000000274304
test value    : 0.053681999999973584
eval split    : 0.0011389999999309453
example values: 0.013591999999910342
find values   : 0.01625700000008834
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006100000000017758

Building tree 42 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07688599999999468
statistics    : 0.0001239999999995689
test value    : 0.05371799999999638
eval split    : 0.0010819999999611696
example values: 0.013526000000197769
find values   : 0.016449999999863962
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005369999999871311

Building tree 42 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0837450000000004
statistics    : 0.0001330000000052678
test value    : 0.06017899999998377
eval split    : 0.001142999999999006
example values: 0.013871999999793161
find values   : 0.01647699999990948
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005979999999894403

Building tree 42 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07694999999999652
statistics    : 0.00013400000000274304
test value    : 0.05371199999999732
eval split    : 0.001184000000030494
example values: 0.013544000000010215
find values   : 0.01649999999991536
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006200000000049499

Building tree 42 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07894499999999738
statistics    : 0.00012900000000115597
test value    : 0.05448100000003819
eval split    : 0.0011760000000364812
example values: 0.013997999999894262
find values   : 0.01658600000002508
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006159999999937327

Building tree 43 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07990000000000208
statistics    : 0.00013599999999769352
test value    : 0.05501200000002626
eval split    : 0.001187999999970657
example values: 0.0140430000002425
find values   : 0.016938999999844384
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005730000000028213

Building tree 43 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0785499999999999
statistics    : 0.0001310000000103173
test value    : 0.0542859999999763
eval split    : 0.0011940000000052464
example values: 0.013824999999947352
find values   : 0.016533000000109155
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006009999999960769

Building tree 43 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07704799999999778
statistics    : 0.00014899999999329339
test value    : 0.053735000000052935
eval split    : 0.0012050000000130012
example values: 0.013807000000028324
find values   : 0.016363000000005457
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006459999999961497

Building tree 43 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07648999999999972
statistics    : 0.00014400000000591717
test value    : 0.05339599999997802
eval split    : 0.001134999999969466
example values: 0.01346099999981476
find values   : 0.016230000000099665
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006050000000001887

Building tree 43 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07697100000000034
statistics    : 0.0001299999999986312
test value    : 0.053473000000010984
eval split    : 0.0011870000000229197
example values: 0.013632999999813933
find values   : 0.01623400000008246
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006380000000021369

Building tree 44 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07742099999999397
statistics    : 0.0001279999999965753
test value    : 0.05396400000001478
eval split    : 0.0010939999999806105
example values: 0.01380600000004506
find values   : 0.016197000000175876
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005379999999988172

Building tree 44 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07616600000000062
statistics    : 0.00012699999999910005
test value    : 0.05326399999997733
eval split    : 0.0010809999999779052
example values: 0.01343599999979972
find values   : 0.016156999999950017
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000056343

Building tree 44 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08210499999999854
statistics    : 0.00012500000000414957
test value    : 0.059322999999999126
eval split    : 0.0011489999999554357
example values: 0.013726000000012561
find values   : 0.01625700000007413
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005979999999965457

Building tree 44 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07606099999999572
statistics    : 0.0001239999999995689
test value    : 0.05310600000000676
eval split    : 0.0011299999999749843
example values: 0.01366900000009963
find values   : 0.016145999999999106
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005760000000023524

Building tree 44 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07604700000000264
statistics    : 0.0001260000000016248
test value    : 0.05345100000005232
eval split    : 0.0011060000000000514
example values: 0.01362499999989808
find values   : 0.016201000000137356
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005640000000042278

Building tree 45 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07612000000000307
statistics    : 0.00012699999999199463
test value    : 0.053475000000005934
eval split    : 0.0011119999999991137
example values: 0.013573999999806574
find values   : 0.016309000000156004
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005670000000037589

Building tree 45 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07775800000000288
statistics    : 0.00013299999999816237
test value    : 0.05442199999999531
eval split    : 0.0011209999999834963
example values: 0.01372700000005267
find values   : 0.016616000000112763
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005620000000021719

Building tree 45 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07816199999999895
statistics    : 0.0001330000000052678
test value    : 0.054164999999983365
eval split    : 0.0012030000000038399
example values: 0.013632000000043831
find values   : 0.016536999999864577
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006239999999877455

Building tree 45 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07630899999999485
statistics    : 0.0001409999999992806
test value    : 0.053702000000036776
eval split    : 0.0011299999999891952
example values: 0.013598000000214938
find values   : 0.016163999999974976
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00059500000000412

Building tree 45 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0763160000000056
statistics    : 0.0001260000000016248
test value    : 0.05332199999998721
eval split    : 0.0010980000000060386
example values: 0.013449999999849638
find values   : 0.016176999999984787
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005390000000105033

Building tree 46 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07647699999999702
statistics    : 0.00013600000000479895
test value    : 0.053580000000003736
eval split    : 0.0010739999999600514
example values: 0.013536000000200943
find values   : 0.016352000000097178
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005469999999974107

Building tree 46 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0798640000000006
statistics    : 0.00013200000000068712
test value    : 0.05482000000002074
eval split    : 0.0011859999999970228
example values: 0.014097000000084847
find values   : 0.01656699999982436
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005790000000018836

Building tree 46 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08870199999999784
statistics    : 0.00013400000000274304
test value    : 0.05584000000001055
eval split    : 0.0011809999999741194
example values: 0.014295000000068114
find values   : 0.01709899999995912
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005900000000096384

Building tree 46 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07788700000000404
statistics    : 0.0001390000000043301
test value    : 0.05430499999994254
eval split    : 0.0011500000000168598
example values: 0.013805000000004952
find values   : 0.016697999999934154
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005980000000036512

Building tree 46 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07599799999999846
statistics    : 0.0001279999999965753
test value    : 0.05332700000003143
eval split    : 0.001066000000022882
example values: 0.013590999999934184
find values   : 0.016080000000016526
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005430000000004043

Building tree 47 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07593299999999914
statistics    : 0.0001260000000016248
test value    : 0.05330399999998292
eval split    : 0.0011340000000714667
example values: 0.01350199999988888
find values   : 0.016162999999878025
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005790000000018836

Building tree 47 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.076272000000003
statistics    : 0.00012599999999451938
test value    : 0.05357399999999757
eval split    : 0.0011920000000031905
example values: 0.013636000000147419
find values   : 0.016422999999896604
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006229999999973757

Building tree 47 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07535000000000025
statistics    : 0.00012299999999498823
test value    : 0.05300000000001859
eval split    : 0.0010260000000457126
example values: 0.01337300000006536
find values   : 0.016104000000026986
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005020000000044433

Building tree 47 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07481600000000554
statistics    : 0.00011900000000508726
test value    : 0.05275700000001393
eval split    : 0.00107999999998043
example values: 0.013446999999914055
find values   : 0.01603500000005198
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005369999999942365

Building tree 47 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07486200000000309
statistics    : 0.00013000000001284207
test value    : 0.05290200000002443
eval split    : 0.0010429999999672646
example values: 0.013447000000006426
find values   : 0.016032000000059554
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005259999999864817

Building tree 48 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07519699999999574
statistics    : 0.00011800000000761202
test value    : 0.05293200000001974
eval split    : 0.0010460000000307446
example values: 0.013397000000054504
find values   : 0.016053000000056272
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005130000000050927

Building tree 48 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07487300000000374
statistics    : 0.00011800000000050659
test value    : 0.052860999999971625
eval split    : 0.001070999999974731
example values: 0.013358999999958598
find values   : 0.015941999999967038
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000506999999998925

Building tree 48 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07524499999999534
statistics    : 0.00011799999999340116
test value    : 0.053266999999969755
eval split    : 0.0010509999999968045
example values: 0.013536999999843147
find values   : 0.016266999999920984
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005110000000101422

Building tree 48 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07519200000000126
statistics    : 0.00011599999999845068
test value    : 0.05289900000001779
eval split    : 0.0010470000000282198
example values: 0.01343700000005299
find values   : 0.016082999999937897
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005249999999961119

Building tree 48 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0752600000000001
statistics    : 0.00011700000000303135
test value    : 0.0530329999999708
eval split    : 0.001061999999983243
example values: 0.013549999999860063
find values   : 0.01599899999987997
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005319999999997549

Building tree 49 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08094899999999683
statistics    : 0.00011700000000303135
test value    : 0.05873199999999912
eval split    : 0.001059000000019239
example values: 0.013550999999850433
find values   : 0.016235000000051514
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005360000000038667

Building tree 49 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07539500000000032
statistics    : 0.00011800000000050659
test value    : 0.053298000000019385
eval split    : 0.001057000000031394
example values: 0.013563999999860243
find values   : 0.016267999999904248
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005329999999972301

Building tree 49 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07701300000000089
statistics    : 0.00012499999999704414
test value    : 0.05359199999995923
eval split    : 0.0011330000000455698
example values: 0.013646999999977538
find values   : 0.01626499999980524
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005680000000012342

Building tree 49 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07666000000000395
statistics    : 0.00015499999999946112
test value    : 0.05371299999996637
eval split    : 0.0011350000000263094
example values: 0.013764000000115573
find values   : 0.016219000000020856
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005740000000002965

Building tree 49 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07512499999999989
statistics    : 0.00011899999999798183
test value    : 0.05315799999995363
eval split    : 0.001017000000047119
example values: 0.013574000000019737
find values   : 0.015991999999883433
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005009999999998627

Building tree 50 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07535699999999679
statistics    : 0.00013099999999610645
test value    : 0.05313699999994981
eval split    : 0.0010640000000066152
example values: 0.013601999999991676
find values   : 0.016113999999902262
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005430000000004043

Building tree 50 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07626199999999983
statistics    : 0.00012999999999152578
test value    : 0.053593999999989705
eval split    : 0.0010720000000290497
example values: 0.013621999999983814
find values   : 0.01617099999991467
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005310000000022796

Building tree 50 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07650100000000037
statistics    : 0.00013400000000984846
test value    : 0.05345500000000669
eval split    : 0.0010540000000247574
example values: 0.013617999999894437
find values   : 0.01622900000005245
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005290000000073292

Building tree 50 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.0766050000000007
statistics    : 5.199999999661031e-05
test value    : 0.05353800000003872
eval split    : 0.0010770000000093205
example values: 0.013632999999956041
find values   : 0.01624699999998569
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005020000000044433

Building tree 50 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07777399999999801
statistics    : 0.00015599999999693637
test value    : 0.05410600000000443
eval split    : 0.0011429999999563734
example values: 0.013748000000006755
find values   : 0.016323000000078025
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005920000000045889

  Building node on depth 1
induce        : 0.0002159999999946649
statistics    : 8.19999999990273e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00018099999999776628
statistics    : 7.80000000020209e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00017199999999917281
statistics    : 7.899999999949614e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.00016699999999758575
statistics    : 7.599999999996498e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

  Building node on depth 1
induce        : 0.0001739999999941233
statistics    : 7.699999999744023e-05
test value    : 0.0
eval split    : 0.0
example values: 0.0
find values   : 0.0
nominal tests : 0
nom. t. time  : 0
numeric tests : 0
num t. time   : 0

Building tree 1 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07771200000000533
statistics    : 0.00013100000000321188
test value    : 0.053768999999981304
eval split    : 0.0011920000000245068
example values: 0.01371999999993534
find values   : 0.016299000000032038
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006199999999978445

Building tree 1 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07724799999999732
statistics    : 0.0001359999999905881
test value    : 0.0537869999999927
eval split    : 0.0011190000000027567
example values: 0.013712999999967224
find values   : 0.01637699999999853
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999888987

Building tree 1 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07616900000000015
statistics    : 0.00013699999999516876
test value    : 0.053554000000012536
eval split    : 0.0011229999999926576
example values: 0.01368899999997808
find values   : 0.016133000000053244
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005750000000048772

Building tree 1 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07633299999999821
statistics    : 0.0001260000000016248
test value    : 0.05345999999999407
eval split    : 0.0010840000000627015
example values: 0.013545999999962532
find values   : 0.016256000000048232
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005569999999934794

Building tree 1 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07743199999999462
statistics    : 0.00014099999999217516
test value    : 0.05407499999999743
eval split    : 0.0010710000000031528
example values: 0.013637999999836836
find values   : 0.01645900000002598
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005319999999926495

Building tree 2 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07808199999999488
statistics    : 0.0001239999999995689
test value    : 0.05440099999997017
eval split    : 0.0011630000000053542
example values: 0.013945000000020968
find values   : 0.0164670000000271
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005820000000014147

Building tree 2 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07933799999999991
statistics    : 0.00014900000000750424
test value    : 0.05460800000001598
eval split    : 0.0011790000000218015
example values: 0.013944999999871754
find values   : 0.016531999999962466
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005900000000025329

Building tree 2 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07949699999999638
statistics    : 0.00013500000000021828
test value    : 0.05478700000000458
eval split    : 0.0012209999999797105
example values: 0.014013999999967552
find values   : 0.016503000000049894
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005980000000036512

Building tree 2 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07677100000000081
statistics    : 0.0001490000000003988
test value    : 0.05368699999999649
eval split    : 0.0010839999999632255
example values: 0.013625000000040188
find values   : 0.01634000000005642
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005480000000019913

Building tree 2 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07674199999999587
statistics    : 0.00012800000001078615
test value    : 0.05365899999997481
eval split    : 0.001148999999976752
example values: 0.013663000000178727
find values   : 0.016256999999939126
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005880000000075825

Building tree 3 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08772900000000305
statistics    : 0.00013200000000068712
test value    : 0.054804000000004294
eval split    : 0.001204999999991685
example values: 0.013871000000094114
find values   : 0.01688999999986862
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006009999999960769

Building tree 3 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07593200000000166
statistics    : 0.00014300000000844193
test value    : 0.05317799999999551
eval split    : 0.00112400000002566
example values: 0.013315999999925054
find values   : 0.01593499999977155
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005910000000071136

Building tree 3 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07594300000000231
statistics    : 0.00012699999999910005
test value    : 0.053294999999970116
eval split    : 0.001112999999996589
example values: 0.013624000000191927
find values   : 0.01622999999985808
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005540000000081591

Building tree 3 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07586400000000282
statistics    : 0.00012399999999246347
test value    : 0.0533139999999932
eval split    : 0.001294000000022777
example values: 0.013564999999985616
find values   : 0.016220000000025436
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007250000000027512

Building tree 3 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07623099999999994
statistics    : 0.00013400000000274304
test value    : 0.0533309999999787
eval split    : 0.001057000000017183
example values: 0.0135770000000619
find values   : 0.016184000000109222
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005340000000018108

Building tree 4 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08262700000000223
statistics    : 0.00015100000000245473
test value    : 0.05349100000003659
eval split    : 0.001120000000000232
example values: 0.013543999999903633
find values   : 0.016255999999891912
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005749999999977717

Building tree 4 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07641100000000023
statistics    : 0.00013800000000685486
test value    : 0.05349100000002238
eval split    : 0.001094999999999402
example values: 0.013625000000097032
find values   : 0.01618699999995954
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005489999999994666

Building tree 4 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07808399999999693
statistics    : 0.00013200000000068712
test value    : 0.05417099999996111
eval split    : 0.0011560000000088166
example values: 0.013761999999971408
find values   : 0.016301999999846828
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005979999999965457

Building tree 4 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07623900000000106
statistics    : 0.0001279999999965753
test value    : 0.05344800000000305
eval split    : 0.0011080000000021073
example values: 0.013577000000012163
find values   : 0.016147000000032108
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005549999999985289

Building tree 4 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07515599999999978
statistics    : 0.00012800000000368073
test value    : 0.053041000000021654
eval split    : 0.001048999999952116
example values: 0.01331800000009764
find values   : 0.016041000000200256
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005260000000006926

Building tree 5 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07527999999999935
statistics    : 0.00012899999999405054
test value    : 0.0531169999999932
eval split    : 0.0010399999999819443
example values: 0.01351200000014785
find values   : 0.01614099999986962
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005209999999920001

Building tree 5 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07504699999999787
statistics    : 0.00012499999999704414
test value    : 0.053089999999968995
eval split    : 0.0010600000000664522
example values: 0.013507000000139158
find values   : 0.01607299999999867
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005209999999991055

Building tree 5 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07502099999999956
statistics    : 0.00011800000000050659
test value    : 0.0532609999999778
eval split    : 0.00104100000007179
example values: 0.01350699999991889
find values   : 0.016261999999841237
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005019999999973379

Building tree 5 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07732100000000486
statistics    : 0.0001260000000016248
test value    : 0.05379799999999335
eval split    : 0.001094999999999402
example values: 0.013615999999885275
find values   : 0.01641299999995738
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005540000000010536

Building tree 5 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07670899999999392
statistics    : 0.00013799999999974943
test value    : 0.05365900000000323
eval split    : 0.0011520000000331265
example values: 0.013602000000055625
find values   : 0.016348999999820535
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000603999999995608

Building tree 6 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08065300000000519
statistics    : 0.00013200000000779255
test value    : 0.05872600000002137
eval split    : 0.0010139999999623228
example values: 0.013471999999843831
find values   : 0.016041999999963252
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004949999999936949

Building tree 6 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07561900000000321
statistics    : 0.00014400000000591717
test value    : 0.05320299999997502
eval split    : 0.001064000000020826
example values: 0.013551999999933173
find values   : 0.016242000000062262
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005380000000059226

Building tree 6 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07530100000000317
statistics    : 0.00011799999999340116
test value    : 0.05308099999998461
eval split    : 0.0010299999999858755
example values: 0.013453999999889277
find values   : 0.016028000000204656
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005089999999938755

Building tree 6 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07503000000000526
statistics    : 0.00011700000000303135
test value    : 0.05309800000000564
eval split    : 0.0012290000000305668
example values: 0.013483999999998275
find values   : 0.016156999999950017
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006920000000008031

Building tree 6 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0752249999999961
statistics    : 0.00012700000000620548
test value    : 0.0531469999999743
eval split    : 0.0010479999999830625
example values: 0.0135349999999832
find values   : 0.01611799999986374
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005239999999986367

Building tree 7 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0762020000000021
statistics    : 0.0001239999999995689
test value    : 0.05346499999997434
eval split    : 0.001140000000035002
example values: 0.013507000000132052
find values   : 0.016266000000022984
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006020000000006576

Building tree 7 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07575899999999791
statistics    : 0.00012499999999704414
test value    : 0.05299699999999774
eval split    : 0.0011459999999914317
example values: 0.01343600000004841
find values   : 0.016066999999807763
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000598999999994021

Building tree 7 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07589000000000112
statistics    : 0.00014000000000180535
test value    : 0.05343399999998155
eval split    : 0.0011039999999979955
example values: 0.013570000000015625
find values   : 0.016224000000114813
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005439999999978795

Building tree 7 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07679100000000005
statistics    : 0.0001299999999986312
test value    : 0.05336800000000608
eval split    : 0.0010600000000096088
example values: 0.013455000000085704
find values   : 0.016407999999948686
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005240000000057421

Building tree 7 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0763600000000011
statistics    : 0.00012899999999405054
test value    : 0.053412999999999045
eval split    : 0.0011039999999837846
example values: 0.01359300000018493
find values   : 0.016014000000069473
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005519999999989977

Building tree 8 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07685499999999479
statistics    : 0.00013400000000274304
test value    : 0.05361399999996763
eval split    : 0.001145000000036589
example values: 0.013478999999890107
find values   : 0.016395000000123616
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006149999999962574

Building tree 8 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07808299999999946
statistics    : 0.0001420000000109667
test value    : 0.054414000000015506
eval split    : 0.0011080000000021073
example values: 0.013766999999894836
find values   : 0.016523999999982664
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000549000000006572

Building tree 8 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09340100000000007
statistics    : 0.0001540000000090913
test value    : 0.06713500000005013
eval split    : 0.0013140000000220198
example values: 0.01522399999998214
find values   : 0.01785700000022672
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006359999999929755

Building tree 8 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07777600000000007
statistics    : 0.00015700000000862246
test value    : 0.05398299999999523
eval split    : 0.0011480000000076984
example values: 0.013644999999996799
find values   : 0.016286000000100387
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005719999999982406

Building tree 8 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08844799999999964
statistics    : 0.00017200000000627824
test value    : 0.05566400000002858
eval split    : 0.0012109999999978527
example values: 0.014185000000118464
find values   : 0.01712000000009084
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006020000000006576

Building tree 9 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07832100000000253
statistics    : 0.0001469999999983429
test value    : 0.05414599999999581
eval split    : 0.0011210000000048126
example values: 0.013720999999982553
find values   : 0.016460999999999615
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000575999999995247

Building tree 9 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07722400000000107
statistics    : 0.00015400000000198588
test value    : 0.05362299999997333
eval split    : 0.0011849999999640204
example values: 0.013611000000196327
find values   : 0.016207000000207472
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006329999999934444

Building tree 9 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07999000000000223
statistics    : 0.00012499999999704414
test value    : 0.055387000000017395
eval split    : 0.001137000000007049
example values: 0.014138999999794066
find values   : 0.016801000000199906
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005590000000026407

Building tree 9 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0769159999999971
statistics    : 0.00013799999999974943
test value    : 0.05378899999997344
eval split    : 0.0011249999999805027
example values: 0.013657999999921344
find values   : 0.016374999999783313
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005659999999991783

Building tree 9 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07666300000000348
statistics    : 0.00012600000000873024
test value    : 0.05350900000001957
eval split    : 0.001106000000028473
example values: 0.013590000000107239
find values   : 0.016279999999973427
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005710000000007653

Building tree 10 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07608500000000618
statistics    : 0.00014899999999329339
test value    : 0.05338799999994137
eval split    : 0.0011269999999683478
example values: 0.013729999999931408
find values   : 0.016252999999991857
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005889999999979523

Building tree 10 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07612100000000055
statistics    : 0.00012899999999405054
test value    : 0.05318900000003168
eval split    : 0.0011069999999975266
example values: 0.01360199999995615
find values   : 0.016180000000069583
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005580000000051655

Building tree 10 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08239400000000074
statistics    : 0.0001600000000010482
test value    : 0.05382900000000035
eval split    : 0.0010859999999794923
example values: 0.013655000000106554
find values   : 0.016346999999882428
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005570000000005848

Building tree 10 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07591800000000148
statistics    : 0.00014399999999881175
test value    : 0.05331099999999367
eval split    : 0.001132000000005462
example values: 0.013447000000049059
find values   : 0.016251000000075067
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005719999999911352

Building tree 10 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0782039999999995
statistics    : 0.00012399999999246347
test value    : 0.05420899999997886
eval split    : 0.0011900000000366617
example values: 0.013716000000172812
find values   : 0.016606000000017218
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006070000000022446

Building tree 11 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07651500000000055
statistics    : 0.00016599999999300508
test value    : 0.053675000000026785
eval split    : 0.0011099999999899524
example values: 0.01363799999990789
find values   : 0.01629199999975839
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005409999999983484

Building tree 11 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07644900000000376
statistics    : 0.00014199999999675583
test value    : 0.053586000000009903
eval split    : 0.0011150000000199611
example values: 0.013526999999925238
find values   : 0.016450000000013176
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005790000000018836

Building tree 11 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0764429999999976
statistics    : 0.00012500000000414957
test value    : 0.05357899999997073
eval split    : 0.0010940000000019268
example values: 0.01370200000005184
find values   : 0.016204999999956726
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005589999999955353

Building tree 11 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07616600000000062
statistics    : 0.0001529999999974052
test value    : 0.053414000000003625
eval split    : 0.0010820000000109076
example values: 0.013599000000056094
find values   : 0.01622800000003366
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005500000000111527

Building tree 11 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07634500000000344
statistics    : 0.00012700000000620548
test value    : 0.05366099999999818
eval split    : 0.0011060000000071568
example values: 0.013668000000066627
find values   : 0.01633299999998883
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00055799999999806

Building tree 12 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07687399999999656
statistics    : 0.0001560000000040418
test value    : 0.05362400000000633
eval split    : 0.0010939999999806105
example values: 0.0136919999999634
find values   : 0.01617600000012942
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000061032

Building tree 12 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07874599999999532
statistics    : 0.0001319999999935817
test value    : 0.0543570000000102
eval split    : 0.0011609999999890874
example values: 0.013924000000187675
find values   : 0.016417000000110704
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005509999999944171

Building tree 12 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08500000000000085
statistics    : 0.00013600000001190438
test value    : 0.06106399999998757
eval split    : 0.0011710000000064724
example values: 0.013946999999973286
find values   : 0.023203999999850566
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005969999999990705

Building tree 12 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07666000000000395
statistics    : 0.00012800000000368073
test value    : 0.05357000000000056
eval split    : 0.0010889999999790234
example values: 0.013624000000163505
find values   : 0.016205999999932885
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005609999999975912

Building tree 12 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07647599999999954
statistics    : 0.00012500000000414957
test value    : 0.053646999999990896
eval split    : 0.001082999999994172
example values: 0.013758999999922139
find values   : 0.01638099999996001
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000537000000001342

Building tree 13 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07632299999999503
statistics    : 0.00013200000000068712
test value    : 0.05336699999998018
eval split    : 0.0010630000000304562
example values: 0.013578999999928953
find values   : 0.016109000000071205
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005359999999967613

Building tree 13 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0761320000000012
statistics    : 0.00012499999998993871
test value    : 0.05353100000002087
eval split    : 0.0010630000000233508
example values: 0.01363900000006879
find values   : 0.016179999999991423
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005399999999937677

Building tree 13 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07784000000000191
statistics    : 0.00012699999999910005
test value    : 0.05428699999999509
eval split    : 0.0012959999999466731
example values: 0.013693000000102984
find values   : 0.016495999999989408
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007409999999907768

Building tree 13 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07573700000000372
statistics    : 0.00011700000000303135
test value    : 0.053145000000000664
eval split    : 0.0010200000000182285
example values: 0.013574000000041053
find values   : 0.01609299999992686
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004969999999957508

Building tree 13 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07541499999999957
statistics    : 0.00012100000000003774
test value    : 0.05329100000000864
eval split    : 0.0010360000000275704
example values: 0.013547999999943272
find values   : 0.016312999999989586
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000514000000002568

Building tree 14 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07521100000000303
statistics    : 0.00013599999999769352
test value    : 0.05293999999997823
eval split    : 0.0010200000000182285
example values: 0.01336599999993382
find values   : 0.016103000000271095
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00048500000000473165

Building tree 14 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07524300000000039
statistics    : 0.00011900000000508726
test value    : 0.05306300000000874
eval split    : 0.0010419999999911056
example values: 0.013585000000027492
find values   : 0.015980999999896994
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005219999999965808

Building tree 14 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0753999999999948
statistics    : 0.00011800000000050659
test value    : 0.05314000000001329
eval split    : 0.001067000000034568
example values: 0.013520999999897754
find values   : 0.016100999999778765
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005379999999988172

Building tree 14 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07527000000000328
statistics    : 0.0001200000000025625
test value    : 0.052914000000022554
eval split    : 0.0010870000000267055
example values: 0.013450000000077011
find values   : 0.015965000000058183
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005439999999978795

Building tree 14 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07587600000000094
statistics    : 0.00013799999999974943
test value    : 0.05331899999998768
eval split    : 0.0011710000000135778
example values: 0.013454999999886752
find values   : 0.01621500000013043
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006209999999953197

Building tree 15 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07638699999999687
statistics    : 0.00013699999999516876
test value    : 0.05316299999998364
eval split    : 0.0010910000000166065
example values: 0.013587000000100602
find values   : 0.01613100000017198
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999888987

Building tree 15 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08101800000000026
statistics    : 0.00014000000000891077
test value    : 0.05313299999997412
eval split    : 0.001032000000080302
example values: 0.013496999999873083
find values   : 0.01601000000006536
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004989999999978068

Building tree 15 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07620000000000005
statistics    : 0.0001260000000016248
test value    : 0.0531830000000042
eval split    : 0.0011079999999594747
example values: 0.013391999999974757
find values   : 0.016070999999875824
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005509999999944171

Building tree 15 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07596800000000314
statistics    : 5.3999999998666226e-05
test value    : 0.053368000000027394
eval split    : 0.0010820000000038021
example values: 0.013509999999861577
find values   : 0.016149999999917952
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005090000000009809

Building tree 15 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07496499999999884
statistics    : 0.00012300000000209366
test value    : 0.05274900000001281
eval split    : 0.0010540000000389682
example values: 0.013439999999917518
find values   : 0.01592099999999874
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000489000000001738

Building tree 16 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07717799999999642
statistics    : 0.0001390000000043301
test value    : 0.05386299999998556
eval split    : 0.0011700000000161026
example values: 0.013860999999870671
find values   : 0.016465999999965675
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005729999999957158

Building tree 16 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07708999999999833
statistics    : 0.00012900000000115597
test value    : 0.05355799999999533
eval split    : 0.0011460000000056425
example values: 0.013615000000079647
find values   : 0.016165999999742553
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005840000000034706

Building tree 16 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07651800000000009
statistics    : 0.00012599999999451938
test value    : 0.05352099999999638
eval split    : 0.00113299999996741
example values: 0.013721000000060712
find values   : 0.01599300000006565
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000580999999996834

Building tree 16 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07618800000000192
statistics    : 0.0001260000000016248
test value    : 0.053392000000002326
eval split    : 0.001121000000061656
example values: 0.013522000000051548
find values   : 0.016367999999914673
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005889999999908468

Building tree 16 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0766530000000003
statistics    : 0.00013799999999974943
test value    : 0.0539150000000177
eval split    : 0.0011009999999345155
example values: 0.013490999999973496
find values   : 0.01658600000015298
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005519999999918923

Building tree 17 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08678199999999947
statistics    : 0.0001279999999965753
test value    : 0.05694199999998517
eval split    : 0.001285999999943499
example values: 0.014573000000062564
find values   : 0.017342999999748088
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006360000000000809

Building tree 17 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07707399999999609
statistics    : 0.00012699999999910005
test value    : 0.053708999999955154
eval split    : 0.0011259999999850834
example values: 0.013671999999750994
find values   : 0.01640699999995121
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005829999999917845

Building tree 17 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07885300000000228
statistics    : 0.0001299999999986312
test value    : 0.05450999999998629
eval split    : 0.0012630000000157793
example values: 0.013968999999953269
find values   : 0.016562999999933936
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006679999999974484

Building tree 17 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07759599999999978
statistics    : 0.0001490000000003988
test value    : 0.05380900000000821
eval split    : 0.0011539999999925499
example values: 0.01347699999996621
find values   : 0.01655700000012672
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006010000000031823

Building tree 17 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07642200000000088
statistics    : 0.00014400000000591717
test value    : 0.05330800000005809
eval split    : 0.0010870000000409163
example values: 0.013638999999997736
find values   : 0.016169999999959828
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005379999999917118

Building tree 18 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07719399999999865
statistics    : 0.0001639999999980546
test value    : 0.05371400000004911
eval split    : 0.0011219999999809716
example values: 0.013511000000086426
find values   : 0.016241000000086103
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005839999999963652

Building tree 18 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07693499999999887
statistics    : 0.00012699999999910005
test value    : 0.05348100000001921
eval split    : 0.0011139999999869588
example values: 0.013515000000033695
find values   : 0.016264999999940244
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005749999999977717

Building tree 18 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0817959999999971
statistics    : 0.00016300000000768478
test value    : 0.05798699999998291
eval split    : 0.0011780000000101154
example values: 0.014774999999779936
find values   : 0.017747999999976116
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006020000000006576

Building tree 18 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0771349999999984
statistics    : 0.0001260000000016248
test value    : 0.0536430000000081
eval split    : 0.0011259999999850834
example values: 0.013677999999949009
find values   : 0.016312999999925637
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005660000000062837

Building tree 18 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07887300000000153
statistics    : 0.00013999999999469992
test value    : 0.0541329999999931
eval split    : 0.0011410000000111609
example values: 0.013557000000005814
find values   : 0.016495999999946775
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005830000000059954

Building tree 19 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09027600000000291
statistics    : 0.00012900000000115597
test value    : 0.06371900000002029
eval split    : 0.0012390000000124246
example values: 0.01485200000000475
find values   : 0.017703000000047098
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005589999999955353

Building tree 19 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07652399999999915
statistics    : 0.00012700000000620548
test value    : 0.05343700000003082
eval split    : 0.001138999999959367
example values: 0.013617000000017754
find values   : 0.016064000000021394
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005779999999901975

Building tree 19 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07613299999999867
statistics    : 0.0001339999999956376
test value    : 0.053085000000017146
eval split    : 0.0011249999999947136
example values: 0.013494000000193296
find values   : 0.01605200000002327
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005929999999949587

Building tree 19 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07607399999999842
statistics    : 0.00014200000000386126
test value    : 0.053387000000007845
eval split    : 0.0010959999999471393
example values: 0.013491000000051656
find values   : 0.016130000000067923
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005630000000067525

Building tree 19 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07665899999999937
statistics    : 0.00012699999999199463
test value    : 0.05390499999999321
eval split    : 0.0010829999999870665
example values: 0.013580000000011694
find values   : 0.016522999999978083
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000061032

Building tree 20 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07773000000000252
statistics    : 0.00013599999999769352
test value    : 0.05396200000002693
eval split    : 0.0012410000000286914
example values: 0.013728000000199359
find values   : 0.016382999999819958
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006540000000043733

Building tree 20 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07753300000000252
statistics    : 0.00012599999999451938
test value    : 0.05359400000001102
eval split    : 0.001102000000003045
example values: 0.013720000000112975
find values   : 0.016186000000004697
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005430000000004043

Building tree 20 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07629899999999878
statistics    : 0.0001299999999986312
test value    : 0.053588000000019065
eval split    : 0.0011209999999977072
example values: 0.013601000000065255
find values   : 0.016396000000042932
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005660000000062837

Building tree 20 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07623800000000358
statistics    : 5.199999999661031e-05
test value    : 0.05336400000002328
eval split    : 0.001051999999965858
example values: 0.013494000000306983
find values   : 0.016162999999927763
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005019999999973379

Building tree 20 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07601299999999611
statistics    : 0.00015499999999946112
test value    : 0.053264999999974805
eval split    : 0.0010510000000607533
example values: 0.013612000000044588
find values   : 0.016071999999844877
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005149999999929378

Building tree 21 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07648099999999403
statistics    : 0.00012400000000667433
test value    : 0.053467000000004816
eval split    : 0.0010700000000269938
example values: 0.013495000000069979
find values   : 0.016310999999888054
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005400000000008731

Building tree 21 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07629599999999925
statistics    : 0.0001639999999980546
test value    : 0.05335599999999374
eval split    : 0.0011140000000011696
example values: 0.013517999999919539
find values   : 0.016126999999997338
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005779999999973029

Building tree 21 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08247399999999772
statistics    : 0.00012800000000368073
test value    : 0.059514999999962015
eval split    : 0.0010800000000585896
example values: 0.013603999999972416
find values   : 0.016275999999940893
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000549000000006572

Building tree 21 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08521999999999963
statistics    : 0.00014399999999881175
test value    : 0.053981000000007384
eval split    : 0.0011350000000049931
example values: 0.013640000000009422
find values   : 0.016428999999988037
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005749999999977717

Building tree 21 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07604300000000563
statistics    : 0.0001260000000016248
test value    : 0.05323800000000034
eval split    : 0.0011379999999903134
example values: 0.01343600000023315
find values   : 0.016099999999944714
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005830000000059954

Building tree 22 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07905700000000593
statistics    : 0.0001350000000073237
test value    : 0.054123000000011245
eval split    : 0.001188999999996554
example values: 0.013878999999995756
find values   : 0.016479999999951644
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005649999999945976

Building tree 22 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07688899999999421
statistics    : 0.0001290000000082614
test value    : 0.05380200000000457
eval split    : 0.0011250000000231353
example values: 0.013470000000026516
find values   : 0.01640000000005415
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000575999999995247

Building tree 22 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0751990000000049
statistics    : 0.00011899999999798183
test value    : 0.05312900000000553
eval split    : 0.0010770000000235314
example values: 0.01336299999996271
find values   : 0.01618600000007575
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005400000000079785

Building tree 22 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07647899999999908
statistics    : 0.00011900000000508726
test value    : 0.05358300000000327
eval split    : 0.0011050000000452087
example values: 0.013637000000016997
find values   : 0.016284000000140963
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005450000000024602

Building tree 22 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07531600000000083
statistics    : 0.00011800000000050659
test value    : 0.05304000000002418
eval split    : 0.001035000000008779
example values: 0.013400999999930718
find values   : 0.016105000000159464
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005209999999991055

Building tree 23 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07497200000000248
statistics    : 0.00011800000000050659
test value    : 0.05294300000004881
eval split    : 0.0010619999999761376
example values: 0.013392999999936706
find values   : 0.01608000000008758
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005379999999988172

Building tree 23 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07544800000000151
statistics    : 0.00014399999999881175
test value    : 0.05295900000002263
eval split    : 0.0010230000000461814
example values: 0.01344500000000437
find values   : 0.016017000000083215
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004999999999881766

Building tree 23 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07630400000000037
statistics    : 0.00011799999999340116
test value    : 0.05337700000000467
eval split    : 0.0010879999999815482
example values: 0.013674999999928161
find values   : 0.016164999999936924
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005470000000045161

Building tree 23 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08056600000000458
statistics    : 0.00013299999999105694
test value    : 0.058539999999950965
eval split    : 0.001044999999976426
example values: 0.01361300000006338
find values   : 0.016208999999946627
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005280000000027485

Building tree 23 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.075129000000004
statistics    : 0.00011799999999340116
test value    : 0.053319999999970946
eval split    : 0.001031999999931088
example values: 0.013671000000044842
find values   : 0.01613100000009382
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005199999999945248

Building tree 24 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07494000000000511
statistics    : 0.00012200000000461841
test value    : 0.05286099999997873
eval split    : 0.0010579999999791312
example values: 0.013438000000007833
find values   : 0.01593700000017151
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005340000000018108

Building tree 24 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07505299999999693
statistics    : 0.00011700000000303135
test value    : 0.05314899999998346
eval split    : 0.001052999999991755
example values: 0.013497000000050718
find values   : 0.016225999999832652
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005350000000063915

Building tree 24 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07527699999999982
statistics    : 0.00014600000000086766
test value    : 0.05309099999998779
eval split    : 0.001069999999998572
example values: 0.013528000000086138
find values   : 0.016058999999842172
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000534999999999286

Building tree 24 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07577200000000062
statistics    : 0.00013400000000274304
test value    : 0.05343399999999576
eval split    : 0.0010639999999426664
example values: 0.013563999999995247
find values   : 0.016272000000029152
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005310000000093851

Building tree 24 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07613099999999662
statistics    : 0.00012099999999293232
test value    : 0.05347299999999677
eval split    : 0.0011400000000136856
example values: 0.0136480000000887
find values   : 0.016208000000126788
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005629999999925417

Building tree 25 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07503900000000385
statistics    : 0.00012700000000620548
test value    : 0.05302600000001689
eval split    : 0.0010459999999739011
example values: 0.013489000000006968
find values   : 0.016129999999975553
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005240000000057421

Building tree 25 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07701399999999836
statistics    : 0.00013200000000068712
test value    : 0.05364400000002689
eval split    : 0.0011580000000535051
example values: 0.013565999999961775
find values   : 0.01633400000009999
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006270000000014875

Building tree 25 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07940999999999576
statistics    : 0.00013299999999816237
test value    : 0.05432900000002405
eval split    : 0.0011750000000176897
example values: 0.013774000000147169
find values   : 0.01640000000013231
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000560000000000116

Building tree 25 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07798999999999978
statistics    : 0.00014999999999787406
test value    : 0.0542989999999719
eval split    : 0.001172000000025264
example values: 0.013823999999857506
find values   : 0.016525000000036982
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006050000000001887

Building tree 25 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08479899999999674
statistics    : 0.0001339999999956376
test value    : 0.05427600000005128
eval split    : 0.001139999999971053
example values: 0.013933999999885316
find values   : 0.016372999999880733
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005730000000028213

Building tree 26 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07775200000000382
statistics    : 0.00012699999999910005
test value    : 0.0537350000000103
eval split    : 0.001097000000001458
example values: 0.013713000000244335
find values   : 0.016233999999933246
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005420000000100345

Building tree 26 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07725100000000396
statistics    : 0.00013099999999610645
test value    : 0.053681999999973584
eval split    : 0.0011269999999825586
example values: 0.013711999999991065
find values   : 0.016411000000111642
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005919999999974834

Building tree 26 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07708399999999926
statistics    : 0.0001390000000043301
test value    : 0.053629999999991185
eval split    : 0.0011319999999699348
example values: 0.013592999999971767
find values   : 0.016164999999872975
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000056343

Building tree 26 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0768149999999963
statistics    : 0.00014200000000386126
test value    : 0.053359000000035905
eval split    : 0.0011060000000000514
example values: 0.013461999999947238
find values   : 0.0161699999999243
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005729999999957158

Building tree 26 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07667200000000207
statistics    : 0.00014000000000891077
test value    : 0.053504000000010876
eval split    : 0.001103000000028942
example values: 0.013546000000047798
find values   : 0.016259999999959973
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005590000000026407

Building tree 27 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07704199999999872
statistics    : 0.0001310000000103173
test value    : 0.05359300000002776
eval split    : 0.001046999999999798
example values: 0.013649000000107492
find values   : 0.016171999999848197
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005150000000000432

Building tree 27 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07778499999999866
statistics    : 0.0001299999999986312
test value    : 0.05382499999999624
eval split    : 0.0011860000000538662
example values: 0.013723999999939451
find values   : 0.01636199999991561
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005920000000045889

Building tree 27 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0781509999999983
statistics    : 0.00012699999999910005
test value    : 0.05408700000000266
eval split    : 0.0011440000000391137
example values: 0.013743000000019379
find values   : 0.016591999999803875
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005999999999986017

Building tree 27 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07617899999999622
statistics    : 0.00013200000000068712
test value    : 0.05325799999999958
eval split    : 0.0010750000000072646
example values: 0.013398000000059085
find values   : 0.01625800000001476
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005479999999948859

Building tree 27 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08338299999999776
statistics    : 0.0001270000000133109
test value    : 0.053164999999957274
eval split    : 0.0011150000000128557
example values: 0.013491999999978077
find values   : 0.01610999999999052
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005710000000007653

Building tree 28 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.08176999999999879
statistics    : 5.300000000119098e-05
test value    : 0.05934599999998369
eval split    : 0.0010509999999968045
example values: 0.013574999999825366
find values   : 0.01620899999984715
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005199999999874194

Building tree 28 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07618299999999323
statistics    : 0.00017300000000375348
test value    : 0.05354500000004947
eval split    : 0.001126999999939926
example values: 0.0135170000000997
find values   : 0.01632199999993844
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000598999999994021

Building tree 28 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07596199999999698
statistics    : 0.00012599999999451938
test value    : 0.053226000000002216
eval split    : 0.0011249999999805027
example values: 0.01349000000003997
find values   : 0.01603999999987593
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005730000000028213

Building tree 28 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08246299999999707
statistics    : 0.00015300000000451064
test value    : 0.057279999999998665
eval split    : 0.0012719999999788456
example values: 0.014679000000072051
find values   : 0.01743400000000861
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006440000000011992

Building tree 28 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07835899999999896
statistics    : 0.00013200000000068712
test value    : 0.0543829999999943
eval split    : 0.001146999999974696
example values: 0.013703000000035104
find values   : 0.016673999999831324
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005920000000045889

Building tree 29 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07721500000000248
statistics    : 0.0001330000000052678
test value    : 0.05414200000002012
eval split    : 0.0011379999999761026
example values: 0.013994999999930258
find values   : 0.01640000000013231
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005939999999995393

Building tree 29 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07698500000000053
statistics    : 0.00014300000000844193
test value    : 0.05407699999999238
eval split    : 0.0010779999999641632
example values: 0.013589000000116869
find values   : 0.016523999999840555
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005450000000095656

Building tree 29 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07720999999999378
statistics    : 0.00016800000000216642
test value    : 0.05403699999995126
eval split    : 0.0011199999999931265
example values: 0.01363199999995146
find values   : 0.016441000000014583
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005779999999973029

Building tree 29 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07668100000000067
statistics    : 0.00014200000000386126
test value    : 0.05364999999999753
eval split    : 0.001127999999965823
example values: 0.013514000000078852
find values   : 0.016251999999830957
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000568999999991604

Building tree 29 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07732999999999635
statistics    : 0.0001239999999995689
test value    : 0.05413000000000068
eval split    : 0.0011179999999910706
example values: 0.013800000000124157
find values   : 0.016356999999885602
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005679999999941288

Building tree 30 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08000499999999988
statistics    : 0.00013099999999610645
test value    : 0.05530699999997779
eval split    : 0.0012389999999484758
example values: 0.014258000000154425
find values   : 0.016592000000102303
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000633999999998025

Building tree 30 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.08267899999999884
statistics    : 5.200000000371574e-05
test value    : 0.05979099999998283
eval split    : 0.0010380000000012046
example values: 0.013754999999832762
find values   : 0.016266000000037195
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00048599999999510146

Building tree 30 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07676599999999922
statistics    : 0.00016599999999300508
test value    : 0.05370599999997694
eval split    : 0.0011180000000123869
example values: 0.013541999999873156
find values   : 0.01628399999999175
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000588000000000477

Building tree 30 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07683500000000265
statistics    : 0.000125000000011255
test value    : 0.05370900000000489
eval split    : 0.0011200000000215482
example values: 0.013680999999905907
find values   : 0.01644199999989837
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005910000000000082

Building tree 30 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07643499999999648
statistics    : 0.0001350000000073237
test value    : 0.053698999999973296
eval split    : 0.0011119999999849028
example values: 0.013616000000169493
find values   : 0.016328999999878135
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005849999999938404

Building tree 31 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07670099999999991
statistics    : 0.0001299999999986312
test value    : 0.053583999999979426
eval split    : 0.0011640000000312511
example values: 0.013598999999771877
find values   : 0.01631200000014843
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006249999999994316

Building tree 31 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07691099999999551
statistics    : 0.00012699999999910005
test value    : 0.05358900000000233
eval split    : 0.0012019999999921538
example values: 0.013587999999785438
find values   : 0.016209000000031892
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006350000000026057

Building tree 31 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07727300000000525
statistics    : 0.00013200000000068712
test value    : 0.05426199999999426
eval split    : 0.0010820000000251184
example values: 0.013804000000000372
find values   : 0.016205999999797882
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005409999999912429

Building tree 31 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07559899999999686
statistics    : 0.00011900000000508726
test value    : 0.05335599999997953
eval split    : 0.0010550000000009163
example values: 0.013507000000018365
find values   : 0.01614300000011326
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005339999999947054

Building tree 31 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0756060000000005
statistics    : 0.00011900000000508726
test value    : 0.05331400000005715
eval split    : 0.0010620000000258756
example values: 0.013517000000078383
find values   : 0.01612300000011402
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005209999999991055

Building tree 32 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.077537999999997
statistics    : 0.00012500000000414957
test value    : 0.0540139999999667
eval split    : 0.0011220000000093933
example values: 0.013890000000017722
find values   : 0.016359999999991715
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005429999999932988

Building tree 32 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08247100000000529
statistics    : 0.00013899999999722468
test value    : 0.05944700000004133
eval split    : 0.0011069999999975266
example values: 0.01373400000035474
find values   : 0.02187699999982584
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005540000000010536

Building tree 32 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07746000000000208
statistics    : 0.00012400000000667433
test value    : 0.0540210000000414
eval split    : 0.0010680000000036216
example values: 0.013643000000207905
find values   : 0.01629600000001119
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005260000000006926

Building tree 32 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07694399999999746
statistics    : 0.00012300000000209366
test value    : 0.05389400000002098
eval split    : 0.0011730000000227392
example values: 0.01363200000035647
find values   : 0.01633699999966609
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006239999999948509

Building tree 32 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07616399999999857
statistics    : 0.0001370000000022742
test value    : 0.05375300000000749
eval split    : 0.0010259999999959746
example values: 0.013697999999948252
find values   : 0.016257999999886863
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005009999999998627

Building tree 33 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07591700000000401
statistics    : 0.00012699999999199463
test value    : 0.053536000000008244
eval split    : 0.0010749999999930537
example values: 0.013429999999864606
find values   : 0.01619900000008556
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005519999999989977

Building tree 33 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0761189999999985
statistics    : 0.00012199999999751299
test value    : 0.053586000000009903
eval split    : 0.0010630000000020345
example values: 0.013737999999925421
find values   : 0.01632999999992535
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000514000000002568

Building tree 33 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07557699999999556
statistics    : 0.00012200000000461841
test value    : 0.05336499999998523
eval split    : 0.0010600000000096088
example values: 0.013483000000043432
find values   : 0.016231999999909874
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005250000000032173

Building tree 33 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07560700000000509
statistics    : 0.00011800000000050659
test value    : 0.053315000000004886
eval split    : 0.0010679999999894108
example values: 0.013676999999994166
find values   : 0.01614600000009858
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00054599999999283

Building tree 33 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07639600000000257
statistics    : 0.00012599999999451938
test value    : 0.05367300000005315
eval split    : 0.0010950000000065074
example values: 0.013617999999866015
find values   : 0.016130000000295297
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005389999999962924

Building tree 34 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07911599999999908
statistics    : 0.00014299999999423108
test value    : 0.055023999999981754
eval split    : 0.0011359999999598358
example values: 0.014085999999906562
find values   : 0.016630000000048994
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005730000000028213

Building tree 34 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08409000000000333
statistics    : 0.00012800000000368073
test value    : 0.05358300000001037
eval split    : 0.0011189999999814404
example values: 0.013493999999944606
find values   : 0.016358000000046502
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005760000000023524

Building tree 34 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07656200000000268
statistics    : 0.00016499999999552983
test value    : 0.05329400000000817
eval split    : 0.0011480000000290147
example values: 0.013564999999978511
find values   : 0.016105000000031566
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006149999999962574

Building tree 34 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08307800000000043
statistics    : 0.00015300000000451064
test value    : 0.059676999999986435
eval split    : 0.0011479999999863821
example values: 0.013704999999944789
find values   : 0.01632300000007092
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006170000000125242

Building tree 34 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07607800000000253
statistics    : 6.199999999978445e-05
test value    : 0.05339499999999475
eval split    : 0.0011379999999618917
example values: 0.013545999999806213
find values   : 0.016237000000195678
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000554999999984318

Building tree 35 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07709300000000496
statistics    : 0.0001430000000013365
test value    : 0.05348000000000752
eval split    : 0.0011989999999855172
example values: 0.013586999999922966
find values   : 0.01628599999989433
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006589999999917495

Building tree 35 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07981099999999941
statistics    : 0.00014600000000797309
test value    : 0.05463999999997782
eval split    : 0.001216000000020756
example values: 0.013829000000100677
find values   : 0.016712000000055127
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005900000000025329

Building tree 35 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07845000000000368
statistics    : 0.00013400000000984846
test value    : 0.054589999999997474
eval split    : 0.0011160000000387527
example values: 0.01392299999994151
find values   : 0.016824000000127626
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005590000000026407

Building tree 35 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07681399999999883
statistics    : 0.00012800000000368073
test value    : 0.053617000000009796
eval split    : 0.0011150000000270666
example values: 0.013630999999676874
find values   : 0.016343000000148322
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005619999999950664

Building tree 35 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0767280000000028
statistics    : 0.00014000000000180535
test value    : 0.05366399999999061
eval split    : 0.001151000000014335
example values: 0.01376700000013642
find values   : 0.016105000000173675
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006019999999935521

Building tree 36 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07704900000000237
statistics    : 0.00016100000000562886
test value    : 0.053763999999965506
eval split    : 0.0011070000000117375
example values: 0.013578999999829477
find values   : 0.016317000000086068
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005699999999961847

Building tree 36 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07680100000000323
statistics    : 0.00013100000000321188
test value    : 0.05333199999998328
eval split    : 0.0011780000000314317
example values: 0.013472999999763147
find values   : 0.01624100000009321
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006079999999997199

Building tree 36 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07774599999999765
statistics    : 0.00014100000000638602
test value    : 0.05415699999999646
eval split    : 0.001190999999984399
example values: 0.013607999999621256
find values   : 0.016463000000086936
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006299999999939132

Building tree 36 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07817099999999755
statistics    : 0.00012500000000414957
test value    : 0.05419900000001121
eval split    : 0.0011669999999739389
example values: 0.01376599999996131
find values   : 0.016525000000015666
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006019999999935521

Building tree 36 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08232200000000489
statistics    : 0.00012399999999246347
test value    : 0.05361600000001232
eval split    : 0.001142000000008636
example values: 0.013624999999969134
find values   : 0.016269999999856566
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005639999999971224

Building tree 37 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07554400000000072
statistics    : 5.099999999913507e-05
test value    : 0.053311000000000774
eval split    : 0.0010630000000020345
example values: 0.013513999999936743
find values   : 0.016244999999869947
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005439999999978795

Building tree 37 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07631700000000308
statistics    : 0.0001290000000082614
test value    : 0.05362399999999212
eval split    : 0.0010719999999935226
example values: 0.013791000000139775
find values   : 0.016260999999836656
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005519999999989977

Building tree 37 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07612199999999802
statistics    : 0.00012499999998993871
test value    : 0.05341099999998988
eval split    : 0.0010799999999591137
example values: 0.013529999999931874
find values   : 0.01621500000002385
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005500000000111527

Building tree 37 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07609399999999766
statistics    : 0.00012499999999704414
test value    : 0.05349299999998891
eval split    : 0.001082999999994172
example values: 0.013598999999963723
find values   : 0.01629699999997314
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00055799999999806

Building tree 37 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07678400000000352
statistics    : 0.00014100000000638602
test value    : 0.053780999999986534
eval split    : 0.0011079999999594747
example values: 0.013684999999902914
find values   : 0.01631499999997743
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005619999999950664

Building tree 38 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07844000000000051
statistics    : 0.00012800000000368073
test value    : 0.05417400000004591
eval split    : 0.0011809999999812248
example values: 0.013869000000070741
find values   : 0.016474999999950057
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006169999999912079

Building tree 38 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07647999999999655
statistics    : 0.00013099999999610645
test value    : 0.05364500000001726
eval split    : 0.0011000000000436216
example values: 0.013638000000071315
find values   : 0.016247000000085166
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005710000000007653

Building tree 38 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0766139999999993
statistics    : 0.0001260000000016248
test value    : 0.05360700000002794
eval split    : 0.0011519999999549668
example values: 0.013682000000052597
find values   : 0.016317000000015014
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006120000000038317

Building tree 38 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07904299999999864
statistics    : 0.0001330000000052678
test value    : 0.05471100000002593
eval split    : 0.0012000000000114142
example values: 0.01389399999996499
find values   : 0.016594000000090148
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00059500000000412

Building tree 38 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07808399999999693
statistics    : 0.0001319999999935817
test value    : 0.0539500000000217
eval split    : 0.0011789999999933798
example values: 0.013855999999712765
find values   : 0.016364000000265833
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005899999999954275

Building tree 39 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.09151099999999701
statistics    : 0.0001409999999992806
test value    : 0.06017200000000855
eval split    : 0.0012379999999723168
example values: 0.015559999999624097
find values   : 0.01823500000018896
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006439999999940937

Building tree 39 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07770200000000216
statistics    : 0.0001260000000016248
test value    : 0.05410099999998863
eval split    : 0.0010920000000140817
example values: 0.013726999999811085
find values   : 0.01643399999990436
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005459999999999354

Building tree 39 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07678500000000099
statistics    : 0.00013599999999769352
test value    : 0.05364400000001268
eval split    : 0.0011800000000121713
example values: 0.013766000000046574
find values   : 0.016325999999999397
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006050000000001887

Building tree 39 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07863199999999892
statistics    : 0.00012899999999405054
test value    : 0.055179999999985796
eval split    : 0.0011510000000285459
example values: 0.014009999999892386
find values   : 0.016823999999914463
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005890000000050577

Building tree 39 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07641399999999976
statistics    : 0.00012400000000667433
test value    : 0.05344099999996388
eval split    : 0.0011019999999746233
example values: 0.013536999999928412
find values   : 0.016225999999875285
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005749999999977717

Building tree 40 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07645399999999825
statistics    : 0.00014000000000891077
test value    : 0.053511000000035835
eval split    : 0.0010840000000484906
example values: 0.01363199999985909
find values   : 0.016290999999853284
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005329999999972301

Building tree 40 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07593700000000325
statistics    : 0.00013600000000479895
test value    : 0.053386000000003264
eval split    : 0.001104000000005101
example values: 0.013629000000129565
find values   : 0.016269999999998674
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005779999999901975

Building tree 40 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07550200000000018
statistics    : 5.200000000371574e-05
test value    : 0.05340699999997156
eval split    : 0.0009909999999706542
example values: 0.013559000000043397
find values   : 0.016216000000071062
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004580000000018458

Building tree 40 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07623800000000358
statistics    : 0.00012499999998993871
test value    : 0.05368200000000911
eval split    : 0.0011190000000311784
example values: 0.013761999999935881
find values   : 0.01631199999983579
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005810000000110449

Building tree 40 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07558300000000173
statistics    : 0.0001339999999956376
test value    : 0.05331499999999778
eval split    : 0.001093000000011557
example values: 0.013425000000069076
find values   : 0.01619899999988661
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005619999999950664

Building tree 41 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07554300000000325
statistics    : 0.00013600000000479895
test value    : 0.053294999999955905
eval split    : 0.0010399999999890497
example values: 0.013533000000109041
find values   : 0.01620699999983799
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0004930000000058499

Building tree 41 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08189499999999583
statistics    : 0.0001260000000016248
test value    : 0.059342000000015105
eval split    : 0.0010650000000111959
example values: 0.013723999999918135
find values   : 0.01629200000011366
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005270000000052733

Building tree 41 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07674000000000092
statistics    : 0.00013699999999516876
test value    : 0.05354999999998711
eval split    : 0.0011049999999812599
example values: 0.013460000000094396
find values   : 0.01632599999991413
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005479999999948859

Building tree 41 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0761450000000039
statistics    : 0.00012299999999498823
test value    : 0.05362399999999212
eval split    : 0.0010870000000053892
example values: 0.013444999999940421
find values   : 0.016188000000177283
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000061032

Building tree 41 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07690900000000056
statistics    : 0.00013200000000068712
test value    : 0.05374600000002516
eval split    : 0.0011179999999768597
example values: 0.01367800000030428
find values   : 0.016339999999935628
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005589999999955353

Building tree 42 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08677700000000499
statistics    : 0.0001260000000016248
test value    : 0.05901500000000226
eval split    : 0.0011789999999862744
example values: 0.015154999999836605
find values   : 0.0180080000000018
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005809999999897286

Building tree 42 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07684400000000124
statistics    : 0.0001200000000025625
test value    : 0.053925999999975716
eval split    : 0.0010519999999729635
example values: 0.013737000000105581
find values   : 0.01640599999994663
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000512000000000512

Building tree 42 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08359000000000094
statistics    : 0.00012300000000209366
test value    : 0.05389899999997283
eval split    : 0.0010919999999714491
example values: 0.01372799999990093
find values   : 0.016283000000086645
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005600000000072214

Building tree 42 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0758559999999946
statistics    : 0.00012300000000209366
test value    : 0.053391999999973905
eval split    : 0.0010790000000255873
example values: 0.013762999999983094
find values   : 0.016133000000024822
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005340000000018108

Building tree 42 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07708799999999627
statistics    : 0.0001339999999956376
test value    : 0.053961999999977195
eval split    : 0.0011590000000083478
example values: 0.013700999999805674
find values   : 0.01630299999980167
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006089999999971951

Building tree 43 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07838300000000231
statistics    : 0.00014099999999217516
test value    : 0.05425600000001651
eval split    : 0.0013390000000157443
example values: 0.013852000000021292
find values   : 0.016547999999772856
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007509999999868455

Building tree 43 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08542200000000122
statistics    : 0.0001660000000001105
test value    : 0.06158699999999584
eval split    : 0.0011560000000230275
example values: 0.02005499999985716
find values   : 0.01684200000001823
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005580000000051655

Building tree 43 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0824970000000036
statistics    : 0.00014700000000544833
test value    : 0.05548300000000239
eval split    : 0.0011280000000084556
example values: 0.013996000000169317
find values   : 0.016825999999873886
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005719999999982406

Building tree 43 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07681800000000294
statistics    : 0.00013200000000068712
test value    : 0.05374200000000684
eval split    : 0.0011160000000387527
example values: 0.01370799999986616
find values   : 0.01622200000001328
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005850000000009459

Building tree 43 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08143799999999857
statistics    : 0.00016900000000674709
test value    : 0.05656800000001283
eval split    : 0.0013270000000318305
example values: 0.014321999999857837
find values   : 0.017516000000043164
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006849999999971601

Building tree 44 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0794700000000006
statistics    : 0.00014800000000292357
test value    : 0.054401000000005695
eval split    : 0.0014910000000725177
example values: 0.013813999999889859
find values   : 0.016636000000062268
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0008719999999939887

Building tree 44 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07893500000000131
statistics    : 0.00016899999999964166
test value    : 0.054629000000026906
eval split    : 0.0011910000000270315
example values: 0.013765000000027783
find values   : 0.016651000000059923
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005499999999898364

Building tree 44 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08027299999999826
statistics    : 0.00013099999999610645
test value    : 0.05485399999999885
eval split    : 0.0012870000000475557
example values: 0.013953000000270777
find values   : 0.016658999999791035
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006769999999960419

Building tree 44 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08238999999999663
statistics    : 0.00012699999999910005
test value    : 0.05649900000001651
eval split    : 0.0012210000000081322
example values: 0.01440599999984471
find values   : 0.017254000000043845
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006050000000001887

Building tree 44 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08337099999999964
statistics    : 0.0001260000000016248
test value    : 0.05362300000000886
eval split    : 0.0011350000000334148
example values: 0.013631000000046356
find values   : 0.01608400000009169
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005940000000066448

Building tree 45 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07604800000000012
statistics    : 0.0001370000000022742
test value    : 0.05340400000002177
eval split    : 0.001097000000001458
example values: 0.013596999999997195
find values   : 0.01625299999986396
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005559999999960041

Building tree 45 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07885699999999929
statistics    : 0.00013000000000573664
test value    : 0.05436400000004227
eval split    : 0.0012010000000088894
example values: 0.013830000000112364
find values   : 0.01660599999990353
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005890000000050577

Building tree 45 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07873800000000131
statistics    : 0.00012700000000620548
test value    : 0.054591999999992424
eval split    : 0.0011289999999490874
example values: 0.013840000000072905
find values   : 0.01673699999999201
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005679999999941288

Building tree 45 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07712899999999934
statistics    : 0.00015899999999646752
test value    : 0.05377200000001636
eval split    : 0.001105999999992946
example values: 0.013606000000123686
find values   : 0.016388999999932707
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005639999999971224

Building tree 45 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0770079999999993
statistics    : 0.00012700000000620548
test value    : 0.053729999999994504
eval split    : 0.0012880000000166092
example values: 0.013604000000086103
find values   : 0.016420000000060497
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0007429999999999382

Building tree 46 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07660599999999818
statistics    : 0.00013200000000068712
test value    : 0.05349100000000817
eval split    : 0.0011079999999950019
example values: 0.013498000000168986
find values   : 0.016306999999983418
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000580999999996834

Building tree 46 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07621999999999929
statistics    : 0.00012499999998993871
test value    : 0.05351400000003537
eval split    : 0.001097000000036985
example values: 0.013605000000140421
find values   : 0.016258999999934076
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005669999999966535

Building tree 46 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07648300000000319
statistics    : 0.00012500000000414957
test value    : 0.05354700000000179
eval split    : 0.001077000000016426
example values: 0.013556999999835284
find values   : 0.01634899999993422
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000061032

Building tree 46 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07632599999999456
statistics    : 0.00013000000000573664
test value    : 0.053286000000014155
eval split    : 0.0011660000000119908
example values: 0.013449000000015587
find values   : 0.01638300000009707
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006050000000001887

Building tree 46 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08253799999999956
statistics    : 0.00012599999999451938
test value    : 0.05963800000000674
eval split    : 0.0011130000000747486
example values: 0.013611000000103957
find values   : 0.022219999999883555
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005709999999936599

Building tree 47 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07835800000000148
statistics    : 0.00020699999999607144
test value    : 0.0535549999999958
eval split    : 0.00116999999997347
example values: 0.013688000000037448
find values   : 0.016199000000092667
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006070000000022446

Building tree 47 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07765400000000255
statistics    : 0.00013099999999610645
test value    : 0.054069000000019685
eval split    : 0.0011710000000277887
example values: 0.01374000000007669
find values   : 0.016541000000088957
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005700000000032901

Building tree 47 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0763639999999981
statistics    : 0.00014199999999675583
test value    : 0.053537999999953456
eval split    : 0.0010920000000140817
example values: 0.013533999999900459
find values   : 0.01628899999998623
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005590000000026407

Building tree 47 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07617699999999417
statistics    : 0.00013099999999610645
test value    : 0.05327200000000687
eval split    : 0.0011050000000025761
example values: 0.013505999999871676
find values   : 0.016184999999957483
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005740000000074019

Building tree 47 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.076039999999999
statistics    : 0.00012300000000209366
test value    : 0.0535990000000055
eval split    : 0.0011350000000902583
example values: 0.013491999999907023
find values   : 0.016413999999969064
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005520000000061032

Building tree 48 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07640699999999612
statistics    : 0.00012900000000115597
test value    : 0.0535380000000103
eval split    : 0.0011170000000078062
example values: 0.013557999999861181
find values   : 0.016274999999950523
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005799999999922534

Building tree 48 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07596600000000109
statistics    : 0.00014300000000844193
test value    : 0.0533670000000086
eval split    : 0.0011119999999849028
example values: 0.01345399999993191
find values   : 0.016216000000078168
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005689999999987094

Building tree 48 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07756600000000446
statistics    : 0.0001279999999965753
test value    : 0.05382200000003934
eval split    : 0.001155000000004236
example values: 0.013737000000070054
find values   : 0.01638799999982865
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005700000000032901

Building tree 48 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07685699999999684
statistics    : 0.00015199999999992997
test value    : 0.053723999999959915
eval split    : 0.0010709999999676256
example values: 0.013605000000012524
find values   : 0.016253000000105544
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005360000000038667

Building tree 48 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08108700000000368
statistics    : 0.0001189999999908764
test value    : 0.05900399999995898
eval split    : 0.0010890000000145506
example values: 0.013723999999996295
find values   : 0.016151000000071747
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005550000000056343

Building tree 49 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07560499999999593
statistics    : 0.00011999999999545707
test value    : 0.053424000000028116
eval split    : 0.0010660000000157765
example values: 0.013575999999972055
find values   : 0.016190999999913913
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005510000000015225

Building tree 49 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.08284199999999942
statistics    : 0.00011800000000761202
test value    : 0.05918899999999638
eval split    : 0.0011549999999758143
example values: 0.015114000000117755
find values   : 0.017924000000064666
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005489999999994666

Building tree 49 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07573499999999456
statistics    : 0.00013599999999769352
test value    : 0.05322099999998642
eval split    : 0.0010469999999855872
example values: 0.01354400000009548
find values   : 0.01621500000000964
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005280000000027485

Building tree 49 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0754089999999934
statistics    : 0.00012599999999451938
test value    : 0.053210999999997455
eval split    : 0.0010769999999880042
example values: 0.013358000000053494
find values   : 0.016151999999898692
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005230000000011614

Building tree 49 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07604500000000058
statistics    : 0.0001200000000025625
test value    : 0.053214999999987356
eval split    : 0.0010840000000413852
example values: 0.013495999999832975
find values   : 0.016111999999949944
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.000534999999999286

Building tree 50 for class 1
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07536300000000296
statistics    : 0.00011699999999592592
test value    : 0.05317900000000009
eval split    : 0.0010679999999752
example values: 0.013401999999999248
find values   : 0.016198999999971875
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005319999999997549

Building tree 50 for class 2
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07671699999999504
statistics    : 0.00012299999999498823
test value    : 0.053710999999943
eval split    : 0.0010499999999851184
example values: 0.013692999999818767
find values   : 0.016387999999942338
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005009999999927572

Building tree 50 for class 3
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.0830750000000009
statistics    : 0.00014199999999675583
test value    : 0.05332400000009585
eval split    : 0.0010869999999627566
example values: 0.01346299999988787
find values   : 0.01625099999994717
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0005649999999945976

Building tree 50 for class 4
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
induce        : 0.07487599999999617
statistics    : 5.099999999913507e-05
test value    : 0.053048000000011086
eval split    : 0.0009950000000102932
example values: 0.013435000000036723
find values   : 0.01601000000006536
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.00046400000000090813

Building tree 50 for class 5
Existential tests only ==> The allowed aggregates changed to {'count'}
  Building node on depth 1
    Building node on depth 2
    Building node on depth 2
induce        : 0.07500699999999938
statistics    : 0.00012500000000414957
test value    : 0.05297400000001318
eval split    : 0.0011849999999995475
example values: 0.01343799999995099
find values   : 0.016113000000061106
nominal tests : 0
nom. t. time  : 0
numeric tests : 3
num t. time   : 0.0006570000000039045


